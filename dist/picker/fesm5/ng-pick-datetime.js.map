{"version":3,"file":"ng-pick-datetime.js","sources":["ng://ng-pick-datetime/lib/date-time/date-time-picker-intl.service.ts","ng://ng-pick-datetime/lib/date-time/adapter/date-time-adapter.class.ts","ng://ng-pick-datetime/lib/date-time/adapter/date-time-format.class.ts","ng://ng-pick-datetime/lib/date-time/calendar.component.ts","ng://ng-pick-datetime/lib/date-time/timer.component.ts","ng://ng-pick-datetime/lib/date-time/date-time-picker.animations.ts","ng://ng-pick-datetime/lib/date-time/date-time-picker-container.component.ts","ng://ng-pick-datetime/lib/date-time/date-time.class.ts","ng://ng-pick-datetime/lib/dialog/dialog-config.class.ts","ng://ng-pick-datetime/lib/dialog/dialog-ref.class.ts","ng://ng-pick-datetime/lib/dialog/dialog-container.component.ts","ng://ng-pick-datetime/lib/utils/object.utils.ts","ng://ng-pick-datetime/lib/dialog/dialog.service.ts","ng://ng-pick-datetime/lib/date-time/date-time-picker.component.ts","ng://ng-pick-datetime/lib/date-time/date-time-picker-trigger.directive.ts","ng://ng-pick-datetime/lib/date-time/date-time-picker-input.directive.ts","ng://ng-pick-datetime/lib/date-time/calendar-body.component.ts","ng://ng-pick-datetime/lib/date-time/calendar-month-view.component.ts","ng://ng-pick-datetime/lib/date-time/calendar-year-view.component.ts","ng://ng-pick-datetime/lib/date-time/calendar-multi-year-view.component.ts","ng://ng-pick-datetime/lib/date-time/timer-box.component.ts","ng://ng-pick-datetime/lib/date-time/numberedFixLen.pipe.ts","ng://ng-pick-datetime/lib/date-time/date-time-inline.component.ts","ng://ng-pick-datetime/lib/dialog/dialog.module.ts","ng://ng-pick-datetime/lib/date-time/date-time.module.ts","ng://ng-pick-datetime/lib/date-time/adapter/native-date-time-adapter.class.ts","ng://ng-pick-datetime/lib/date-time/adapter/native-date-time-format.class.ts","ng://ng-pick-datetime/lib/date-time/adapter/native-date-time.module.ts"],"sourcesContent":["/**\r\n * date-time-picker-intl.service\r\n */\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class OwlDateTimeIntl {\r\n\r\n    /**\r\n     * Stream that emits whenever the labels here are changed. Use this to notify\r\n     * components if the labels have changed after initialization.\r\n     */\r\n    readonly changes: Subject<void> = new Subject<void>();\r\n\r\n    /** A label for the up second button (used by screen readers).  */\r\n    upSecondLabel = 'Add a second';\r\n\r\n    /** A label for the down second button (used by screen readers).  */\r\n    downSecondLabel = 'Minus a second';\r\n\r\n    /** A label for the up minute button (used by screen readers).  */\r\n    upMinuteLabel = 'Add a minute';\r\n\r\n    /** A label for the down minute button (used by screen readers).  */\r\n    downMinuteLabel = 'Minus a minute';\r\n\r\n    /** A label for the up hour button (used by screen readers).  */\r\n    upHourLabel = 'Add a hour';\r\n\r\n    /** A label for the down hour button (used by screen readers).  */\r\n    downHourLabel = 'Minus a hour';\r\n\r\n    /** A label for the previous month button (used by screen readers). */\r\n    prevMonthLabel = 'Previous month';\r\n\r\n    /** A label for the next month button (used by screen readers). */\r\n    nextMonthLabel = 'Next month';\r\n\r\n    /** A label for the previous year button (used by screen readers). */\r\n    prevYearLabel = 'Previous year';\r\n\r\n    /** A label for the next year button (used by screen readers). */\r\n    nextYearLabel = 'Next year';\r\n\r\n    /** A label for the previous multi-year button (used by screen readers). */\r\n    prevMultiYearLabel: string = 'Previous 21 years';\r\n\r\n    /** A label for the next multi-year button (used by screen readers). */\r\n    nextMultiYearLabel: string = 'Next 21 years';\r\n\r\n    /** A label for the 'switch to month view' button (used by screen readers). */\r\n    switchToMonthViewLabel = 'Change to month view';\r\n\r\n    /** A label for the 'switch to year view' button (used by screen readers). */\r\n    switchToMultiYearViewLabel: string = 'Choose month and year';\r\n\r\n    /** A label for the cancel button */\r\n    cancelBtnLabel = 'Cancel';\r\n\r\n    /** A label for the set button */\r\n    setBtnLabel = 'Set';\r\n\r\n    /** A label for the range 'from' in picker info */\r\n    rangeFromLabel = 'From';\r\n\r\n    /** A label for the range 'to' in picker info */\r\n    rangeToLabel = 'To';\r\n\r\n    /** A label for the hour12 button (AM) */\r\n    hour12AMLabel = 'AM';\r\n\r\n    /** A label for the hour12 button (PM) */\r\n    hour12PMLabel = 'PM';\r\n}\r\n","/**\r\n * date-time-adapter.class\r\n */\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { inject, InjectionToken, LOCALE_ID } from '@angular/core';\r\n\r\n/** InjectionToken for date time picker that can be used to override default locale code. */\r\nexport const OWL_DATE_TIME_LOCALE = new InjectionToken<string>(\r\n    'OWL_DATE_TIME_LOCALE',\r\n    {\r\n        providedIn: 'root',\r\n        factory: OWL_DATE_TIME_LOCALE_FACTORY\r\n    }\r\n);\r\n\r\n/** @docs-private */\r\nexport function OWL_DATE_TIME_LOCALE_FACTORY(): string {\r\n    return inject(LOCALE_ID);\r\n}\r\n\r\n/** Provider for OWL_DATE_TIME_LOCALE injection token. */\r\nexport const OWL_DATE_TIME_LOCALE_PROVIDER = {\r\n    provide: OWL_DATE_TIME_LOCALE,\r\n    useExisting: LOCALE_ID\r\n};\r\n\r\nexport abstract class DateTimeAdapter<T> {\r\n    /** The locale to use for all dates. */\r\n    protected locale: any;\r\n\r\n    /** A stream that emits when the locale changes. */\r\n    protected _localeChanges = new Subject<void>();\r\n    get localeChanges(): Observable<void> {\r\n        return this._localeChanges;\r\n    }\r\n\r\n    /** total milliseconds in a day. */\r\n    protected readonly millisecondsInDay = 86400000;\r\n\r\n    /** total milliseconds in a minute. */\r\n    protected readonly milliseondsInMinute = 60000;\r\n\r\n    /**\r\n     * Get the year of the given date\r\n     */\r\n    abstract getYear(date: T): number;\r\n\r\n    /**\r\n     * Get the month of the given date\r\n     * 0 -- January\r\n     * 11 -- December\r\n     * */\r\n    abstract getMonth(date: T): number;\r\n\r\n    /**\r\n     * Get the day of the week of the given date\r\n     * 0 -- Sunday\r\n     * 6 -- Saturday\r\n     * */\r\n    abstract getDay(date: T): number;\r\n\r\n    /**\r\n     * Get the day num of the given date\r\n     */\r\n    abstract getDate(date: T): number;\r\n\r\n    /**\r\n     * Get the hours of the given date\r\n     */\r\n    abstract getHours(date: T): number;\r\n\r\n    /**\r\n     * Get the minutes of the given date\r\n     */\r\n    abstract getMinutes(date: T): number;\r\n\r\n    /**\r\n     * Get the seconds of the given date\r\n     */\r\n    abstract getSeconds(date: T): number;\r\n\r\n    /**\r\n     * Get the milliseconds timestamp of the given date\r\n     */\r\n    abstract getTime(date: T): number;\r\n\r\n    /**\r\n     * Gets the number of days in the month of the given date.\r\n     */\r\n    abstract getNumDaysInMonth(date: T): number;\r\n\r\n    /**\r\n     * Get the number of calendar days between the given dates.\r\n     * If dateLeft is before dateRight, it would return positive value\r\n     * If dateLeft is after dateRight, it would return negative value\r\n     */\r\n    abstract differenceInCalendarDays(dateLeft: T, dateRight: T): number;\r\n\r\n    /**\r\n     * Gets the name for the year of the given date.\r\n     */\r\n    abstract getYearName(date: T): string;\r\n\r\n    /**\r\n     * Get a list of month names\r\n     */\r\n    abstract getMonthNames(style: 'long' | 'short' | 'narrow'): string[];\r\n\r\n    /**\r\n     * Get a list of week names\r\n     */\r\n    abstract getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[];\r\n\r\n    /**\r\n     * Gets a list of names for the dates of the month.\r\n     */\r\n    abstract getDateNames(): string[];\r\n\r\n    /**\r\n     * Return a Date object as a string, using the ISO standard\r\n     */\r\n    abstract toIso8601(date: T): string;\r\n\r\n    /**\r\n     * Check if the give dates are equal\r\n     */\r\n    abstract isEqual(dateLeft: T, dateRight: T): boolean;\r\n\r\n    /**\r\n     * Check if the give dates are the same day\r\n     */\r\n    abstract isSameDay(dateLeft: T, dateRight: T): boolean;\r\n\r\n    /**\r\n     * Checks whether the given date is valid.\r\n     */\r\n    abstract isValid(date: T): boolean;\r\n\r\n    /**\r\n     * Gets date instance that is not valid.\r\n     */\r\n    abstract invalid(): T;\r\n\r\n    /**\r\n     * Checks whether the given object is considered a date instance by this DateTimeAdapter.\r\n     */\r\n    abstract isDateInstance(obj: any): boolean;\r\n\r\n    /**\r\n     * Add the specified number of years to the given date\r\n     */\r\n    abstract addCalendarYears(date: T, amount: number): T;\r\n\r\n    /**\r\n     * Add the specified number of months to the given date\r\n     */\r\n    abstract addCalendarMonths(date: T, amount: number): T;\r\n\r\n    /**\r\n     * Add the specified number of days to the given date\r\n     */\r\n    abstract addCalendarDays(date: T, amount: number): T;\r\n\r\n    /**\r\n     * Set the hours to the given date.\r\n     */\r\n    abstract setHours(date: T, amount: number): T;\r\n\r\n    /**\r\n     * Set the minutes to the given date.\r\n     */\r\n    abstract setMinutes(date: T, amount: number): T;\r\n\r\n    /**\r\n     * Set the seconds to the given date.\r\n     */\r\n    abstract setSeconds(date: T, amount: number): T;\r\n\r\n    /**\r\n     * Creates a date with the given year, month, date, hour, minute and second. Does not allow over/under-flow of the\r\n     * month and date.\r\n     */\r\n    abstract createDate(year: number, month: number, date: number): T;\r\n    abstract createDate(\r\n        year: number,\r\n        month: number,\r\n        date: number,\r\n        hours: number,\r\n        minutes: number,\r\n        seconds: number\r\n    ): T;\r\n\r\n    /**\r\n     * Clone the given date\r\n     */\r\n    abstract clone(date: T): T;\r\n\r\n    /**\r\n     * Get a new moment\r\n     * */\r\n    abstract now(): T;\r\n\r\n    /**\r\n     * Formats a date as a string according to the given format.\r\n     */\r\n    abstract format(date: T, displayFormat: any): string;\r\n\r\n    /**\r\n     * Parse a user-provided value to a Date Object\r\n     */\r\n    abstract parse(value: any, parseFormat: any): T | null;\r\n\r\n    /**\r\n     * Compare two given dates\r\n     * 1 if the first date is after the second,\r\n     * -1 if the first date is before the second\r\n     * 0 if dates are equal.\r\n     * */\r\n    compare(first: T, second: T): number {\r\n        if (!this.isValid(first) || !this.isValid(second)) {\r\n            throw Error('JSNativeDate: Cannot compare invalid dates.');\r\n        }\r\n\r\n        const dateFirst = this.clone(first);\r\n        const dateSecond = this.clone(second);\r\n\r\n        const diff = this.getTime(dateFirst) - this.getTime(dateSecond);\r\n\r\n        if (diff < 0) {\r\n            return -1;\r\n        } else if (diff > 0) {\r\n            return 1;\r\n        } else {\r\n            // Return 0 if diff is 0; return NaN if diff is NaN\r\n            return diff;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check if two given dates are in the same year\r\n     * 1 if the first date's year is after the second,\r\n     * -1 if the first date's year is before the second\r\n     * 0 if two given dates are in the same year\r\n     * */\r\n    compareYear(first: T, second: T): number {\r\n        if (!this.isValid(first) || !this.isValid(second)) {\r\n            throw Error('JSNativeDate: Cannot compare invalid dates.');\r\n        }\r\n\r\n        const yearLeft = this.getYear(first);\r\n        const yearRight = this.getYear(second);\r\n\r\n        const diff = yearLeft - yearRight;\r\n\r\n        if (diff < 0) {\r\n            return -1;\r\n        } else if (diff > 0) {\r\n            return 1;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Attempts to deserialize a value to a valid date object. This is different from parsing in that\r\n     * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\r\n     * string). The default implementation does not allow any deserialization, it simply checks that\r\n     * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\r\n     * method on all of it's `@Input()` properties that accept dates. It is therefore possible to\r\n     * support passing values from your backend directly to these properties by overriding this method\r\n     * to also deserialize the format used by your backend.\r\n     */\r\n    deserialize(value: any): T | null {\r\n        if (\r\n            value == null ||\r\n            (this.isDateInstance(value) && this.isValid(value))\r\n        ) {\r\n            return value;\r\n        }\r\n        return this.invalid();\r\n    }\r\n\r\n    /**\r\n     * Sets the locale used for all dates.\r\n     */\r\n    setLocale(locale: any) {\r\n        this.locale = locale;\r\n        this._localeChanges.next();\r\n    }\r\n\r\n    /**\r\n     * Clamp the given date between min and max dates.\r\n     */\r\n    clampDate(date: T, min?: T | null, max?: T | null): T {\r\n        if (min && this.compare(date, min) < 0) {\r\n            return min;\r\n        }\r\n        if (max && this.compare(date, max) > 0) {\r\n            return max;\r\n        }\r\n        return date;\r\n    }\r\n}\r\n","/**\r\n * date-time-format.class\r\n */\r\n\r\nimport { InjectionToken } from '@angular/core';\r\n\r\nexport type OwlDateTimeFormats = {\r\n    parseInput: any,\r\n    fullPickerInput: any,\r\n    datePickerInput: any,\r\n    timePickerInput: any,\r\n    monthYearLabel: any,\r\n    dateA11yLabel: any,\r\n    monthYearA11yLabel: any,\r\n};\r\n\r\n/** InjectionToken for date time picker that can be used to override default format. */\r\nexport const OWL_DATE_TIME_FORMATS = new InjectionToken<OwlDateTimeFormats>('OWL_DATE_TIME_FORMATS');\r\n","/**\r\n * calendar.component\r\n */\r\n\r\nimport {\r\n    AfterContentInit,\r\n    AfterViewChecked,\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    ElementRef,\r\n    EventEmitter,\r\n    Inject,\r\n    Input,\r\n    NgZone,\r\n    OnDestroy,\r\n    OnInit,\r\n    Optional,\r\n    Output\r\n} from '@angular/core';\r\nimport { OwlDateTimeIntl } from './date-time-picker-intl.service';\r\nimport { DateTimeAdapter } from './adapter/date-time-adapter.class';\r\nimport {\r\n    OWL_DATE_TIME_FORMATS,\r\n    OwlDateTimeFormats\r\n} from './adapter/date-time-format.class';\r\nimport { SelectMode } from './date-time.class';\r\nimport { take } from 'rxjs/operators';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'owl-date-time-calendar',\r\n    exportAs: 'owlDateTimeCalendar',\r\n    templateUrl: './calendar.component.html',\r\n    styleUrls: ['./calendar.component.scss'],\r\n    host: {\r\n        '[class.owl-dt-calendar]': 'owlDTCalendarClass'\r\n    },\r\n    preserveWhitespaces: false,\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class OwlCalendarComponent<T>\r\n    implements OnInit, AfterContentInit, AfterViewChecked, OnDestroy {\r\n    /**\r\n     * Date filter for the month and year view\r\n     * */\r\n    @Input()\r\n    dateFilter: Function;\r\n\r\n    /**\r\n     * Set the first day of week\r\n     */\r\n    @Input()\r\n    firstDayOfWeek = 0;\r\n\r\n    /** The minimum selectable date. */\r\n    private _minDate: T | null;\r\n    @Input()\r\n    get minDate(): T | null {\r\n        return this._minDate;\r\n    }\r\n\r\n    set minDate(value: T | null) {\r\n        value = this.dateTimeAdapter.deserialize(value);\r\n        value = this.getValidDate(value);\r\n\r\n        this._minDate = value\r\n            ? this.dateTimeAdapter.createDate(\r\n                  this.dateTimeAdapter.getYear(value),\r\n                  this.dateTimeAdapter.getMonth(value),\r\n                  this.dateTimeAdapter.getDate(value)\r\n              )\r\n            : null;\r\n    }\r\n\r\n    /** The maximum selectable date. */\r\n    private _maxDate: T | null;\r\n    @Input()\r\n    get maxDate(): T | null {\r\n        return this._maxDate;\r\n    }\r\n\r\n    set maxDate(value: T | null) {\r\n        value = this.dateTimeAdapter.deserialize(value);\r\n        value = this.getValidDate(value);\r\n\r\n        this._maxDate = value\r\n            ? this.dateTimeAdapter.createDate(\r\n                  this.dateTimeAdapter.getYear(value),\r\n                  this.dateTimeAdapter.getMonth(value),\r\n                  this.dateTimeAdapter.getDate(value)\r\n              )\r\n            : null;\r\n    }\r\n\r\n    /** The current picker moment */\r\n    private _pickerMoment: T;\r\n    @Input()\r\n    get pickerMoment() {\r\n        return this._pickerMoment;\r\n    }\r\n\r\n    set pickerMoment(value: T) {\r\n        value = this.dateTimeAdapter.deserialize(value);\r\n        this._pickerMoment =\r\n            this.getValidDate(value) || this.dateTimeAdapter.now();\r\n    }\r\n\r\n    @Input()\r\n    selectMode: SelectMode;\r\n\r\n    /** The currently selected moment. */\r\n    private _selected: T | null;\r\n    @Input()\r\n    get selected(): T | null {\r\n        return this._selected;\r\n    }\r\n\r\n    set selected(value: T | null) {\r\n        value = this.dateTimeAdapter.deserialize(value);\r\n        this._selected = this.getValidDate(value);\r\n    }\r\n\r\n    private _selecteds: T[] = [];\r\n    @Input()\r\n    get selecteds(): T[] {\r\n        return this._selecteds;\r\n    }\r\n\r\n    set selecteds(values: T[]) {\r\n        this._selecteds = values.map(v => {\r\n            v = this.dateTimeAdapter.deserialize(v);\r\n            return this.getValidDate(v);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * The view that the calendar should start in.\r\n     */\r\n    @Input()\r\n    startView: 'month' | 'year' | 'multi-years' = 'month';\r\n\r\n    /**\r\n     * Whether to hide dates in other months at the start or end of the current month.\r\n     * */\r\n    @Input()\r\n    hideOtherMonths: boolean;\r\n\r\n    /** Emits when the currently picker moment changes. */\r\n    @Output()\r\n    pickerMomentChange = new EventEmitter<T>();\r\n\r\n    /** Emits when the currently selected date changes. */\r\n    @Output()\r\n    selectedChange = new EventEmitter<T>();\r\n\r\n    /** Emits when any date is selected. */\r\n    @Output()\r\n    userSelection = new EventEmitter<void>();\r\n\r\n    /**\r\n     * Emits the selected year. This doesn't imply a change on the selected date\r\n     * */\r\n    @Output()\r\n    readonly yearSelected = new EventEmitter<T>();\r\n\r\n    /**\r\n     * Emits the selected month. This doesn't imply a change on the selected date\r\n     * */\r\n    @Output()\r\n    readonly monthSelected = new EventEmitter<T>();\r\n\r\n    get periodButtonText(): string {\r\n        return this.isMonthView\r\n            ? this.dateTimeAdapter.format(\r\n                  this.pickerMoment,\r\n                  this.dateTimeFormats.monthYearLabel\r\n              )\r\n            : this.dateTimeAdapter.getYearName(this.pickerMoment);\r\n    }\r\n\r\n    get periodButtonLabel(): string {\r\n        return this.isMonthView\r\n            ? this.pickerIntl.switchToMultiYearViewLabel\r\n            : this.pickerIntl.switchToMonthViewLabel;\r\n    }\r\n\r\n    get prevButtonLabel(): string {\r\n        if (this._currentView === 'month') {\r\n            return this.pickerIntl.prevMonthLabel;\r\n        } else if (this._currentView === 'year') {\r\n            return this.pickerIntl.prevYearLabel;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    get nextButtonLabel(): string {\r\n        if (this._currentView === 'month') {\r\n            return this.pickerIntl.nextMonthLabel;\r\n        } else if (this._currentView === 'year') {\r\n            return this.pickerIntl.nextYearLabel;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    private _currentView: 'month' | 'year' | 'multi-years';\r\n    get currentView(): 'month' | 'year' | 'multi-years' {\r\n        return this._currentView;\r\n    }\r\n\r\n    set currentView(view: 'month' | 'year' | 'multi-years') {\r\n        this._currentView = view;\r\n        this.moveFocusOnNextTick = true;\r\n    }\r\n\r\n    get isInSingleMode(): boolean {\r\n        return this.selectMode === 'single';\r\n    }\r\n\r\n    get isInRangeMode(): boolean {\r\n        return (\r\n            this.selectMode === 'range' ||\r\n            this.selectMode === 'rangeFrom' ||\r\n            this.selectMode === 'rangeTo'\r\n        );\r\n    }\r\n\r\n    get showControlArrows(): boolean {\r\n        return this._currentView !== 'multi-years';\r\n    }\r\n\r\n    get isMonthView() {\r\n        return this._currentView === 'month';\r\n    }\r\n\r\n    /**\r\n     * Date filter for the month and year view\r\n     */\r\n    public dateFilterForViews = (date: T) => {\r\n        return (\r\n            !!date &&\r\n            (!this.dateFilter || this.dateFilter(date)) &&\r\n            (!this.minDate ||\r\n                this.dateTimeAdapter.compare(date, this.minDate) >= 0) &&\r\n            (!this.maxDate ||\r\n                this.dateTimeAdapter.compare(date, this.maxDate) <= 0)\r\n        );\r\n    };\r\n\r\n    /**\r\n     * Bind class 'owl-dt-calendar' to host\r\n     * */\r\n    get owlDTCalendarClass(): boolean {\r\n        return true;\r\n    }\r\n\r\n    private intlChangesSub = Subscription.EMPTY;\r\n\r\n    /**\r\n     * Used for scheduling that focus should be moved to the active cell on the next tick.\r\n     * We need to schedule it, rather than do it immediately, because we have to wait\r\n     * for Angular to re-evaluate the view children.\r\n     */\r\n    private moveFocusOnNextTick = false;\r\n\r\n    constructor(\r\n        private elmRef: ElementRef,\r\n        private pickerIntl: OwlDateTimeIntl,\r\n        private ngZone: NgZone,\r\n        private cdRef: ChangeDetectorRef,\r\n        @Optional() private dateTimeAdapter: DateTimeAdapter<T>,\r\n        @Optional()\r\n        @Inject(OWL_DATE_TIME_FORMATS)\r\n        private dateTimeFormats: OwlDateTimeFormats\r\n    ) {\r\n        this.intlChangesSub = this.pickerIntl.changes.subscribe(() => {\r\n            this.cdRef.markForCheck();\r\n        });\r\n    }\r\n\r\n    public ngOnInit() {}\r\n\r\n    public ngAfterContentInit(): void {\r\n        this._currentView = this.startView;\r\n    }\r\n\r\n    public ngAfterViewChecked() {\r\n        if (this.moveFocusOnNextTick) {\r\n            this.moveFocusOnNextTick = false;\r\n            this.focusActiveCell();\r\n        }\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        this.intlChangesSub.unsubscribe();\r\n    }\r\n\r\n    /**\r\n     * Toggle between month view and year view\r\n     */\r\n    public toggleViews(): void {\r\n        this.currentView =\r\n            this._currentView == 'month' ? 'multi-years' : 'month';\r\n    }\r\n\r\n    /**\r\n     * Handles user clicks on the previous button.\r\n     * */\r\n    public previousClicked(): void {\r\n        this.pickerMoment = this.isMonthView\r\n            ? this.dateTimeAdapter.addCalendarMonths(this.pickerMoment, -1)\r\n            : this.dateTimeAdapter.addCalendarYears(this.pickerMoment, -1);\r\n\r\n        this.pickerMomentChange.emit(this.pickerMoment);\r\n    }\r\n\r\n    /**\r\n     * Handles user clicks on the next button.\r\n     * */\r\n    public nextClicked(): void {\r\n        this.pickerMoment = this.isMonthView\r\n            ? this.dateTimeAdapter.addCalendarMonths(this.pickerMoment, 1)\r\n            : this.dateTimeAdapter.addCalendarYears(this.pickerMoment, 1);\r\n\r\n        this.pickerMomentChange.emit(this.pickerMoment);\r\n    }\r\n\r\n    public dateSelected(date: T): void {\r\n        if (!this.dateFilterForViews(date)) {\r\n            return;\r\n        }\r\n\r\n        this.selectedChange.emit(date);\r\n\r\n        /*if ((this.isInSingleMode && !this.dateTimeAdapter.isSameDay(date, this.selected)) ||\r\n            this.isInRangeMode) {\r\n            this.selectedChange.emit(date);\r\n        }*/\r\n    }\r\n\r\n    /**\r\n     * Change the pickerMoment value and switch to a specific view\r\n     */\r\n    public goToDateInView(\r\n        date: T,\r\n        view: 'month' | 'year' | 'multi-years'\r\n    ): void {\r\n        this.handlePickerMomentChange(date);\r\n        this.currentView = view;\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * Change the pickerMoment value\r\n     */\r\n    public handlePickerMomentChange(date: T): void {\r\n        this.pickerMoment = this.dateTimeAdapter.clampDate(\r\n            date,\r\n            this.minDate,\r\n            this.maxDate\r\n        );\r\n        this.pickerMomentChange.emit(this.pickerMoment);\r\n        return;\r\n    }\r\n\r\n    public userSelected(): void {\r\n        this.userSelection.emit();\r\n    }\r\n\r\n    /**\r\n     * Whether the previous period button is enabled.\r\n     */\r\n    public prevButtonEnabled(): boolean {\r\n        return (\r\n            !this.minDate || !this.isSameView(this.pickerMoment, this.minDate)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Whether the next period button is enabled.\r\n     */\r\n    public nextButtonEnabled(): boolean {\r\n        return (\r\n            !this.maxDate || !this.isSameView(this.pickerMoment, this.maxDate)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Focus to the host element\r\n     * */\r\n    public focusActiveCell() {\r\n        this.ngZone.runOutsideAngular(() => {\r\n            this.ngZone.onStable\r\n                .asObservable()\r\n                .pipe(take(1))\r\n                .subscribe(() => {\r\n                    this.elmRef.nativeElement\r\n                        .querySelector('.owl-dt-calendar-cell-active')\r\n                        .focus();\r\n                });\r\n        });\r\n    }\r\n\r\n    public selectYearInMultiYearView(normalizedYear: T): void {\r\n        this.yearSelected.emit(normalizedYear);\r\n    }\r\n\r\n    public selectMonthInYearView(normalizedMonth: T): void {\r\n        this.monthSelected.emit(normalizedMonth);\r\n    }\r\n\r\n    /**\r\n     * Whether the two dates represent the same view in the current view mode (month or year).\r\n     */\r\n    private isSameView(date1: T, date2: T): boolean {\r\n        if (this._currentView === 'month') {\r\n            return !!(\r\n                date1 &&\r\n                date2 &&\r\n                this.dateTimeAdapter.getYear(date1) ===\r\n                    this.dateTimeAdapter.getYear(date2) &&\r\n                this.dateTimeAdapter.getMonth(date1) ===\r\n                    this.dateTimeAdapter.getMonth(date2)\r\n            );\r\n        } else if (this._currentView === 'year') {\r\n            return !!(\r\n                date1 &&\r\n                date2 &&\r\n                this.dateTimeAdapter.getYear(date1) ===\r\n                    this.dateTimeAdapter.getYear(date2)\r\n            );\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get a valid date object\r\n     */\r\n    private getValidDate(obj: any): T | null {\r\n        return this.dateTimeAdapter.isDateInstance(obj) &&\r\n            this.dateTimeAdapter.isValid(obj)\r\n            ? obj\r\n            : null;\r\n    }\r\n}\r\n","/**\r\n * timer.component\r\n */\r\n\r\nimport {\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    ElementRef,\r\n    EventEmitter,\r\n    Input,\r\n    NgZone,\r\n    OnInit,\r\n    Optional,\r\n    Output\r\n} from '@angular/core';\r\nimport { OwlDateTimeIntl } from './date-time-picker-intl.service';\r\nimport { DateTimeAdapter } from './adapter/date-time-adapter.class';\r\nimport { take } from 'rxjs/operators';\r\n\r\n@Component({\r\n    exportAs: 'owlDateTimeTimer',\r\n    selector: 'owl-date-time-timer',\r\n    templateUrl: './timer.component.html',\r\n    styleUrls: ['./timer.component.scss'],\r\n    preserveWhitespaces: false,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    host: {\r\n        '[class.owl-dt-timer]': 'owlDTTimerClass',\r\n        '[attr.tabindex]': 'owlDTTimeTabIndex'\r\n    }\r\n})\r\nexport class OwlTimerComponent<T> implements OnInit {\r\n    /** The current picker moment */\r\n    private _pickerMoment: T;\r\n    @Input()\r\n    get pickerMoment() {\r\n        return this._pickerMoment;\r\n    }\r\n\r\n    set pickerMoment(value: T) {\r\n        value = this.dateTimeAdapter.deserialize(value);\r\n        this._pickerMoment =\r\n            this.getValidDate(value) || this.dateTimeAdapter.now();\r\n    }\r\n\r\n    /** The minimum selectable date time. */\r\n    private _minDateTime: T | null;\r\n    @Input()\r\n    get minDateTime(): T | null {\r\n        return this._minDateTime;\r\n    }\r\n\r\n    set minDateTime(value: T | null) {\r\n        value = this.dateTimeAdapter.deserialize(value);\r\n        this._minDateTime = this.getValidDate(value);\r\n    }\r\n\r\n    /** The maximum selectable date time. */\r\n    private _maxDateTime: T | null;\r\n    @Input()\r\n    get maxDateTime(): T | null {\r\n        return this._maxDateTime;\r\n    }\r\n\r\n    set maxDateTime(value: T | null) {\r\n        value = this.dateTimeAdapter.deserialize(value);\r\n        this._maxDateTime = this.getValidDate(value);\r\n    }\r\n\r\n    private isPM: boolean = false; // a flag indicates the current timer moment is in PM or AM\r\n\r\n    /**\r\n     * Whether to show the second's timer\r\n     */\r\n    @Input()\r\n    showSecondsTimer: boolean;\r\n\r\n    /**\r\n     * Whether the timer is in hour12 format\r\n     */\r\n    @Input()\r\n    hour12Timer: boolean;\r\n\r\n    /**\r\n     * Hours to change per step\r\n     */\r\n    @Input()\r\n    stepHour = 1;\r\n\r\n    /**\r\n     * Minutes to change per step\r\n     */\r\n    @Input()\r\n    stepMinute = 1;\r\n\r\n    /**\r\n     * Seconds to change per step\r\n     */\r\n    @Input()\r\n    stepSecond = 1;\r\n\r\n    /**\r\n     * Seconds to auto update time value\r\n     */\r\n    @Input()\r\n    debounceTime = 500;\r\n\r\n    get hourValue(): number {\r\n        return this.dateTimeAdapter.getHours(this.pickerMoment);\r\n    }\r\n\r\n    /**\r\n     * The value would be displayed in hourBox.\r\n     * We need this because the value displayed in hourBox it not\r\n     * the same as the hourValue when the timer is in hour12Timer mode.\r\n     * */\r\n    get hourBoxValue(): number {\r\n        let hours = this.hourValue;\r\n\r\n        if (!this.hour12Timer) {\r\n            return hours;\r\n        } else {\r\n            if (hours === 0) {\r\n                hours = 12;\r\n                this.isPM = false;\r\n            } else if (hours > 0 && hours < 12) {\r\n                this.isPM = false;\r\n            } else if (hours === 12) {\r\n                this.isPM = true;\r\n            } else if (hours > 12 && hours < 24) {\r\n                hours = hours - 12;\r\n                this.isPM = true;\r\n            }\r\n\r\n            return hours;\r\n        }\r\n    }\r\n\r\n    get minuteValue(): number {\r\n        return this.dateTimeAdapter.getMinutes(this.pickerMoment);\r\n    }\r\n\r\n    get secondValue(): number {\r\n        return this.dateTimeAdapter.getSeconds(this.pickerMoment);\r\n    }\r\n\r\n    get upHourButtonLabel(): string {\r\n        return this.pickerIntl.upHourLabel;\r\n    }\r\n\r\n    get downHourButtonLabel(): string {\r\n        return this.pickerIntl.downHourLabel;\r\n    }\r\n\r\n    get upMinuteButtonLabel(): string {\r\n        return this.pickerIntl.upMinuteLabel;\r\n    }\r\n\r\n    get downMinuteButtonLabel(): string {\r\n        return this.pickerIntl.downMinuteLabel;\r\n    }\r\n\r\n    get upSecondButtonLabel(): string {\r\n        return this.pickerIntl.upSecondLabel;\r\n    }\r\n\r\n    get downSecondButtonLabel(): string {\r\n        return this.pickerIntl.downSecondLabel;\r\n    }\r\n\r\n    get hour12ButtonLabel(): string {\r\n        return this.isPM\r\n            ? this.pickerIntl.hour12PMLabel\r\n            : this.pickerIntl.hour12AMLabel;\r\n    }\r\n\r\n    @Output()\r\n    selectedChange = new EventEmitter<T>();\r\n\r\n    get owlDTTimerClass(): boolean {\r\n        return true;\r\n    }\r\n\r\n    get owlDTTimeTabIndex(): number {\r\n        return -1;\r\n    }\r\n\r\n    constructor(\r\n        private ngZone: NgZone,\r\n        private elmRef: ElementRef,\r\n        private pickerIntl: OwlDateTimeIntl,\r\n        private cdRef: ChangeDetectorRef,\r\n        @Optional() private dateTimeAdapter: DateTimeAdapter<T>\r\n    ) {}\r\n\r\n    public ngOnInit() {}\r\n\r\n    /**\r\n     * Focus to the host element\r\n     * */\r\n    public focus() {\r\n        this.ngZone.runOutsideAngular(() => {\r\n            this.ngZone.onStable\r\n                .asObservable()\r\n                .pipe(take(1))\r\n                .subscribe(() => {\r\n                    this.elmRef.nativeElement.focus();\r\n                });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Set the hour value via typing into timer box input\r\n     * We need this to handle the hour value when the timer is in hour12 mode\r\n     * */\r\n    public setHourValueViaInput(hours: number): void {\r\n        if (this.hour12Timer && this.isPM && hours >= 1 && hours <= 11) {\r\n            hours = hours + 12;\r\n        } else if (this.hour12Timer && !this.isPM && hours === 12) {\r\n            hours = 0;\r\n        }\r\n\r\n        this.setHourValue(hours);\r\n    }\r\n\r\n    public setHourValue(hours: number): void {\r\n        const m = this.dateTimeAdapter.setHours(this.pickerMoment, hours);\r\n        this.selectedChange.emit(m);\r\n        this.cdRef.markForCheck();\r\n    }\r\n\r\n    public setMinuteValue(minutes: number): void {\r\n        const m = this.dateTimeAdapter.setMinutes(this.pickerMoment, minutes);\r\n        this.selectedChange.emit(m);\r\n        this.cdRef.markForCheck();\r\n    }\r\n\r\n    public setSecondValue(seconds: number): void {\r\n        const m = this.dateTimeAdapter.setSeconds(this.pickerMoment, seconds);\r\n        this.selectedChange.emit(m);\r\n        this.cdRef.markForCheck();\r\n    }\r\n\r\n    public setMeridiem(event: any): void {\r\n        this.isPM = !this.isPM;\r\n\r\n        let hours = this.hourValue;\r\n        if (this.isPM) {\r\n            hours = hours + 12;\r\n        } else {\r\n            hours = hours - 12;\r\n        }\r\n\r\n        if (hours >= 0 && hours <= 23) {\r\n            this.setHourValue(hours);\r\n        }\r\n\r\n        this.cdRef.markForCheck();\r\n        event.preventDefault();\r\n    }\r\n\r\n    /**\r\n     * Check if the up hour button is enabled\r\n     */\r\n    public upHourEnabled(): boolean {\r\n        return (\r\n            !this.maxDateTime ||\r\n            this.compareHours(this.stepHour, this.maxDateTime) < 1\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Check if the down hour button is enabled\r\n     */\r\n    public downHourEnabled(): boolean {\r\n        return (\r\n            !this.minDateTime ||\r\n            this.compareHours(-this.stepHour, this.minDateTime) > -1\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Check if the up minute button is enabled\r\n     */\r\n    public upMinuteEnabled(): boolean {\r\n        return (\r\n            !this.maxDateTime ||\r\n            this.compareMinutes(this.stepMinute, this.maxDateTime) < 1\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Check if the down minute button is enabled\r\n     */\r\n    public downMinuteEnabled(): boolean {\r\n        return (\r\n            !this.minDateTime ||\r\n            this.compareMinutes(-this.stepMinute, this.minDateTime) > -1\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Check if the up second button is enabled\r\n     */\r\n    public upSecondEnabled(): boolean {\r\n        return (\r\n            !this.maxDateTime ||\r\n            this.compareSeconds(this.stepSecond, this.maxDateTime) < 1\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Check if the down second button is enabled\r\n     */\r\n    public downSecondEnabled(): boolean {\r\n        return (\r\n            !this.minDateTime ||\r\n            this.compareSeconds(-this.stepSecond, this.minDateTime) > -1\r\n        );\r\n    }\r\n\r\n    /**\r\n     * PickerMoment's hour value +/- certain amount and compare it to the give date\r\n     * 1 is after the comparedDate\r\n     * -1 is before the comparedDate\r\n     * 0 is equal the comparedDate\r\n     * */\r\n    private compareHours(amount: number, comparedDate: T): number {\r\n        const hours = this.dateTimeAdapter.getHours(this.pickerMoment) + amount;\r\n        const result = this.dateTimeAdapter.setHours(this.pickerMoment, hours);\r\n        return this.dateTimeAdapter.compare(result, comparedDate);\r\n    }\r\n\r\n    /**\r\n     * PickerMoment's minute value +/- certain amount and compare it to the give date\r\n     * 1 is after the comparedDate\r\n     * -1 is before the comparedDate\r\n     * 0 is equal the comparedDate\r\n     * */\r\n    private compareMinutes(amount: number, comparedDate: T): number {\r\n        const minutes =\r\n            this.dateTimeAdapter.getMinutes(this.pickerMoment) + amount;\r\n        const result = this.dateTimeAdapter.setMinutes(\r\n            this.pickerMoment,\r\n            minutes\r\n        );\r\n        return this.dateTimeAdapter.compare(result, comparedDate);\r\n    }\r\n\r\n    /**\r\n     * PickerMoment's second value +/- certain amount and compare it to the give date\r\n     * 1 is after the comparedDate\r\n     * -1 is before the comparedDate\r\n     * 0 is equal the comparedDate\r\n     * */\r\n    private compareSeconds(amount: number, comparedDate: T): number {\r\n        const seconds =\r\n            this.dateTimeAdapter.getSeconds(this.pickerMoment) + amount;\r\n        const result = this.dateTimeAdapter.setSeconds(\r\n            this.pickerMoment,\r\n            seconds\r\n        );\r\n        return this.dateTimeAdapter.compare(result, comparedDate);\r\n    }\r\n\r\n    /**\r\n     * Get a valid date object\r\n     */\r\n    private getValidDate(obj: any): T | null {\r\n        return this.dateTimeAdapter.isDateInstance(obj) &&\r\n            this.dateTimeAdapter.isValid(obj)\r\n            ? obj\r\n            : null;\r\n    }\r\n}\r\n","/**\r\n * date-time-picker.animations\r\n */\r\nimport {\r\n    animate, animateChild,\r\n    AnimationTriggerMetadata,\r\n    group,\r\n    query,\r\n    state,\r\n    style,\r\n    transition,\r\n    trigger\r\n} from '@angular/animations';\r\n\r\nexport const owlDateTimePickerAnimations: {\r\n    readonly transformPicker: AnimationTriggerMetadata;\r\n    readonly fadeInPicker: AnimationTriggerMetadata;\r\n} = {\r\n\r\n    transformPicker: trigger('transformPicker', [\r\n        state('void', style({opacity: 0, transform: 'scale(1, 0)'})),\r\n        state('enter', style({opacity: 1, transform: 'scale(1, 1)'})),\r\n        transition('void => enter', group([\r\n            query('@fadeInPicker', animateChild(), { optional: true }),\r\n            animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)')\r\n        ])),\r\n        transition('enter => void', animate('100ms linear', style({opacity: 0})))\r\n    ]),\r\n\r\n    fadeInPicker: trigger('fadeInPicker', [\r\n        state('enter', style({opacity: 1})),\r\n        state('void', style({opacity: 0})),\r\n        transition('void => enter', animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')),\r\n    ])\r\n};\r\n","/**\r\n * date-time-picker-container.component\r\n */\r\n\r\nimport {\r\n    AfterContentInit,\r\n    AfterViewInit,\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    ElementRef,\r\n    OnInit,\r\n    Optional,\r\n    ViewChild\r\n} from '@angular/core';\r\nimport { AnimationEvent } from '@angular/animations';\r\nimport { OwlDateTimeIntl } from './date-time-picker-intl.service';\r\nimport { OwlCalendarComponent } from './calendar.component';\r\nimport { OwlTimerComponent } from './timer.component';\r\nimport { DateTimeAdapter } from './adapter/date-time-adapter.class';\r\nimport { OwlDateTime, PickerType } from './date-time.class';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { owlDateTimePickerAnimations } from './date-time-picker.animations';\r\nimport {\r\n    DOWN_ARROW,\r\n    LEFT_ARROW,\r\n    RIGHT_ARROW,\r\n    SPACE,\r\n    UP_ARROW\r\n} from '@angular/cdk/keycodes';\r\n\r\n@Component({\r\n    exportAs: 'owlDateTimeContainer',\r\n    selector: 'owl-date-time-container',\r\n    templateUrl: './date-time-picker-container.component.html',\r\n    styleUrls: ['./date-time-picker-container.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    preserveWhitespaces: false,\r\n    animations: [\r\n        owlDateTimePickerAnimations.transformPicker,\r\n        owlDateTimePickerAnimations.fadeInPicker\r\n    ],\r\n    host: {\r\n        '(@transformPicker.done)': 'handleContainerAnimationDone($event)',\r\n        '[class.owl-dt-container]': 'owlDTContainerClass',\r\n        '[class.owl-dt-popup-container]': 'owlDTPopupContainerClass',\r\n        '[class.owl-dt-dialog-container]': 'owlDTDialogContainerClass',\r\n        '[class.owl-dt-inline-container]': 'owlDTInlineContainerClass',\r\n        '[class.owl-dt-container-disabled]': 'owlDTContainerDisabledClass',\r\n        '[attr.id]': 'owlDTContainerId',\r\n        '[@transformPicker]': 'owlDTContainerAnimation',\r\n    }\r\n})\r\nexport class OwlDateTimeContainerComponent<T>\r\n    implements OnInit, AfterContentInit, AfterViewInit {\r\n    @ViewChild(OwlCalendarComponent, { static: false })\r\n    calendar: OwlCalendarComponent<T>;\r\n    @ViewChild(OwlTimerComponent, { static: false })\r\n    timer: OwlTimerComponent<T>;\r\n\r\n    public picker: OwlDateTime<T>;\r\n    public activeSelectedIndex = 0; // The current active SelectedIndex in range select mode (0: 'from', 1: 'to')\r\n\r\n    /**\r\n     * Stream emits when try to hide picker\r\n     * */\r\n    private hidePicker$ = new Subject<any>();\r\n\r\n    get hidePickerStream(): Observable<any> {\r\n        return this.hidePicker$.asObservable();\r\n    }\r\n\r\n    /**\r\n     * Stream emits when try to confirm the selected value\r\n     * */\r\n    private confirmSelected$ = new Subject<any>();\r\n\r\n    get confirmSelectedStream(): Observable<any> {\r\n        return this.confirmSelected$.asObservable();\r\n    }\r\n\r\n    private pickerOpened$ = new Subject<any>();\r\n\r\n    get pickerOpenedStream(): Observable<any> {\r\n        return this.pickerOpened$.asObservable();\r\n    }\r\n\r\n    /**\r\n     * The current picker moment. This determines which time period is shown and which date is\r\n     * highlighted when using keyboard navigation.\r\n     */\r\n    private _clamPickerMoment: T;\r\n\r\n    get pickerMoment() {\r\n        return this._clamPickerMoment;\r\n    }\r\n\r\n    set pickerMoment(value: T) {\r\n        if (value) {\r\n            this._clamPickerMoment = this.dateTimeAdapter.clampDate(\r\n                value,\r\n                this.picker.minDateTime,\r\n                this.picker.maxDateTime\r\n            );\r\n        }\r\n        this.cdRef.markForCheck();\r\n    }\r\n\r\n    get pickerType(): PickerType {\r\n        return this.picker.pickerType;\r\n    }\r\n\r\n    get cancelLabel(): string {\r\n        return this.pickerIntl.cancelBtnLabel;\r\n    }\r\n\r\n    get setLabel(): string {\r\n        return this.pickerIntl.setBtnLabel;\r\n    }\r\n\r\n    /**\r\n     * The range 'from' label\r\n     * */\r\n    get fromLabel(): string {\r\n        return this.pickerIntl.rangeFromLabel;\r\n    }\r\n\r\n    /**\r\n     * The range 'to' label\r\n     * */\r\n    get toLabel(): string {\r\n        return this.pickerIntl.rangeToLabel;\r\n    }\r\n\r\n    /**\r\n     * The range 'from' formatted value\r\n     * */\r\n    get fromFormattedValue(): string {\r\n        const value = this.picker.selecteds[0];\r\n        return value\r\n            ? this.dateTimeAdapter.format(value, this.picker.formatString)\r\n            : '';\r\n    }\r\n\r\n    /**\r\n     * The range 'to' formatted value\r\n     * */\r\n    get toFormattedValue(): string {\r\n        const value = this.picker.selecteds[1];\r\n        return value\r\n            ? this.dateTimeAdapter.format(value, this.picker.formatString)\r\n            : '';\r\n    }\r\n\r\n    /**\r\n     * Cases in which the control buttons show in the picker\r\n     * 1) picker mode is 'dialog'\r\n     * 2) picker type is NOT 'calendar' and the picker mode is NOT 'inline'\r\n     * */\r\n    get showControlButtons(): boolean {\r\n        return (\r\n            this.picker.pickerMode === 'dialog' ||\r\n            (this.picker.pickerType !== 'calendar' &&\r\n                this.picker.pickerMode !== 'inline')\r\n        );\r\n    }\r\n\r\n    get containerElm(): HTMLElement {\r\n        return this.elmRef.nativeElement;\r\n    }\r\n\r\n    get owlDTContainerClass(): boolean {\r\n        return true;\r\n    }\r\n\r\n    get owlDTPopupContainerClass(): boolean {\r\n        return this.picker.pickerMode === 'popup';\r\n    }\r\n\r\n    get owlDTDialogContainerClass(): boolean {\r\n        return this.picker.pickerMode === 'dialog';\r\n    }\r\n\r\n    get owlDTInlineContainerClass(): boolean {\r\n        return this.picker.pickerMode === 'inline';\r\n    }\r\n\r\n    get owlDTContainerDisabledClass(): boolean {\r\n        return this.picker.disabled;\r\n    }\r\n\r\n    get owlDTContainerId(): string {\r\n        return this.picker.id;\r\n    }\r\n\r\n    get owlDTContainerAnimation(): any {\r\n        return this.picker.pickerMode === 'inline' ? '' : 'enter';\r\n    }\r\n\r\n    constructor( private cdRef: ChangeDetectorRef,\r\n                  private elmRef: ElementRef,\r\n                  private pickerIntl: OwlDateTimeIntl,\r\n                 @Optional() private dateTimeAdapter: DateTimeAdapter<T> ) {\r\n    }\r\n\r\n    public ngOnInit() {}\r\n\r\n    public ngAfterContentInit(): void {\r\n        this.initPicker();\r\n    }\r\n\r\n    public ngAfterViewInit(): void {\r\n        this.focusPicker();\r\n    }\r\n\r\n    public handleContainerAnimationDone(event: AnimationEvent): void {\r\n        const toState = event.toState;\r\n        if (toState === 'enter') {\r\n            this.pickerOpened$.next();\r\n        }\r\n    }\r\n\r\n    public dateSelected(date: T): void {\r\n        let result;\r\n\r\n        if (this.picker.isInSingleMode) {\r\n            result = this.dateSelectedInSingleMode(date);\r\n            if (result) {\r\n                this.pickerMoment = result;\r\n                this.picker.select(result);\r\n            } else {\r\n                // we close the picker when result is null and pickerType is calendar.\r\n                if (this.pickerType === 'calendar') {\r\n                    this.hidePicker$.next(null);\r\n                }\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (this.picker.isInRangeMode) {\r\n            result = this.dateSelectedInRangeMode(date);\r\n            if (result) {\r\n                this.pickerMoment = result[this.activeSelectedIndex];\r\n                this.picker.select(result);\r\n            }\r\n        }\r\n    }\r\n\r\n    public timeSelected(time: T): void {\r\n        this.pickerMoment = this.dateTimeAdapter.clone(time);\r\n\r\n        if (!this.picker.dateTimeChecker(this.pickerMoment)) {\r\n            return;\r\n        }\r\n\r\n        if (this.picker.isInSingleMode) {\r\n            this.picker.select(this.pickerMoment);\r\n            return;\r\n        }\r\n\r\n        if (this.picker.isInRangeMode) {\r\n            const selecteds = [...this.picker.selecteds];\r\n\r\n            // check if the 'from' is after 'to' or 'to'is before 'from'\r\n            // In this case, we set both the 'from' and 'to' the same value\r\n            if (\r\n                (this.activeSelectedIndex === 0 &&\r\n                    selecteds[1] &&\r\n                    this.dateTimeAdapter.compare(\r\n                        this.pickerMoment,\r\n                        selecteds[1]\r\n                    ) === 1) ||\r\n                (this.activeSelectedIndex === 1 &&\r\n                    selecteds[0] &&\r\n                    this.dateTimeAdapter.compare(\r\n                        this.pickerMoment,\r\n                        selecteds[0]\r\n                    ) === -1)\r\n            ) {\r\n                selecteds[0] = this.pickerMoment;\r\n                selecteds[1] = this.pickerMoment;\r\n            } else {\r\n                selecteds[this.activeSelectedIndex] = this.pickerMoment;\r\n            }\r\n\r\n            this.picker.select(selecteds);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handle click on cancel button\r\n     */\r\n    public onCancelClicked(event: any): void {\r\n        this.hidePicker$.next(null);\r\n        event.preventDefault();\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * Handle click on set button\r\n     */\r\n    public onSetClicked(event: any): void {\r\n        if (!this.picker.dateTimeChecker(this.pickerMoment)) {\r\n            this.hidePicker$.next(null);\r\n            event.preventDefault();\r\n            return;\r\n        }\r\n\r\n        this.confirmSelected$.next(event);\r\n        event.preventDefault();\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * Handle click on inform radio group\r\n     */\r\n    public handleClickOnInfoGroup(event: any, index: number): void {\r\n        this.setActiveSelectedIndex(index);\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    }\r\n\r\n    /**\r\n     * Handle click on inform radio group\r\n     */\r\n    public handleKeydownOnInfoGroup(\r\n        event: any,\r\n        next: any,\r\n        index: number\r\n    ): void {\r\n        switch (event.keyCode) {\r\n            case DOWN_ARROW:\r\n            case RIGHT_ARROW:\r\n            case UP_ARROW:\r\n            case LEFT_ARROW:\r\n                next.focus();\r\n                this.setActiveSelectedIndex(index === 0 ? 1 : 0);\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                break;\r\n\r\n            case SPACE:\r\n                this.setActiveSelectedIndex(index);\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                break;\r\n\r\n            default:\r\n                return;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set the value of activeSelectedIndex\r\n     */\r\n    private setActiveSelectedIndex(index: number): void {\r\n        if (\r\n            this.picker.selectMode === 'range' &&\r\n            this.activeSelectedIndex !== index\r\n        ) {\r\n            this.activeSelectedIndex = index;\r\n\r\n            const selected = this.picker.selecteds[this.activeSelectedIndex];\r\n            if (this.picker.selecteds && selected) {\r\n                this.pickerMoment = this.dateTimeAdapter.clone(selected);\r\n            }\r\n        }\r\n        return;\r\n    }\r\n\r\n    private initPicker(): void {\r\n        this.pickerMoment = this.picker.startAt || this.dateTimeAdapter.now();\r\n        this.activeSelectedIndex = this.picker.selectMode === 'rangeTo' ? 1 : 0;\r\n    }\r\n\r\n    /**\r\n     * Select calendar date in single mode,\r\n     * it returns null when date is not selected.\r\n     */\r\n    private dateSelectedInSingleMode(date: T): T | null {\r\n        if (this.dateTimeAdapter.isSameDay(date, this.picker.selected)) {\r\n            return null;\r\n        }\r\n\r\n        return this.updateAndCheckCalendarDate(date);\r\n    }\r\n\r\n    /**\r\n     * Select dates in range Mode\r\n     */\r\n    private dateSelectedInRangeMode(date: T): T[] | null {\r\n        let from = this.picker.selecteds[0];\r\n        let to = this.picker.selecteds[1];\r\n\r\n        const result = this.updateAndCheckCalendarDate(date);\r\n\r\n        if (!result) {\r\n            return null;\r\n        }\r\n\r\n        // if the given calendar day is after or equal to 'from',\r\n        // set ths given date as 'to'\r\n        // otherwise, set it as 'from' and set 'to' to null\r\n        if (this.picker.selectMode === 'range') {\r\n            if (\r\n                this.picker.selecteds &&\r\n                this.picker.selecteds.length &&\r\n                !to &&\r\n                from &&\r\n                this.dateTimeAdapter.differenceInCalendarDays(result, from) >= 0\r\n            ) {\r\n                to = result;\r\n                this.activeSelectedIndex = 1;\r\n            } else {\r\n                from = result;\r\n                to = null;\r\n                this.activeSelectedIndex = 0;\r\n            }\r\n        } else if (this.picker.selectMode === 'rangeFrom') {\r\n            from = result;\r\n\r\n            // if the from value is after the to value, set the to value as null\r\n            if (to && this.dateTimeAdapter.compare(from, to) > 0) {\r\n                to = null;\r\n            }\r\n        } else if (this.picker.selectMode === 'rangeTo') {\r\n            to = result;\r\n\r\n            // if the from value is after the to value, set the from value as null\r\n            if (from && this.dateTimeAdapter.compare(from, to) > 0) {\r\n                from = null;\r\n            }\r\n        }\r\n\r\n        return [from, to];\r\n    }\r\n\r\n    /**\r\n     * Update the given calendar date's time and check if it is valid\r\n     * Because the calendar date has 00:00:00 as default time, if the picker type is 'both',\r\n     * we need to update the given calendar date's time before selecting it.\r\n     * if it is valid, return the updated dateTime\r\n     * if it is not valid, return null\r\n     */\r\n    private updateAndCheckCalendarDate(date: T): T {\r\n        let result;\r\n\r\n        // if the picker is 'both', update the calendar date's time value\r\n        if (this.picker.pickerType === 'both') {\r\n            result = this.dateTimeAdapter.createDate(\r\n                this.dateTimeAdapter.getYear(date),\r\n                this.dateTimeAdapter.getMonth(date),\r\n                this.dateTimeAdapter.getDate(date),\r\n                this.dateTimeAdapter.getHours(this.pickerMoment),\r\n                this.dateTimeAdapter.getMinutes(this.pickerMoment),\r\n                this.dateTimeAdapter.getSeconds(this.pickerMoment)\r\n            );\r\n            result = this.dateTimeAdapter.clampDate(\r\n                result,\r\n                this.picker.minDateTime,\r\n                this.picker.maxDateTime\r\n            );\r\n        } else {\r\n            result = this.dateTimeAdapter.clone(date);\r\n        }\r\n\r\n        // check the updated dateTime\r\n        return this.picker.dateTimeChecker(result) ? result : null;\r\n    }\r\n\r\n    /**\r\n     * Focus to the picker\r\n     * */\r\n    private focusPicker(): void {\r\n        if (this.picker.pickerMode === 'inline') {\r\n            return;\r\n        }\r\n\r\n        if (this.calendar) {\r\n            this.calendar.focusActiveCell();\r\n        } else if (this.timer) {\r\n            this.timer.focus();\r\n        }\r\n    }\r\n}\r\n","/**\r\n * date-time.class\r\n */\r\nimport { EventEmitter, Inject, Input, Optional } from '@angular/core';\r\nimport {\r\n    coerceBooleanProperty,\r\n    coerceNumberProperty\r\n} from '@angular/cdk/coercion';\r\nimport { DateTimeAdapter } from './adapter/date-time-adapter.class';\r\nimport {\r\n    OWL_DATE_TIME_FORMATS,\r\n    OwlDateTimeFormats\r\n} from './adapter/date-time-format.class';\r\n\r\nlet nextUniqueId = 0;\r\n\r\nexport type PickerType = 'both' | 'calendar' | 'timer';\r\n\r\nexport type PickerMode = 'popup' | 'dialog' | 'inline';\r\n\r\nexport type SelectMode = 'single' | 'range' | 'rangeFrom' | 'rangeTo';\r\n\r\nexport abstract class OwlDateTime<T> {\r\n    /**\r\n     * Whether to show the second's timer\r\n     */\r\n    private _showSecondsTimer = false;\r\n    @Input()\r\n    get showSecondsTimer(): boolean {\r\n        return this._showSecondsTimer;\r\n    }\r\n\r\n    set showSecondsTimer(val: boolean) {\r\n        this._showSecondsTimer = coerceBooleanProperty(val);\r\n    }\r\n\r\n    /**\r\n     * Whether the timer is in hour12 format\r\n     */\r\n    private _hour12Timer = false;\r\n    @Input()\r\n    get hour12Timer(): boolean {\r\n        return this._hour12Timer;\r\n    }\r\n\r\n    set hour12Timer(val: boolean) {\r\n        this._hour12Timer = coerceBooleanProperty(val);\r\n    }\r\n\r\n    /**\r\n     * The view that the calendar should start in.\r\n     */\r\n    @Input()\r\n    startView: 'month' | 'year' | 'multi-years' = 'month';\r\n\r\n    /**\r\n     * debounceTime for auto correct timer.\r\n     */\r\n    @Input()\r\n    debounceTime: number = 500;\r\n\r\n    /**\r\n     * Hours to change per step\r\n     */\r\n    private _stepHour = 1;\r\n    @Input()\r\n    get stepHour(): number {\r\n        return this._stepHour;\r\n    }\r\n\r\n    set stepHour(val: number) {\r\n        this._stepHour = coerceNumberProperty(val, 1);\r\n    }\r\n\r\n    /**\r\n     * Minutes to change per step\r\n     */\r\n    private _stepMinute = 1;\r\n    @Input()\r\n    get stepMinute(): number {\r\n        return this._stepMinute;\r\n    }\r\n\r\n    set stepMinute(val: number) {\r\n        this._stepMinute = coerceNumberProperty(val, 1);\r\n    }\r\n\r\n    /**\r\n     * Seconds to change per step\r\n     */\r\n    private _stepSecond = 1;\r\n    @Input()\r\n    get stepSecond(): number {\r\n        return this._stepSecond;\r\n    }\r\n\r\n    set stepSecond(val: number) {\r\n        this._stepSecond = coerceNumberProperty(val, 1);\r\n    }\r\n\r\n    /**\r\n     * Set the first day of week\r\n     */\r\n    private _firstDayOfWeek = 0;\r\n    @Input()\r\n    get firstDayOfWeek() {\r\n        return this._firstDayOfWeek;\r\n    }\r\n\r\n    set firstDayOfWeek(value: number) {\r\n        value = coerceNumberProperty(value, 0);\r\n        if (value > 6 || value < 0) {\r\n            this._firstDayOfWeek = 0;\r\n        } else {\r\n            this._firstDayOfWeek = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Whether to hide dates in other months at the start or end of the current month.\r\n     */\r\n    private _hideOtherMonths = false;\r\n    @Input()\r\n    get hideOtherMonths(): boolean {\r\n        return this._hideOtherMonths;\r\n    }\r\n\r\n    set hideOtherMonths(val: boolean) {\r\n        this._hideOtherMonths = coerceBooleanProperty(val);\r\n    }\r\n\r\n    private _id: string;\r\n    get id(): string {\r\n        return this._id;\r\n    }\r\n\r\n    abstract get selected(): T | null;\r\n\r\n    abstract get selecteds(): T[] | null;\r\n\r\n    abstract get dateTimeFilter(): (date: T | null) => boolean;\r\n\r\n    abstract get maxDateTime(): T | null;\r\n\r\n    abstract get minDateTime(): T | null;\r\n\r\n    abstract get selectMode(): SelectMode;\r\n\r\n    abstract get startAt(): T | null;\r\n\r\n    abstract get opened(): boolean;\r\n\r\n    abstract get pickerMode(): PickerMode;\r\n\r\n    abstract get pickerType(): PickerType;\r\n\r\n    abstract get isInSingleMode(): boolean;\r\n\r\n    abstract get isInRangeMode(): boolean;\r\n\r\n    abstract select(date: T | T[]): void;\r\n\r\n    abstract yearSelected: EventEmitter<T>;\r\n\r\n    abstract monthSelected: EventEmitter<T>;\r\n\r\n    abstract selectYear(normalizedYear: T): void;\r\n\r\n    abstract selectMonth(normalizedMonth: T): void;\r\n\r\n    get formatString(): string {\r\n        return this.pickerType === 'both'\r\n            ? this.dateTimeFormats.fullPickerInput\r\n            : this.pickerType === 'calendar'\r\n                ? this.dateTimeFormats.datePickerInput\r\n                : this.dateTimeFormats.timePickerInput;\r\n    }\r\n\r\n    /**\r\n     * Date Time Checker to check if the give dateTime is selectable\r\n     */\r\n    public dateTimeChecker = (dateTime: T) => {\r\n        return (\r\n            !!dateTime &&\r\n            (!this.dateTimeFilter || this.dateTimeFilter(dateTime)) &&\r\n            (!this.minDateTime ||\r\n                this.dateTimeAdapter.compare(dateTime, this.minDateTime) >=\r\n                    0) &&\r\n            (!this.maxDateTime ||\r\n                this.dateTimeAdapter.compare(dateTime, this.maxDateTime) <= 0)\r\n        );\r\n    };\r\n\r\n    get disabled(): boolean {\r\n        return false;\r\n    }\r\n\r\n    constructor(\r\n        @Optional() protected dateTimeAdapter: DateTimeAdapter<T>,\r\n        @Optional()\r\n        @Inject(OWL_DATE_TIME_FORMATS)\r\n        protected dateTimeFormats: OwlDateTimeFormats\r\n    ) {\r\n        if (!this.dateTimeAdapter) {\r\n            throw Error(\r\n                `OwlDateTimePicker: No provider found for DateTimeAdapter. You must import one of the following ` +\r\n                    `modules at your application root: OwlNativeDateTimeModule, OwlMomentDateTimeModule, or provide a ` +\r\n                    `custom implementation.`\r\n            );\r\n        }\r\n\r\n        if (!this.dateTimeFormats) {\r\n            throw Error(\r\n                `OwlDateTimePicker: No provider found for OWL_DATE_TIME_FORMATS. You must import one of the following ` +\r\n                    `modules at your application root: OwlNativeDateTimeModule, OwlMomentDateTimeModule, or provide a ` +\r\n                    `custom implementation.`\r\n            );\r\n        }\r\n\r\n        this._id = `owl-dt-picker-${nextUniqueId++}`;\r\n    }\r\n\r\n    protected getValidDate(obj: any): T | null {\r\n        return this.dateTimeAdapter.isDateInstance(obj) &&\r\n            this.dateTimeAdapter.isValid(obj)\r\n            ? obj\r\n            : null;\r\n    }\r\n}\r\n","/**\r\n * dialog-config.class\r\n */\r\nimport { ViewContainerRef } from '@angular/core';\r\nimport { NoopScrollStrategy, ScrollStrategy } from '@angular/cdk/overlay';\r\n\r\nlet uniqueId = 0;\r\n\r\n/** Possible overrides for a dialog's position. */\r\nexport interface DialogPosition {\r\n    /** Override for the dialog's top position. */\r\n    top?: string;\r\n\r\n    /** Override for the dialog's bottom position. */\r\n    bottom?: string;\r\n\r\n    /** Override for the dialog's left position. */\r\n    left?: string;\r\n\r\n    /** Override for the dialog's right position. */\r\n    right?: string;\r\n}\r\n\r\nexport class OwlDialogConfig {\r\n    /**\r\n     * ID of the element that describes the dialog.\r\n     */\r\n    public ariaDescribedBy?: string | null = null;\r\n\r\n    /**\r\n     * Whether to focus the dialog when the dialog is opened\r\n     */\r\n    public autoFocus? = true;\r\n\r\n    /** Whether the dialog has a backdrop. */\r\n    public hasBackdrop? = true;\r\n\r\n    /**\r\n     * Custom style for the backdrop\r\n     * */\r\n    public backdropStyle?: any;\r\n\r\n    /** Data being injected into the child component. */\r\n    public data?: any = null;\r\n\r\n    /** Whether the user can use escape or clicking outside to close a modal. */\r\n    public disableClose? = false;\r\n\r\n    /**\r\n     * ID for the modal. If omitted, a unique one will be generated.\r\n     */\r\n    public id?: string;\r\n\r\n    /**\r\n     * The ARIA role of the dialog element.\r\n     */\r\n    public role?: 'dialog' | 'alertdialog' = 'dialog';\r\n\r\n    /**\r\n     * Custom class for the pane\r\n     * */\r\n    public paneClass?: string | string[] = '';\r\n\r\n    /**\r\n     * Mouse Event\r\n     * */\r\n    public event?: MouseEvent = null;\r\n\r\n    /**\r\n     * Custom class for the backdrop\r\n     * */\r\n    public backdropClass?: string | string[] = '';\r\n\r\n    /**\r\n     * Whether the dialog should close when the user goes backwards/forwards in history.\r\n     * */\r\n    public closeOnNavigation?: boolean = true;\r\n\r\n    /** Width of the dialog. */\r\n    public width?: string = '';\r\n\r\n    /** Height of the dialog. */\r\n    public height?: string = '';\r\n\r\n    /**\r\n     * The min-width of the overlay panel.\r\n     * If a number is provided, pixel units are assumed.\r\n     * */\r\n    public minWidth?: number | string;\r\n\r\n    /**\r\n     * The min-height of the overlay panel.\r\n     * If a number is provided, pixel units are assumed.\r\n     * */\r\n    public minHeight?: number | string;\r\n\r\n    /**\r\n     * The max-width of the overlay panel.\r\n     * If a number is provided, pixel units are assumed.\r\n     * */\r\n    public maxWidth?: number | string = '85vw';\r\n\r\n    /**\r\n     * The max-height of the overlay panel.\r\n     * If a number is provided, pixel units are assumed.\r\n     * */\r\n    public maxHeight?: number | string;\r\n\r\n    /** Position overrides. */\r\n    public position?: DialogPosition;\r\n\r\n    /**\r\n     * The scroll strategy when the dialog is open\r\n     * Learn more this from https://material.angular.io/cdk/overlay/overview#scroll-strategies\r\n     * */\r\n    public scrollStrategy?: ScrollStrategy = new NoopScrollStrategy();\r\n\r\n    public viewContainerRef?: ViewContainerRef;\r\n\r\n    constructor() {\r\n        this.id = `owl-dialog-${uniqueId++}`;\r\n    }\r\n}\r\n","/**\r\n * dialog-ref.class\r\n */\r\nimport { AnimationEvent } from '@angular/animations';\r\nimport { Location } from '@angular/common';\r\nimport { GlobalPositionStrategy, OverlayRef } from '@angular/cdk/overlay';\r\nimport { ESCAPE } from '@angular/cdk/keycodes';\r\nimport { OwlDialogContainerComponent } from './dialog-container.component';\r\nimport { DialogPosition } from './dialog-config.class';\r\nimport { Observable, Subject, Subscription, SubscriptionLike as ISubscription } from 'rxjs';\r\nimport { filter, take } from 'rxjs/operators';\r\n\r\nexport class OwlDialogRef<T> {\r\n\r\n    private result: any;\r\n\r\n    private _beforeClose$ = new Subject<any>();\r\n\r\n    private _afterOpen$ = new Subject<any>();\r\n\r\n    private _afterClosed$ = new Subject<any>();\r\n\r\n    /** Subscription to changes in the user's location. */\r\n    private locationChanged: ISubscription = Subscription.EMPTY;\r\n\r\n    /**\r\n     * The instance of component opened into modal\r\n     * */\r\n    public componentInstance: T;\r\n\r\n    /** Whether the user is allowed to close the dialog. */\r\n    public disableClose = this.container.config.disableClose;\r\n\r\n    constructor( private overlayRef: OverlayRef,\r\n                 private container: OwlDialogContainerComponent,\r\n                 public readonly id: string,\r\n                 location?: Location ) {\r\n\r\n        this.container.animationStateChanged\r\n            .pipe(\r\n                filter(( event: AnimationEvent ) => event.phaseName === 'done' && event.toState === 'enter'),\r\n                take(1)\r\n            )\r\n            .subscribe(() => {\r\n                this._afterOpen$.next();\r\n                this._afterOpen$.complete();\r\n            });\r\n\r\n        this.container.animationStateChanged\r\n            .pipe(\r\n                filter(( event: AnimationEvent ) => event.phaseName === 'done' && event.toState === 'exit'),\r\n                take(1)\r\n            )\r\n            .subscribe(() => {\r\n                this.overlayRef.dispose();\r\n                this.locationChanged.unsubscribe();\r\n                this._afterClosed$.next(this.result);\r\n                this._afterClosed$.complete();\r\n                this.componentInstance = null!;\r\n            });\r\n\r\n        this.overlayRef.keydownEvents()\r\n            .pipe(filter(event => event.keyCode === ESCAPE && !this.disableClose))\r\n            .subscribe(() => this.close());\r\n\r\n        if (location) {\r\n            this.locationChanged = location.subscribe(() => {\r\n                if (this.container.config.closeOnNavigation) {\r\n                    this.close();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    public close( dialogResult?: any ) {\r\n        this.result = dialogResult;\r\n\r\n        this.container.animationStateChanged\r\n            .pipe(\r\n                filter(( event: AnimationEvent ) => event.phaseName === 'start'),\r\n                take(1)\r\n            )\r\n            .subscribe(() => {\r\n                this._beforeClose$.next(dialogResult);\r\n                this._beforeClose$.complete();\r\n                this.overlayRef.detachBackdrop();\r\n            });\r\n\r\n        this.container.startExitAnimation();\r\n    }\r\n\r\n    /**\r\n     * Gets an observable that emits when the overlay's backdrop has been clicked.\r\n     */\r\n    public backdropClick(): Observable<any> {\r\n        return this.overlayRef.backdropClick();\r\n    }\r\n\r\n    /**\r\n     * Gets an observable that emits when keydown events are targeted on the overlay.\r\n     */\r\n    public keydownEvents(): Observable<KeyboardEvent> {\r\n        return this.overlayRef.keydownEvents();\r\n    }\r\n\r\n    /**\r\n     * Updates the dialog's position.\r\n     * @param position New dialog position.\r\n     */\r\n    public updatePosition( position?: DialogPosition ): this {\r\n        let strategy = this.getPositionStrategy();\r\n\r\n        if (position && (position.left || position.right)) {\r\n            position.left ? strategy.left(position.left) : strategy.right(position.right);\r\n        } else {\r\n            strategy.centerHorizontally();\r\n        }\r\n\r\n        if (position && (position.top || position.bottom)) {\r\n            position.top ? strategy.top(position.top) : strategy.bottom(position.bottom);\r\n        } else {\r\n            strategy.centerVertically();\r\n        }\r\n\r\n        this.overlayRef.updatePosition();\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Updates the dialog's width and height.\r\n     * @param width New width of the dialog.\r\n     * @param height New height of the dialog.\r\n     */\r\n    updateSize( width: string = 'auto', height: string = 'auto' ): this {\r\n        this.getPositionStrategy().width(width).height(height);\r\n        this.overlayRef.updatePosition();\r\n        return this;\r\n    }\r\n\r\n    public isAnimating(): boolean {\r\n        return this.container.isAnimating;\r\n    }\r\n\r\n    public afterOpen(): Observable<any> {\r\n        return this._afterOpen$.asObservable();\r\n    }\r\n\r\n    public beforeClose(): Observable<any> {\r\n        return this._beforeClose$.asObservable();\r\n    }\r\n\r\n    public afterClosed(): Observable<any> {\r\n        return this._afterClosed$.asObservable();\r\n    }\r\n\r\n    /** Fetches the position strategy object from the overlay ref. */\r\n    private getPositionStrategy(): GlobalPositionStrategy {\r\n        return this.overlayRef.getConfig().positionStrategy as GlobalPositionStrategy;\r\n    }\r\n}\r\n","/**\r\n * dialog-container.component\r\n */\r\n\r\nimport {\r\n    ChangeDetectorRef,\r\n    Component,\r\n    ComponentRef,\r\n    ElementRef,\r\n    EmbeddedViewRef,\r\n    EventEmitter,\r\n    Inject,\r\n    OnInit,\r\n    Optional,\r\n    ViewChild\r\n} from '@angular/core';\r\nimport {\r\n    animate,\r\n    animateChild,\r\n    AnimationEvent,\r\n    keyframes,\r\n    style,\r\n    transition,\r\n    trigger\r\n} from '@angular/animations';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { FocusTrap, FocusTrapFactory } from '@angular/cdk/a11y';\r\nimport {\r\n    BasePortalOutlet,\r\n    CdkPortalOutlet,\r\n    ComponentPortal,\r\n    TemplatePortal\r\n} from '@angular/cdk/portal';\r\nimport { OwlDialogConfig } from './dialog-config.class';\r\n\r\nconst zoomFadeIn = {\r\n    opacity: 0,\r\n    transform: 'translateX({{ x }}) translateY({{ y }}) scale({{scale}})'\r\n};\r\nconst zoomFadeInFrom = {\r\n    opacity: 0,\r\n    transform: 'translateX({{ x }}) translateY({{ y }}) scale({{scale}})',\r\n    transformOrigin: '{{ ox }} {{ oy }}'\r\n};\r\n\r\n@Component({\r\n    selector: 'owl-dialog-container',\r\n    templateUrl: './dialog-container.component.html',\r\n    animations: [\r\n        trigger('slideModal', [\r\n            transition(\r\n                'void => enter',\r\n                [\r\n                    style(zoomFadeInFrom),\r\n                    animate('300ms cubic-bezier(0.35, 0, 0.25, 1)', style('*')),\r\n                    animate(\r\n                        '150ms',\r\n                        keyframes([\r\n                            style({ transform: 'scale(1)', offset: 0 }),\r\n                            style({ transform: 'scale(1.05)', offset: 0.3 }),\r\n                            style({ transform: 'scale(.95)', offset: 0.8 }),\r\n                            style({ transform: 'scale(1)', offset: 1.0 })\r\n                        ])\r\n                    ),\r\n                    animateChild()\r\n                ],\r\n                {\r\n                    params: {\r\n                        x: '0px',\r\n                        y: '0px',\r\n                        ox: '50%',\r\n                        oy: '50%',\r\n                        scale: 1\r\n                    }\r\n                }\r\n            ),\r\n            transition(\r\n                'enter => exit',\r\n                [animateChild(), animate(200, style(zoomFadeIn))],\r\n                { params: { x: '0px', y: '0px', ox: '50%', oy: '50%' } }\r\n            )\r\n        ])\r\n    ],\r\n    host: {\r\n        '(@slideModal.start)': 'onAnimationStart($event)',\r\n        '(@slideModal.done)': 'onAnimationDone($event)',\r\n        '[class.owl-dialog-container]': 'owlDialogContainerClass',\r\n        '[attr.tabindex]': 'owlDialogContainerTabIndex',\r\n        '[attr.id]': 'owlDialogContainerId',\r\n        '[attr.role]': 'owlDialogContainerRole',\r\n        '[attr.aria-labelledby]': 'owlDialogContainerAriaLabelledby',\r\n        '[attr.aria-describedby]': 'owlDialogContainerAriaDescribedby',\r\n        '[@slideModal]': 'owlDialogContainerAnimation'\r\n    }\r\n})\r\nexport class OwlDialogContainerComponent extends BasePortalOutlet\r\n    implements OnInit {\r\n    @ViewChild(CdkPortalOutlet, { static: true })\r\n    portalOutlet: CdkPortalOutlet;\r\n\r\n    /** The class that traps and manages focus within the dialog. */\r\n    private focusTrap: FocusTrap;\r\n\r\n    /** ID of the element that should be considered as the dialog's label. */\r\n    public ariaLabelledBy: string | null = null;\r\n\r\n    /** Emits when an animation state changes. */\r\n    public animationStateChanged = new EventEmitter<AnimationEvent>();\r\n\r\n    public isAnimating = false;\r\n\r\n    private _config: OwlDialogConfig;\r\n    get config(): OwlDialogConfig {\r\n        return this._config;\r\n    }\r\n\r\n    private state: 'void' | 'enter' | 'exit' = 'enter';\r\n\r\n    // for animation purpose\r\n    private params: any = {\r\n        x: '0px',\r\n        y: '0px',\r\n        ox: '50%',\r\n        oy: '50%',\r\n        scale: 0\r\n    };\r\n\r\n    // A variable to hold the focused element before the dialog was open.\r\n    // This would help us to refocus back to element when the dialog was closed.\r\n    private elementFocusedBeforeDialogWasOpened: HTMLElement | null = null;\r\n\r\n    get owlDialogContainerClass(): boolean {\r\n        return true;\r\n    }\r\n\r\n    get owlDialogContainerTabIndex(): number {\r\n        return -1;\r\n    }\r\n\r\n    get owlDialogContainerId(): string {\r\n        return this._config.id;\r\n    }\r\n\r\n    get owlDialogContainerRole(): string {\r\n        return this._config.role || null;\r\n    }\r\n\r\n    get owlDialogContainerAriaLabelledby(): string {\r\n        return this.ariaLabelledBy;\r\n    }\r\n\r\n    get owlDialogContainerAriaDescribedby(): string {\r\n        return this._config.ariaDescribedBy || null;\r\n    }\r\n\r\n    get owlDialogContainerAnimation(): any {\r\n        return { value: this.state, params: this.params };\r\n    }\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        private elementRef: ElementRef,\r\n        private focusTrapFactory: FocusTrapFactory,\r\n        @Optional()\r\n        @Inject(DOCUMENT)\r\n        private document: any\r\n    ) {\r\n        super();\r\n    }\r\n\r\n    public ngOnInit() {}\r\n\r\n    /**\r\n     * Attach a ComponentPortal as content to this dialog container.\r\n     */\r\n    public attachComponentPortal<T>(\r\n        portal: ComponentPortal<T>\r\n    ): ComponentRef<T> {\r\n        if (this.portalOutlet.hasAttached()) {\r\n            throw Error(\r\n                'Attempting to attach dialog content after content is already attached'\r\n            );\r\n        }\r\n\r\n        this.savePreviouslyFocusedElement();\r\n        return this.portalOutlet.attachComponentPortal(portal);\r\n    }\r\n\r\n    public attachTemplatePortal<C>(\r\n        portal: TemplatePortal<C>\r\n    ): EmbeddedViewRef<C> {\r\n        throw new Error('Method not implemented.');\r\n    }\r\n\r\n    public setConfig(config: OwlDialogConfig): void {\r\n        this._config = config;\r\n\r\n        if (config.event) {\r\n            this.calculateZoomOrigin(event);\r\n        }\r\n    }\r\n\r\n    public onAnimationStart( event: AnimationEvent ): void {\r\n        this.isAnimating = true;\r\n        this.animationStateChanged.emit(event);\r\n    }\r\n\r\n    public onAnimationDone( event: AnimationEvent ): void {\r\n        if (event.toState === 'enter') {\r\n            this.trapFocus();\r\n        } else if (event.toState === 'exit') {\r\n            this.restoreFocus();\r\n        }\r\n\r\n        this.animationStateChanged.emit(event);\r\n        this.isAnimating = false;\r\n    }\r\n\r\n    public startExitAnimation() {\r\n        this.state = 'exit';\r\n        this.changeDetector.markForCheck();\r\n    }\r\n\r\n    /**\r\n     * Calculate origin used in the `zoomFadeInFrom()`\r\n     * for animation purpose\r\n     */\r\n    private calculateZoomOrigin(event: any): void {\r\n        if (!event) {\r\n            return;\r\n        }\r\n\r\n        const clientX = event.clientX;\r\n        const clientY = event.clientY;\r\n\r\n        const wh = window.innerWidth / 2;\r\n        const hh = window.innerHeight / 2;\r\n        const x = clientX - wh;\r\n        const y = clientY - hh;\r\n        const ox = clientX / window.innerWidth;\r\n        const oy = clientY / window.innerHeight;\r\n\r\n        this.params.x = `${x}px`;\r\n        this.params.y = `${y}px`;\r\n        this.params.ox = `${ox * 100}%`;\r\n        this.params.oy = `${oy * 100}%`;\r\n        this.params.scale = 0;\r\n\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * Save the focused element before dialog was open\r\n     */\r\n    private savePreviouslyFocusedElement(): void {\r\n        if (this.document) {\r\n            this.elementFocusedBeforeDialogWasOpened = this.document\r\n                .activeElement as HTMLElement;\r\n\r\n            Promise.resolve().then(() => this.elementRef.nativeElement.focus());\r\n        }\r\n    }\r\n\r\n    private trapFocus(): void {\r\n        if (!this.focusTrap) {\r\n            this.focusTrap = this.focusTrapFactory.create(\r\n                this.elementRef.nativeElement\r\n            );\r\n        }\r\n\r\n        if (this._config.autoFocus) {\r\n            this.focusTrap.focusInitialElementWhenReady();\r\n        }\r\n    }\r\n\r\n    private restoreFocus(): void {\r\n        const toFocus = this.elementFocusedBeforeDialogWasOpened;\r\n\r\n        // We need the extra check, because IE can set the `activeElement` to null in some cases.\r\n        if (toFocus && typeof toFocus.focus === 'function') {\r\n            toFocus.focus();\r\n        }\r\n\r\n        if (this.focusTrap) {\r\n            this.focusTrap.destroy();\r\n        }\r\n    }\r\n}\r\n","/**\r\n * object.utils\r\n */\r\n\r\n\r\n/**\r\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\r\n * similar to Object.assign.\r\n *\r\n * @param dest The object which will have properties copied to it.\r\n * @param sources The source objects from which properties will be copied.\r\n */\r\nexport function extendObject(dest: any, ...sources: any[]): any {\r\n    if (dest == null) {\r\n        throw TypeError('Cannot convert undefined or null to object');\r\n    }\r\n\r\n    for (const source of sources) {\r\n        if (source != null) {\r\n            for (const key in source) {\r\n                if (source.hasOwnProperty(key)) {\r\n                    dest[key] = source[key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return dest;\r\n}\r\n","/**\r\n * dialog.service\r\n */\r\n\r\nimport {\r\n    ComponentRef,\r\n    Inject,\r\n    Injectable,\r\n    InjectionToken,\r\n    Injector,\r\n    Optional,\r\n    SkipSelf,\r\n    TemplateRef\r\n} from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { OwlDialogConfig } from './dialog-config.class';\r\nimport { OwlDialogRef } from './dialog-ref.class';\r\nimport { OwlDialogContainerComponent } from './dialog-container.component';\r\nimport { extendObject } from '../utils';\r\nimport { defer, Observable, Subject } from 'rxjs';\r\nimport { startWith } from 'rxjs/operators';\r\nimport {\r\n    Overlay,\r\n    OverlayConfig,\r\n    OverlayContainer,\r\n    OverlayRef,\r\n    ScrollStrategy\r\n} from '@angular/cdk/overlay';\r\nimport {\r\n    ComponentPortal,\r\n    ComponentType,\r\n    PortalInjector\r\n} from '@angular/cdk/portal';\r\n\r\nexport const OWL_DIALOG_DATA = new InjectionToken<any>('OwlDialogData');\r\n\r\n/**\r\n * Injection token that determines the scroll handling while the dialog is open.\r\n * */\r\nexport const OWL_DIALOG_SCROLL_STRATEGY = new InjectionToken<\r\n    () => ScrollStrategy\r\n>('owl-dialog-scroll-strategy');\r\n\r\nexport function OWL_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(\r\n    overlay: Overlay\r\n): () => ScrollStrategy {\r\n    const fn = () => overlay.scrollStrategies.block();\r\n    return fn;\r\n}\r\n\r\n/** @docs-private */\r\nexport const OWL_DIALOG_SCROLL_STRATEGY_PROVIDER = {\r\n    provide: OWL_DIALOG_SCROLL_STRATEGY,\r\n    deps: [Overlay],\r\n    useFactory: OWL_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY\r\n};\r\n\r\n/** I\r\n * njection token that can be used to specify default dialog options.\r\n * */\r\nexport const OWL_DIALOG_DEFAULT_OPTIONS = new InjectionToken<OwlDialogConfig>(\r\n    'owl-dialog-default-options'\r\n);\r\n\r\n@Injectable()\r\nexport class OwlDialogService {\r\n    private ariaHiddenElements = new Map<Element, string | null>();\r\n\r\n    private _openDialogsAtThisLevel: OwlDialogRef<any>[] = [];\r\n    private _afterOpenAtThisLevel = new Subject<OwlDialogRef<any>>();\r\n    private _afterAllClosedAtThisLevel = new Subject<void>();\r\n\r\n    /** Keeps track of the currently-open dialogs. */\r\n    get openDialogs(): OwlDialogRef<any>[] {\r\n        return this.parentDialog\r\n            ? this.parentDialog.openDialogs\r\n            : this._openDialogsAtThisLevel;\r\n    }\r\n\r\n    /** Stream that emits when a dialog has been opened. */\r\n    get afterOpen(): Subject<OwlDialogRef<any>> {\r\n        return this.parentDialog\r\n            ? this.parentDialog.afterOpen\r\n            : this._afterOpenAtThisLevel;\r\n    }\r\n\r\n    get _afterAllClosed(): any {\r\n        const parent = this.parentDialog;\r\n        return parent\r\n            ? parent._afterAllClosed\r\n            : this._afterAllClosedAtThisLevel;\r\n    }\r\n\r\n    /**\r\n     * Stream that emits when all open dialog have finished closing.\r\n     * Will emit on subscribe if there are no open dialogs to begin with.\r\n     */\r\n\r\n    afterAllClosed: Observable<{}> = defer(\r\n        () =>\r\n            this._openDialogsAtThisLevel.length\r\n                ? this._afterAllClosed\r\n                : this._afterAllClosed.pipe(startWith(undefined))\r\n    );\r\n\r\n    private scrollStrategy: () => ScrollStrategy;\r\n\r\n    constructor(\r\n        private overlay: Overlay,\r\n        private injector: Injector,\r\n        @Optional() private location: Location,\r\n        @Inject(OWL_DIALOG_SCROLL_STRATEGY) scrollStrategy: any,\r\n        @Optional()\r\n        @Inject(OWL_DIALOG_DEFAULT_OPTIONS)\r\n        private defaultOptions: OwlDialogConfig,\r\n        @Optional()\r\n        @SkipSelf()\r\n        private parentDialog: OwlDialogService,\r\n        private overlayContainer: OverlayContainer\r\n    ) {\r\n        this.scrollStrategy = scrollStrategy;\r\n        if (!parentDialog && location) {\r\n            location.subscribe(() => this.closeAll());\r\n        }\r\n    }\r\n\r\n    public open<T>(\r\n        componentOrTemplateRef: ComponentType<T> | TemplateRef<T>,\r\n        config?: OwlDialogConfig\r\n    ): OwlDialogRef<any> {\r\n        config = applyConfigDefaults(config, this.defaultOptions);\r\n\r\n        if (config.id && this.getDialogById(config.id)) {\r\n            throw Error(\r\n                `Dialog with id \"${\r\n                    config.id\r\n                }\" exists already. The dialog id must be unique.`\r\n            );\r\n        }\r\n\r\n        const overlayRef = this.createOverlay(config);\r\n        const dialogContainer = this.attachDialogContainer(overlayRef, config);\r\n        const dialogRef = this.attachDialogContent<T>(\r\n            componentOrTemplateRef,\r\n            dialogContainer,\r\n            overlayRef,\r\n            config\r\n        );\r\n\r\n        if (!this.openDialogs.length) {\r\n            this.hideNonDialogContentFromAssistiveTechnology();\r\n        }\r\n\r\n        this.openDialogs.push(dialogRef);\r\n        dialogRef\r\n            .afterClosed()\r\n            .subscribe(() => this.removeOpenDialog(dialogRef));\r\n        this.afterOpen.next(dialogRef);\r\n        return dialogRef;\r\n    }\r\n\r\n    /**\r\n     * Closes all of the currently-open dialogs.\r\n     */\r\n    public closeAll(): void {\r\n        let i = this.openDialogs.length;\r\n\r\n        while (i--) {\r\n            this.openDialogs[i].close();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Finds an open dialog by its id.\r\n     * @param id ID to use when looking up the dialog.\r\n     */\r\n    public getDialogById(id: string): OwlDialogRef<any> | undefined {\r\n        return this.openDialogs.find(dialog => dialog.id === id);\r\n    }\r\n\r\n    private attachDialogContent<T>(\r\n        componentOrTemplateRef: ComponentType<T> | TemplateRef<T>,\r\n        dialogContainer: OwlDialogContainerComponent,\r\n        overlayRef: OverlayRef,\r\n        config: OwlDialogConfig\r\n    ) {\r\n        const dialogRef = new OwlDialogRef<T>(\r\n            overlayRef,\r\n            dialogContainer,\r\n            config.id,\r\n            this.location\r\n        );\r\n\r\n        if (config.hasBackdrop) {\r\n            overlayRef.backdropClick().subscribe(() => {\r\n                if (!dialogRef.disableClose) {\r\n                    dialogRef.close();\r\n                }\r\n            });\r\n        }\r\n\r\n        if (componentOrTemplateRef instanceof TemplateRef) {\r\n        } else {\r\n            const injector = this.createInjector<T>(\r\n                config,\r\n                dialogRef,\r\n                dialogContainer\r\n            );\r\n            const contentRef = dialogContainer.attachComponentPortal(\r\n                new ComponentPortal(componentOrTemplateRef, undefined, injector)\r\n            );\r\n            dialogRef.componentInstance = contentRef.instance;\r\n        }\r\n\r\n        dialogRef\r\n            .updateSize(config.width, config.height)\r\n            .updatePosition(config.position);\r\n\r\n        return dialogRef;\r\n    }\r\n\r\n    private createInjector<T>(\r\n        config: OwlDialogConfig,\r\n        dialogRef: OwlDialogRef<T>,\r\n        dialogContainer: OwlDialogContainerComponent\r\n    ) {\r\n        const userInjector =\r\n            config &&\r\n            config.viewContainerRef &&\r\n            config.viewContainerRef.injector;\r\n        const injectionTokens = new WeakMap();\r\n\r\n        injectionTokens.set(OwlDialogRef, dialogRef);\r\n        injectionTokens.set(OwlDialogContainerComponent, dialogContainer);\r\n        injectionTokens.set(OWL_DIALOG_DATA, config.data);\r\n\r\n        return new PortalInjector(\r\n            userInjector || this.injector,\r\n            injectionTokens\r\n        );\r\n    }\r\n\r\n    private createOverlay(config: OwlDialogConfig): OverlayRef {\r\n        const overlayConfig = this.getOverlayConfig(config);\r\n        return this.overlay.create(overlayConfig);\r\n    }\r\n\r\n    private attachDialogContainer(\r\n        overlayRef: OverlayRef,\r\n        config: OwlDialogConfig\r\n    ): OwlDialogContainerComponent {\r\n        const containerPortal = new ComponentPortal(\r\n            OwlDialogContainerComponent,\r\n            config.viewContainerRef\r\n        );\r\n        const containerRef: ComponentRef<\r\n            OwlDialogContainerComponent\r\n        > = overlayRef.attach(containerPortal);\r\n        containerRef.instance.setConfig(config);\r\n\r\n        return containerRef.instance;\r\n    }\r\n\r\n    private getOverlayConfig(dialogConfig: OwlDialogConfig): OverlayConfig {\r\n        const state = new OverlayConfig({\r\n            positionStrategy: this.overlay.position().global(),\r\n            scrollStrategy:\r\n                dialogConfig.scrollStrategy || this.scrollStrategy(),\r\n            panelClass: dialogConfig.paneClass,\r\n            hasBackdrop: dialogConfig.hasBackdrop,\r\n            minWidth: dialogConfig.minWidth,\r\n            minHeight: dialogConfig.minHeight,\r\n            maxWidth: dialogConfig.maxWidth,\r\n            maxHeight: dialogConfig.maxHeight\r\n        });\r\n\r\n        if (dialogConfig.backdropClass) {\r\n            state.backdropClass = dialogConfig.backdropClass;\r\n        }\r\n\r\n        return state;\r\n    }\r\n\r\n    private removeOpenDialog(dialogRef: OwlDialogRef<any>): void {\r\n        const index = this._openDialogsAtThisLevel.indexOf(dialogRef);\r\n\r\n        if (index > -1) {\r\n            this.openDialogs.splice(index, 1);\r\n            // If all the dialogs were closed, remove/restore the `aria-hidden`\r\n            // to a the siblings and emit to the `afterAllClosed` stream.\r\n            if (!this.openDialogs.length) {\r\n                this.ariaHiddenElements.forEach((previousValue, element) => {\r\n                    if (previousValue) {\r\n                        element.setAttribute('aria-hidden', previousValue);\r\n                    } else {\r\n                        element.removeAttribute('aria-hidden');\r\n                    }\r\n                });\r\n\r\n                this.ariaHiddenElements.clear();\r\n                this._afterAllClosed.next();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Hides all of the content that isn't an overlay from assistive technology.\r\n     */\r\n    private hideNonDialogContentFromAssistiveTechnology() {\r\n        const overlayContainer = this.overlayContainer.getContainerElement();\r\n\r\n        // Ensure that the overlay container is attached to the DOM.\r\n        if (overlayContainer.parentElement) {\r\n            const siblings = overlayContainer.parentElement.children;\r\n\r\n            for (let i = siblings.length - 1; i > -1; i--) {\r\n                let sibling = siblings[i];\r\n\r\n                if (\r\n                    sibling !== overlayContainer &&\r\n                    sibling.nodeName !== 'SCRIPT' &&\r\n                    sibling.nodeName !== 'STYLE' &&\r\n                    !sibling.hasAttribute('aria-live')\r\n                ) {\r\n                    this.ariaHiddenElements.set(\r\n                        sibling,\r\n                        sibling.getAttribute('aria-hidden')\r\n                    );\r\n                    sibling.setAttribute('aria-hidden', 'true');\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Applies default options to the dialog config.\r\n * @param config Config to be modified.\r\n * @param defaultOptions Default config setting\r\n * @returns The new configuration object.\r\n */\r\nfunction applyConfigDefaults(\r\n    config?: OwlDialogConfig,\r\n    defaultOptions?: OwlDialogConfig\r\n): OwlDialogConfig {\r\n    return extendObject(new OwlDialogConfig(), config, defaultOptions);\r\n}\r\n","/**\r\n * date-time-picker.component\r\n */\r\n\r\nimport {\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    ComponentRef,\r\n    EventEmitter,\r\n    Inject,\r\n    InjectionToken,\r\n    Input,\r\n    NgZone,\r\n    OnDestroy,\r\n    OnInit,\r\n    Optional,\r\n    Output,\r\n    ViewContainerRef\r\n} from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { ComponentPortal } from '@angular/cdk/portal';\r\nimport {\r\n    BlockScrollStrategy,\r\n    Overlay,\r\n    OverlayConfig,\r\n    OverlayRef,\r\n    PositionStrategy,\r\n    ScrollStrategy\r\n} from '@angular/cdk/overlay';\r\nimport { ESCAPE, UP_ARROW } from '@angular/cdk/keycodes';\r\nimport { coerceArray, coerceBooleanProperty } from '@angular/cdk/coercion';\r\nimport { OwlDateTimeContainerComponent } from './date-time-picker-container.component';\r\nimport { OwlDateTimeInputDirective } from './date-time-picker-input.directive';\r\nimport { DateTimeAdapter } from './adapter/date-time-adapter.class';\r\nimport {\r\n    OWL_DATE_TIME_FORMATS,\r\n    OwlDateTimeFormats\r\n} from './adapter/date-time-format.class';\r\nimport {\r\n    OwlDateTime,\r\n    PickerMode,\r\n    PickerType,\r\n    SelectMode\r\n} from './date-time.class';\r\nimport { OwlDialogRef } from '../dialog/dialog-ref.class';\r\nimport { OwlDialogService } from '../dialog/dialog.service';\r\nimport { merge, Subscription } from 'rxjs';\r\nimport { filter, take } from 'rxjs/operators';\r\n\r\n/** Injection token that determines the scroll handling while the dtPicker is open. */\r\nexport const OWL_DTPICKER_SCROLL_STRATEGY = new InjectionToken<\r\n    () => ScrollStrategy\r\n>('owl-dtpicker-scroll-strategy');\r\n\r\n/** @docs-private */\r\nexport function OWL_DTPICKER_SCROLL_STRATEGY_PROVIDER_FACTORY(\r\n    overlay: Overlay\r\n): () => BlockScrollStrategy {\r\n    const fn = () => overlay.scrollStrategies.block();\r\n    return fn;\r\n}\r\n\r\n/** @docs-private */\r\nexport const OWL_DTPICKER_SCROLL_STRATEGY_PROVIDER = {\r\n    provide: OWL_DTPICKER_SCROLL_STRATEGY,\r\n    deps: [Overlay],\r\n    useFactory: OWL_DTPICKER_SCROLL_STRATEGY_PROVIDER_FACTORY\r\n};\r\n\r\n@Component({\r\n    selector: 'owl-date-time',\r\n    exportAs: 'owlDateTime',\r\n    templateUrl: './date-time-picker.component.html',\r\n    styleUrls: ['./date-time-picker.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    preserveWhitespaces: false\r\n})\r\nexport class OwlDateTimeComponent<T> extends OwlDateTime<T>\r\n    implements OnInit, OnDestroy {\r\n    /** Custom class for the picker backdrop. */\r\n    @Input()\r\n    public backdropClass: string | string[] = [];\r\n\r\n    /** Custom class for the picker overlay pane. */\r\n    @Input()\r\n    public panelClass: string | string[] = [];\r\n\r\n    /** The date to open the calendar to initially. */\r\n    private _startAt: T | null;\r\n    @Input()\r\n    get startAt(): T | null {\r\n        // If an explicit startAt is set we start there, otherwise we start at whatever the currently\r\n        // selected value is.\r\n        if (this._startAt) {\r\n            return this._startAt;\r\n        }\r\n\r\n        if (this._dtInput) {\r\n            if (this._dtInput.selectMode === 'single') {\r\n                return this._dtInput.value || null;\r\n            } else if (\r\n                this._dtInput.selectMode === 'range' ||\r\n                this._dtInput.selectMode === 'rangeFrom'\r\n            ) {\r\n                return this._dtInput.values[0] || null;\r\n            } else if (this._dtInput.selectMode === 'rangeTo') {\r\n                return this._dtInput.values[1] || null;\r\n            }\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    set startAt(date: T | null) {\r\n        this._startAt = this.getValidDate(\r\n            this.dateTimeAdapter.deserialize(date)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Set the type of the dateTime picker\r\n     *      'both' -- show both calendar and timer\r\n     *      'calendar' -- show only calendar\r\n     *      'timer' -- show only timer\r\n     */\r\n    private _pickerType: PickerType = 'both';\r\n    @Input()\r\n    get pickerType(): PickerType {\r\n        return this._pickerType;\r\n    }\r\n\r\n    set pickerType(val: PickerType) {\r\n        if (val !== this._pickerType) {\r\n            this._pickerType = val;\r\n            if (this._dtInput) {\r\n                this._dtInput.formatNativeInputValue();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Whether the picker open as a dialog\r\n     */\r\n    _pickerMode: PickerMode = 'popup';\r\n    @Input()\r\n    get pickerMode() {\r\n        return this._pickerMode;\r\n    }\r\n\r\n    set pickerMode(mode: PickerMode) {\r\n        if (mode === 'popup') {\r\n            this._pickerMode = mode;\r\n        } else {\r\n            this._pickerMode = 'dialog';\r\n        }\r\n    }\r\n\r\n    /** Whether the date time picker should be disabled. */\r\n    private _disabled: boolean;\r\n    @Input()\r\n    get disabled(): boolean {\r\n        return this._disabled === undefined && this._dtInput\r\n            ? this._dtInput.disabled\r\n            : !!this._disabled;\r\n    }\r\n\r\n    set disabled(value: boolean) {\r\n        value = coerceBooleanProperty(value);\r\n        if (value !== this._disabled) {\r\n            this._disabled = value;\r\n            this.disabledChange.next(value);\r\n        }\r\n    }\r\n\r\n    /** Whether the calendar is open. */\r\n    private _opened: boolean = false;\r\n    @Input()\r\n    get opened(): boolean {\r\n        return this._opened;\r\n    }\r\n\r\n    set opened(val: boolean) {\r\n        val ? this.open() : this.close();\r\n    }\r\n\r\n    /**\r\n     * The scroll strategy when the picker is open\r\n     * Learn more this from https://material.angular.io/cdk/overlay/overview#scroll-strategies\r\n     * */\r\n    @Input()\r\n    public scrollStrategy: ScrollStrategy;\r\n\r\n    /**\r\n     * Callback when the picker is closed\r\n     * */\r\n    @Output()\r\n    afterPickerClosed = new EventEmitter<any>();\r\n\r\n    /**\r\n     * Callback when the picker is open\r\n     * */\r\n    @Output()\r\n    afterPickerOpen = new EventEmitter<any>();\r\n\r\n    /**\r\n     * Emits selected year in multi-year view\r\n     * This doesn't imply a change on the selected date.\r\n     * */\r\n    @Output()\r\n    yearSelected = new EventEmitter<T>();\r\n\r\n    /**\r\n     * Emits selected month in year view\r\n     * This doesn't imply a change on the selected date.\r\n     * */\r\n    @Output()\r\n    monthSelected = new EventEmitter<T>();\r\n\r\n    /**\r\n     * Emit when the selected value has been confirmed\r\n     * */\r\n    public confirmSelectedChange = new EventEmitter<T[] | T>();\r\n\r\n    /**\r\n     * Emits when the date time picker is disabled.\r\n     * */\r\n    public disabledChange = new EventEmitter<boolean>();\r\n\r\n    private pickerContainerPortal: ComponentPortal<\r\n        OwlDateTimeContainerComponent<T>\r\n    >;\r\n    private pickerContainer: OwlDateTimeContainerComponent<T>;\r\n    private popupRef: OverlayRef;\r\n    private dialogRef: OwlDialogRef<OwlDateTimeContainerComponent<T>>;\r\n    private dtInputSub = Subscription.EMPTY;\r\n    private hidePickerStreamSub = Subscription.EMPTY;\r\n    private confirmSelectedStreamSub = Subscription.EMPTY;\r\n    private pickerOpenedStreamSub = Subscription.EMPTY;\r\n\r\n    /** The element that was focused before the date time picker was opened. */\r\n    private focusedElementBeforeOpen: HTMLElement | null = null;\r\n\r\n    private _dtInput: OwlDateTimeInputDirective<T>;\r\n    get dtInput() {\r\n        return this._dtInput;\r\n    }\r\n\r\n    private _selected: T | null;\r\n    get selected() {\r\n        return this._selected;\r\n    }\r\n\r\n    set selected(value: T | null) {\r\n        this._selected = value;\r\n        this.changeDetector.markForCheck();\r\n    }\r\n\r\n    private _selecteds: T[] = [];\r\n    get selecteds() {\r\n        return this._selecteds;\r\n    }\r\n\r\n    set selecteds(values: T[]) {\r\n        this._selecteds = values;\r\n        this.changeDetector.markForCheck();\r\n    }\r\n\r\n    /** The minimum selectable date. */\r\n    get minDateTime(): T | null {\r\n        return this._dtInput && this._dtInput.min;\r\n    }\r\n\r\n    /** The maximum selectable date. */\r\n    get maxDateTime(): T | null {\r\n        return this._dtInput && this._dtInput.max;\r\n    }\r\n\r\n    get dateTimeFilter(): (date: T | null) => boolean {\r\n        return this._dtInput && this._dtInput.dateTimeFilter;\r\n    }\r\n\r\n    get selectMode(): SelectMode {\r\n        return this._dtInput.selectMode;\r\n    }\r\n\r\n    get isInSingleMode(): boolean {\r\n        return this._dtInput.isInSingleMode;\r\n    }\r\n\r\n    get isInRangeMode(): boolean {\r\n        return this._dtInput.isInRangeMode;\r\n    }\r\n\r\n    private defaultScrollStrategy: () => ScrollStrategy;\r\n\r\n    constructor(\r\n        private overlay: Overlay,\r\n        private viewContainerRef: ViewContainerRef,\r\n        private dialogService: OwlDialogService,\r\n        private ngZone: NgZone,\r\n        protected changeDetector: ChangeDetectorRef,\r\n        @Optional() protected dateTimeAdapter: DateTimeAdapter<T>,\r\n        @Inject(OWL_DTPICKER_SCROLL_STRATEGY) defaultScrollStrategy: any,\r\n        @Optional()\r\n        @Inject(OWL_DATE_TIME_FORMATS)\r\n        protected dateTimeFormats: OwlDateTimeFormats,\r\n        @Optional()\r\n        @Inject(DOCUMENT)\r\n        private document: any\r\n    ) {\r\n        super(dateTimeAdapter, dateTimeFormats);\r\n        this.defaultScrollStrategy = defaultScrollStrategy;\r\n    }\r\n\r\n    public ngOnInit() {}\r\n\r\n    public ngOnDestroy(): void {\r\n        this.close();\r\n        this.dtInputSub.unsubscribe();\r\n        this.disabledChange.complete();\r\n\r\n        if (this.popupRef) {\r\n            this.popupRef.dispose();\r\n        }\r\n    }\r\n\r\n    public registerInput(input: OwlDateTimeInputDirective<T>): void {\r\n        if (this._dtInput) {\r\n            throw Error(\r\n                'A Owl DateTimePicker can only be associated with a single input.'\r\n            );\r\n        }\r\n\r\n        this._dtInput = input;\r\n        this.dtInputSub = this._dtInput.valueChange.subscribe(\r\n            (value: T[] | T | null) => {\r\n                if (Array.isArray(value)) {\r\n                    this.selecteds = value;\r\n                } else {\r\n                    this.selected = value;\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    public open(): void {\r\n        if (this._opened || this.disabled) {\r\n            return;\r\n        }\r\n\r\n        if (!this._dtInput) {\r\n            throw Error(\r\n                'Attempted to open an DateTimePicker with no associated input.'\r\n            );\r\n        }\r\n\r\n        if (this.document) {\r\n            this.focusedElementBeforeOpen = this.document.activeElement;\r\n        }\r\n\r\n        // reset the picker selected value\r\n        if (this.isInSingleMode) {\r\n            this.selected = this._dtInput.value;\r\n        } else if (this.isInRangeMode) {\r\n            this.selecteds = this._dtInput.values;\r\n        }\r\n\r\n        // when the picker is open , we make sure the picker's current selected time value\r\n        // is the same as the _startAt time value.\r\n        if (this.selected && this.pickerType !== 'calendar' && this._startAt) {\r\n            this.selected = this.dateTimeAdapter.createDate(\r\n                this.dateTimeAdapter.getYear(this.selected),\r\n                this.dateTimeAdapter.getMonth(this.selected),\r\n                this.dateTimeAdapter.getDate(this.selected),\r\n                this.dateTimeAdapter.getHours(this._startAt),\r\n                this.dateTimeAdapter.getMinutes(this._startAt),\r\n                this.dateTimeAdapter.getSeconds(this._startAt)\r\n            );\r\n        }\r\n\r\n        this.pickerMode === 'dialog' ? this.openAsDialog() : this.openAsPopup();\r\n\r\n        this.pickerContainer.picker = this;\r\n\r\n        // Listen to picker container's hidePickerStream\r\n        this.hidePickerStreamSub = this.pickerContainer.hidePickerStream.subscribe(\r\n            () => {\r\n                this.close();\r\n            }\r\n        );\r\n\r\n        // Listen to picker container's confirmSelectedStream\r\n        this.confirmSelectedStreamSub = this.pickerContainer.confirmSelectedStream.subscribe(\r\n            (event: any) => {\r\n                this.confirmSelect(event);\r\n            }\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Selects the given date\r\n     */\r\n    public select(date: T[] | T): void {\r\n        if (Array.isArray(date)) {\r\n            this.selecteds = [...date];\r\n        } else {\r\n            this.selected = date;\r\n        }\r\n\r\n        /**\r\n         * Cases in which automatically confirm the select when date or dates are selected:\r\n         * 1) picker mode is NOT 'dialog'\r\n         * 2) picker type is 'calendar' and selectMode is 'single'.\r\n         * 3) picker type is 'calendar' and selectMode is 'range' and\r\n         *    the 'selecteds' has 'from'(selecteds[0]) and 'to'(selecteds[1]) values.\r\n         * 4) selectMode is 'rangeFrom' and selecteds[0] has value.\r\n         * 5) selectMode is 'rangeTo' and selecteds[1] has value.\r\n         * */\r\n        if (\r\n            this.pickerMode !== 'dialog' &&\r\n            this.pickerType === 'calendar' &&\r\n            ((this.selectMode === 'single' && this.selected) ||\r\n                (this.selectMode === 'rangeFrom' && this.selecteds[0]) ||\r\n                (this.selectMode === 'rangeTo' && this.selecteds[1]) ||\r\n                (this.selectMode === 'range' &&\r\n                    this.selecteds[0] &&\r\n                    this.selecteds[1]))\r\n        ) {\r\n            this.confirmSelect();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Emits the selected year in multi-year view\r\n     * */\r\n    public selectYear(normalizedYear: T): void {\r\n        this.yearSelected.emit(normalizedYear);\r\n    }\r\n\r\n    /**\r\n     * Emits selected month in year view\r\n     * */\r\n    public selectMonth(normalizedMonth: T): void {\r\n        this.monthSelected.emit(normalizedMonth);\r\n    }\r\n\r\n    /**\r\n     * Hide the picker\r\n     */\r\n    public close(): void {\r\n        if (!this._opened) {\r\n            return;\r\n        }\r\n\r\n        if (this.popupRef && this.popupRef.hasAttached()) {\r\n            this.popupRef.detach();\r\n        }\r\n\r\n        if (\r\n            this.pickerContainerPortal &&\r\n            this.pickerContainerPortal.isAttached\r\n        ) {\r\n            this.pickerContainerPortal.detach();\r\n        }\r\n\r\n        if (this.hidePickerStreamSub) {\r\n            this.hidePickerStreamSub.unsubscribe();\r\n            this.hidePickerStreamSub = null;\r\n        }\r\n\r\n        if (this.confirmSelectedStreamSub) {\r\n            this.confirmSelectedStreamSub.unsubscribe();\r\n            this.confirmSelectedStreamSub = null;\r\n        }\r\n\r\n        if (this.pickerOpenedStreamSub) {\r\n            this.pickerOpenedStreamSub.unsubscribe();\r\n            this.pickerOpenedStreamSub = null;\r\n        }\r\n\r\n        if (this.dialogRef) {\r\n            this.dialogRef.close();\r\n            this.dialogRef = null;\r\n        }\r\n\r\n        const completeClose = () => {\r\n            if (this._opened) {\r\n                this._opened = false;\r\n                this.afterPickerClosed.emit(null);\r\n                this.focusedElementBeforeOpen = null;\r\n            }\r\n        };\r\n\r\n        if (\r\n            this.focusedElementBeforeOpen &&\r\n            typeof this.focusedElementBeforeOpen.focus === 'function'\r\n        ) {\r\n            // Because IE moves focus asynchronously, we can't count on it being restored before we've\r\n            // marked the datepicker as closed. If the event fires out of sequence and the element that\r\n            // we're refocusing opens the datepicker on focus, the user could be stuck with not being\r\n            // able to close the calendar at all. We work around it by making the logic, that marks\r\n            // the datepicker as closed, async as well.\r\n            this.focusedElementBeforeOpen.focus();\r\n            setTimeout(completeClose);\r\n        } else {\r\n            completeClose();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Confirm the selected value\r\n     */\r\n    public confirmSelect(event?: any): void {\r\n        if (this.isInSingleMode) {\r\n            const selected =\r\n                this.selected || this.startAt || this.dateTimeAdapter.now();\r\n            this.confirmSelectedChange.emit(selected);\r\n        } else if (this.isInRangeMode) {\r\n            this.confirmSelectedChange.emit(this.selecteds);\r\n        }\r\n\r\n        this.close();\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * Open the picker as a dialog\r\n     */\r\n    private openAsDialog(): void {\r\n        this.dialogRef = this.dialogService.open(\r\n            OwlDateTimeContainerComponent,\r\n            {\r\n                autoFocus: false,\r\n                backdropClass: [\r\n                    'cdk-overlay-dark-backdrop',\r\n                    ...coerceArray(this.backdropClass)\r\n                ],\r\n                paneClass: ['owl-dt-dialog', ...coerceArray(this.panelClass)],\r\n                viewContainerRef: this.viewContainerRef,\r\n                scrollStrategy:\r\n                    this.scrollStrategy || this.defaultScrollStrategy()\r\n            }\r\n        );\r\n        this.pickerContainer = this.dialogRef.componentInstance;\r\n\r\n        this.dialogRef.afterOpen().subscribe(() => {\r\n            this.afterPickerOpen.emit(null);\r\n            this._opened = true;\r\n        });\r\n        this.dialogRef.afterClosed().subscribe(() => this.close());\r\n    }\r\n\r\n    /**\r\n     * Open the picker as popup\r\n     */\r\n    private openAsPopup(): void {\r\n        if (!this.pickerContainerPortal) {\r\n            this.pickerContainerPortal = new ComponentPortal<\r\n                OwlDateTimeContainerComponent<T>\r\n            >(OwlDateTimeContainerComponent, this.viewContainerRef);\r\n        }\r\n\r\n        if (!this.popupRef) {\r\n            this.createPopup();\r\n        }\r\n\r\n        if (!this.popupRef.hasAttached()) {\r\n            const componentRef: ComponentRef<\r\n                OwlDateTimeContainerComponent<T>\r\n            > = this.popupRef.attach(this.pickerContainerPortal);\r\n            this.pickerContainer = componentRef.instance;\r\n\r\n            // Update the position once the calendar has rendered.\r\n            this.ngZone.onStable\r\n                .asObservable()\r\n                .pipe(take(1))\r\n                .subscribe(() => {\r\n                    this.popupRef.updatePosition();\r\n                });\r\n\r\n            // emit open stream\r\n            this.pickerOpenedStreamSub = this.pickerContainer.pickerOpenedStream\r\n                .pipe(take(1))\r\n                .subscribe(() => {\r\n                    this.afterPickerOpen.emit(null);\r\n                    this._opened = true;\r\n                });\r\n        }\r\n    }\r\n\r\n    private createPopup(): void {\r\n        const overlayConfig = new OverlayConfig({\r\n            positionStrategy: this.createPopupPositionStrategy(),\r\n            hasBackdrop: true,\r\n            backdropClass: [\r\n                'cdk-overlay-transparent-backdrop',\r\n                ...coerceArray(this.backdropClass)\r\n            ],\r\n            scrollStrategy: this.scrollStrategy || this.defaultScrollStrategy(),\r\n            panelClass: ['owl-dt-popup', ...coerceArray(this.panelClass)]\r\n        });\r\n\r\n        this.popupRef = this.overlay.create(overlayConfig);\r\n\r\n        merge(\r\n            this.popupRef.backdropClick(),\r\n            this.popupRef.detachments(),\r\n            this.popupRef\r\n                .keydownEvents()\r\n                .pipe(\r\n                    filter(\r\n                        event =>\r\n                            event.keyCode === ESCAPE ||\r\n                            (this._dtInput &&\r\n                                event.altKey &&\r\n                                event.keyCode === UP_ARROW)\r\n                    )\r\n                )\r\n        ).subscribe(() => this.close());\r\n    }\r\n\r\n    /**\r\n     * Create the popup PositionStrategy.\r\n     * */\r\n    private createPopupPositionStrategy(): PositionStrategy {\r\n        return this.overlay\r\n            .position()\r\n            .flexibleConnectedTo(this._dtInput.elementRef)\r\n            .withTransformOriginOn('.owl-dt-container')\r\n            .withFlexibleDimensions(false)\r\n            .withPush(false)\r\n            .withPositions([\r\n                {\r\n                    originX: 'start',\r\n                    originY: 'bottom',\r\n                    overlayX: 'start',\r\n                    overlayY: 'top'\r\n                },\r\n                {\r\n                    originX: 'start',\r\n                    originY: 'top',\r\n                    overlayX: 'start',\r\n                    overlayY: 'bottom'\r\n                },\r\n                {\r\n                    originX: 'end',\r\n                    originY: 'bottom',\r\n                    overlayX: 'end',\r\n                    overlayY: 'top'\r\n                },\r\n                {\r\n                    originX: 'end',\r\n                    originY: 'top',\r\n                    overlayX: 'end',\r\n                    overlayY: 'bottom'\r\n                },\r\n                {\r\n                    originX: 'start',\r\n                    originY: 'top',\r\n                    overlayX: 'start',\r\n                    overlayY: 'top',\r\n                    offsetY: -176\r\n                },\r\n                {\r\n                    originX: 'start',\r\n                    originY: 'top',\r\n                    overlayX: 'start',\r\n                    overlayY: 'top',\r\n                    offsetY: -352\r\n                }\r\n            ]);\r\n    }\r\n}\r\n","/**\r\n * date-time-picker-trigger.directive\r\n */\r\n\r\n\r\nimport {\r\n    AfterContentInit,\r\n    ChangeDetectorRef,\r\n    Directive,\r\n    Input,\r\n    OnChanges,\r\n    OnDestroy,\r\n    OnInit,\r\n    SimpleChanges\r\n} from '@angular/core';\r\nimport { OwlDateTimeComponent } from './date-time-picker.component';\r\nimport { merge, of as observableOf, Subscription } from 'rxjs';\r\n\r\n@Directive({\r\n    selector: '[owlDateTimeTrigger]',\r\n    host: {\r\n        '(click)': 'handleClickOnHost($event)',\r\n        '[class.owl-dt-trigger-disabled]': 'owlDTTriggerDisabledClass'\r\n    }\r\n})\r\nexport class OwlDateTimeTriggerDirective<T> implements OnInit, OnChanges, AfterContentInit, OnDestroy {\r\n\r\n    @Input('owlDateTimeTrigger') dtPicker: OwlDateTimeComponent<T>;\r\n\r\n    private _disabled: boolean;\r\n    @Input()\r\n    get disabled(): boolean {\r\n        return this._disabled === undefined ? this.dtPicker.disabled : !!this._disabled;\r\n    }\r\n\r\n    set disabled( value: boolean ) {\r\n        this._disabled = value;\r\n    }\r\n\r\n    get owlDTTriggerDisabledClass(): boolean {\r\n        return this.disabled;\r\n    }\r\n\r\n    private stateChanges = Subscription.EMPTY;\r\n\r\n    constructor( protected changeDetector: ChangeDetectorRef ) {\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n    }\r\n\r\n    public ngOnChanges( changes: SimpleChanges ) {\r\n        if (changes.datepicker) {\r\n            this.watchStateChanges();\r\n        }\r\n    }\r\n\r\n    public ngAfterContentInit() {\r\n        this.watchStateChanges();\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        this.stateChanges.unsubscribe();\r\n    }\r\n\r\n    public handleClickOnHost( event: Event ): void {\r\n        if (this.dtPicker) {\r\n            this.dtPicker.open();\r\n            event.stopPropagation();\r\n        }\r\n    }\r\n\r\n    private watchStateChanges(): void {\r\n        this.stateChanges.unsubscribe();\r\n\r\n        const inputDisabled = this.dtPicker && this.dtPicker.dtInput ?\r\n            this.dtPicker.dtInput.disabledChange : observableOf();\r\n\r\n        const pickerDisabled = this.dtPicker ?\r\n            this.dtPicker.disabledChange : observableOf();\r\n\r\n        this.stateChanges = merge(pickerDisabled, inputDisabled)\r\n            .subscribe(() => {\r\n                this.changeDetector.markForCheck();\r\n            });\r\n    }\r\n}\r\n","/**\r\n * date-time-picker-input.directive\r\n */\r\n\r\nimport {\r\n    AfterContentInit,\r\n    Directive,\r\n    ElementRef,\r\n    EventEmitter,\r\n    forwardRef,\r\n    Inject,\r\n    Input,\r\n    OnDestroy,\r\n    OnInit,\r\n    Optional,\r\n    Output,\r\n    Renderer2\r\n} from '@angular/core';\r\nimport {\r\n    AbstractControl,\r\n    ControlValueAccessor,\r\n    NG_VALIDATORS,\r\n    NG_VALUE_ACCESSOR,\r\n    ValidationErrors,\r\n    Validator,\r\n    ValidatorFn,\r\n    Validators\r\n} from '@angular/forms';\r\nimport { DOWN_ARROW } from '@angular/cdk/keycodes';\r\nimport { OwlDateTimeComponent } from './date-time-picker.component';\r\nimport { DateTimeAdapter } from './adapter/date-time-adapter.class';\r\nimport {\r\n    OWL_DATE_TIME_FORMATS,\r\n    OwlDateTimeFormats\r\n} from './adapter/date-time-format.class';\r\nimport { Subscription } from 'rxjs';\r\nimport { SelectMode } from './date-time.class';\r\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\r\n\r\nexport const OWL_DATETIME_VALUE_ACCESSOR: any = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => OwlDateTimeInputDirective),\r\n    multi: true\r\n};\r\n\r\nexport const OWL_DATETIME_VALIDATORS: any = {\r\n    provide: NG_VALIDATORS,\r\n    useExisting: forwardRef(() => OwlDateTimeInputDirective),\r\n    multi: true\r\n};\r\n\r\n@Directive({\r\n    selector: 'input[owlDateTime]',\r\n    exportAs: 'owlDateTimeInput',\r\n    host: {\r\n        '(keydown)': 'handleKeydownOnHost($event)',\r\n        '(blur)': 'handleBlurOnHost($event)',\r\n        '(input)': 'handleInputOnHost($event)',\r\n        '(change)': 'handleChangeOnHost($event)',\r\n        '[attr.aria-haspopup]': 'owlDateTimeInputAriaHaspopup',\r\n        '[attr.aria-owns]': 'owlDateTimeInputAriaOwns',\r\n        '[attr.min]': 'minIso8601',\r\n        '[attr.max]': 'maxIso8601',\r\n        '[disabled]': 'owlDateTimeInputDisabled'\r\n    },\r\n    providers: [\r\n        OWL_DATETIME_VALUE_ACCESSOR,\r\n        OWL_DATETIME_VALIDATORS,\r\n    ],\r\n})\r\nexport class OwlDateTimeInputDirective<T>\r\n    implements\r\n        OnInit,\r\n        AfterContentInit,\r\n        OnDestroy,\r\n        ControlValueAccessor,\r\n        Validator {\r\n    /**\r\n     * The date time picker that this input is associated with.\r\n     * */\r\n    @Input()\r\n    set owlDateTime(value: OwlDateTimeComponent<T>) {\r\n        this.registerDateTimePicker(value);\r\n    }\r\n\r\n    /**\r\n     * A function to filter date time\r\n     */\r\n    @Input()\r\n    set owlDateTimeFilter(filter: (date: T | null) => boolean) {\r\n        this._dateTimeFilter = filter;\r\n        this.validatorOnChange();\r\n    }\r\n\r\n    private _dateTimeFilter: (date: T | null) => boolean;\r\n    get dateTimeFilter() {\r\n        return this._dateTimeFilter;\r\n    }\r\n\r\n    /** Whether the date time picker's input is disabled. */\r\n    @Input()\r\n    private _disabled: boolean;\r\n    get disabled() {\r\n        return !!this._disabled;\r\n    }\r\n\r\n    set disabled(value: boolean) {\r\n        const newValue = coerceBooleanProperty(value);\r\n        const element = this.elmRef.nativeElement;\r\n\r\n        if (this._disabled !== newValue) {\r\n            this._disabled = newValue;\r\n            this.disabledChange.emit(newValue);\r\n        }\r\n\r\n        // We need to null check the `blur` method, because it's undefined during SSR.\r\n        if (newValue && element.blur) {\r\n            // Normally, native input elements automatically blur if they turn disabled. This behavior\r\n            // is problematic, because it would mean that it triggers another change detection cycle,\r\n            // which then causes a changed after checked error if the input element was focused before.\r\n            element.blur();\r\n        }\r\n    }\r\n\r\n    /** The minimum valid date. */\r\n    private _min: T | null;\r\n    @Input()\r\n    get min(): T | null {\r\n        return this._min;\r\n    }\r\n\r\n    set min(value: T | null) {\r\n        this._min = this.getValidDate(this.dateTimeAdapter.deserialize(value));\r\n        this.validatorOnChange();\r\n    }\r\n\r\n    /** The maximum valid date. */\r\n    private _max: T | null;\r\n    @Input()\r\n    get max(): T | null {\r\n        return this._max;\r\n    }\r\n\r\n    set max(value: T | null) {\r\n        this._max = this.getValidDate(this.dateTimeAdapter.deserialize(value));\r\n        this.validatorOnChange();\r\n    }\r\n\r\n    /**\r\n     * The picker's select mode\r\n     */\r\n    private _selectMode: SelectMode = 'single';\r\n    @Input()\r\n    get selectMode() {\r\n        return this._selectMode;\r\n    }\r\n\r\n    set selectMode(mode: SelectMode) {\r\n        if (\r\n            mode !== 'single' &&\r\n            mode !== 'range' &&\r\n            mode !== 'rangeFrom' &&\r\n            mode !== 'rangeTo'\r\n        ) {\r\n            throw Error('OwlDateTime Error: invalid selectMode value!');\r\n        }\r\n\r\n        this._selectMode = mode;\r\n    }\r\n\r\n    /**\r\n     * The character to separate the 'from' and 'to' in input value\r\n     */\r\n    @Input()\r\n    rangeSeparator = '~';\r\n\r\n    private _value: T | null;\r\n    @Input()\r\n    get value() {\r\n        return this._value;\r\n    }\r\n\r\n    set value(value: T | null) {\r\n        value = this.dateTimeAdapter.deserialize(value);\r\n        this.lastValueValid = !value || this.dateTimeAdapter.isValid(value);\r\n        value = this.getValidDate(value);\r\n        const oldDate = this._value;\r\n        this._value = value;\r\n\r\n        // set the input property 'value'\r\n        this.formatNativeInputValue();\r\n\r\n        // check if the input value changed\r\n        if (!this.dateTimeAdapter.isEqual(oldDate, value)) {\r\n            this.valueChange.emit(value);\r\n        }\r\n    }\r\n\r\n    private _values: T[] = [];\r\n    @Input()\r\n    get values() {\r\n        return this._values;\r\n    }\r\n\r\n    set values(values: T[]) {\r\n        if (values && values.length > 0) {\r\n            this._values = values.map(v => {\r\n                v = this.dateTimeAdapter.deserialize(v);\r\n                return this.getValidDate(v);\r\n            });\r\n            this.lastValueValid =\r\n                (!this._values[0] ||\r\n                    this.dateTimeAdapter.isValid(this._values[0])) &&\r\n                (!this._values[1] ||\r\n                    this.dateTimeAdapter.isValid(this._values[1]));\r\n        } else {\r\n            this._values = [];\r\n            this.lastValueValid = true;\r\n        }\r\n\r\n        // set the input property 'value'\r\n        this.formatNativeInputValue();\r\n\r\n        this.valueChange.emit(this._values);\r\n    }\r\n\r\n    /**\r\n     * Callback to invoke when `change` event is fired on this `<input>`\r\n     * */\r\n    @Output()\r\n    dateTimeChange = new EventEmitter<any>();\r\n\r\n    /**\r\n     * Callback to invoke when an `input` event is fired on this `<input>`.\r\n     * */\r\n    @Output()\r\n    dateTimeInput = new EventEmitter<any>();\r\n\r\n    get elementRef(): ElementRef {\r\n        return this.elmRef;\r\n    }\r\n\r\n    get isInSingleMode(): boolean {\r\n        return this._selectMode === 'single';\r\n    }\r\n\r\n    get isInRangeMode(): boolean {\r\n        return (\r\n            this._selectMode === 'range' ||\r\n            this._selectMode === 'rangeFrom' ||\r\n            this._selectMode === 'rangeTo'\r\n        );\r\n    }\r\n\r\n    /** The date-time-picker that this input is associated with. */\r\n    public dtPicker: OwlDateTimeComponent<T>;\r\n\r\n    private dtPickerSub: Subscription = Subscription.EMPTY;\r\n    private localeSub: Subscription = Subscription.EMPTY;\r\n\r\n    private lastValueValid = true;\r\n\r\n    private onModelChange: Function = () => {};\r\n    private onModelTouched: Function = () => {};\r\n    private validatorOnChange: Function = () => {};\r\n\r\n    /** The form control validator for whether the input parses. */\r\n    private parseValidator: ValidatorFn = (): ValidationErrors | null => {\r\n        return this.lastValueValid\r\n            ? null\r\n            : { owlDateTimeParse: { text: this.elmRef.nativeElement.value } };\r\n    };\r\n\r\n    /** The form control validator for the min date. */\r\n    private minValidator: ValidatorFn = (\r\n        control: AbstractControl\r\n    ): ValidationErrors | null => {\r\n        if (this.isInSingleMode) {\r\n            const controlValue = this.getValidDate(\r\n                this.dateTimeAdapter.deserialize(control.value)\r\n            );\r\n            return !this.min ||\r\n                !controlValue ||\r\n                this.dateTimeAdapter.compare(this.min, controlValue) <= 0\r\n                ? null\r\n                : { owlDateTimeMin: { min: this.min, actual: controlValue } };\r\n        } else if (this.isInRangeMode && control.value) {\r\n            const controlValueFrom = this.getValidDate(\r\n                this.dateTimeAdapter.deserialize(control.value[0])\r\n            );\r\n            const controlValueTo = this.getValidDate(\r\n                this.dateTimeAdapter.deserialize(control.value[1])\r\n            );\r\n            return !this.min ||\r\n                !controlValueFrom ||\r\n                !controlValueTo ||\r\n                this.dateTimeAdapter.compare(this.min, controlValueFrom) <= 0\r\n                ? null\r\n                : {\r\n                      owlDateTimeMin: {\r\n                          min: this.min,\r\n                          actual: [controlValueFrom, controlValueTo]\r\n                      }\r\n                  };\r\n        }\r\n    };\r\n\r\n    /** The form control validator for the max date. */\r\n    private maxValidator: ValidatorFn = (\r\n        control: AbstractControl\r\n    ): ValidationErrors | null => {\r\n        if (this.isInSingleMode) {\r\n            const controlValue = this.getValidDate(\r\n                this.dateTimeAdapter.deserialize(control.value)\r\n            );\r\n            return !this.max ||\r\n                !controlValue ||\r\n                this.dateTimeAdapter.compare(this.max, controlValue) >= 0\r\n                ? null\r\n                : { owlDateTimeMax: { max: this.max, actual: controlValue } };\r\n        } else if (this.isInRangeMode && control.value) {\r\n            const controlValueFrom = this.getValidDate(\r\n                this.dateTimeAdapter.deserialize(control.value[0])\r\n            );\r\n            const controlValueTo = this.getValidDate(\r\n                this.dateTimeAdapter.deserialize(control.value[1])\r\n            );\r\n            return !this.max ||\r\n                !controlValueFrom ||\r\n                !controlValueTo ||\r\n                this.dateTimeAdapter.compare(this.max, controlValueTo) >= 0\r\n                ? null\r\n                : {\r\n                      owlDateTimeMax: {\r\n                          max: this.max,\r\n                          actual: [controlValueFrom, controlValueTo]\r\n                      }\r\n                  };\r\n        }\r\n    };\r\n\r\n    /** The form control validator for the date filter. */\r\n    private filterValidator: ValidatorFn = (\r\n        control: AbstractControl\r\n    ): ValidationErrors | null => {\r\n        const controlValue = this.getValidDate(\r\n            this.dateTimeAdapter.deserialize(control.value)\r\n        );\r\n        return !this._dateTimeFilter ||\r\n            !controlValue ||\r\n            this._dateTimeFilter(controlValue)\r\n            ? null\r\n            : { owlDateTimeFilter: true };\r\n    };\r\n\r\n    /**\r\n     * The form control validator for the range.\r\n     * Check whether the 'before' value is before the 'to' value\r\n     * */\r\n    private rangeValidator: ValidatorFn = (\r\n        control: AbstractControl\r\n    ): ValidationErrors | null => {\r\n        if (this.isInSingleMode || !control.value) {\r\n            return null;\r\n        }\r\n\r\n        const controlValueFrom = this.getValidDate(\r\n            this.dateTimeAdapter.deserialize(control.value[0])\r\n        );\r\n        const controlValueTo = this.getValidDate(\r\n            this.dateTimeAdapter.deserialize(control.value[1])\r\n        );\r\n\r\n        return !controlValueFrom ||\r\n            !controlValueTo ||\r\n            this.dateTimeAdapter.compare(controlValueFrom, controlValueTo) <= 0\r\n            ? null\r\n            : { owlDateTimeRange: true };\r\n    };\r\n\r\n    /** The combined form control validator for this input. */\r\n    private validator: ValidatorFn | null = Validators.compose([\r\n        this.parseValidator,\r\n        this.minValidator,\r\n        this.maxValidator,\r\n        this.filterValidator,\r\n        this.rangeValidator\r\n    ]);\r\n\r\n    /** Emits when the value changes (either due to user input or programmatic change). */\r\n    public valueChange = new EventEmitter<T[] | T | null>();\r\n\r\n    /** Emits when the disabled state has changed */\r\n    public disabledChange = new EventEmitter<boolean>();\r\n\r\n    get owlDateTimeInputAriaHaspopup(): boolean {\r\n        return true;\r\n    }\r\n\r\n    get owlDateTimeInputAriaOwns(): string {\r\n        return (this.dtPicker.opened && this.dtPicker.id) || null;\r\n    }\r\n\r\n    get minIso8601(): string {\r\n        return this.min ? this.dateTimeAdapter.toIso8601(this.min) : null;\r\n    }\r\n\r\n    get maxIso8601(): string {\r\n        return this.max ? this.dateTimeAdapter.toIso8601(this.max) : null;\r\n    }\r\n\r\n    get owlDateTimeInputDisabled(): boolean {\r\n        return this.disabled;\r\n    }\r\n\r\n    constructor( private elmRef: ElementRef,\r\n        private renderer: Renderer2,\r\n        @Optional() private dateTimeAdapter: DateTimeAdapter<T>,\r\n        @Optional() @Inject(OWL_DATE_TIME_FORMATS) private dateTimeFormats: OwlDateTimeFormats ) {\r\n        if (!this.dateTimeAdapter) {\r\n            throw Error(\r\n                `OwlDateTimePicker: No provider found for DateTimePicker. You must import one of the following ` +\r\n                    `modules at your application root: OwlNativeDateTimeModule, OwlMomentDateTimeModule, or provide a ` +\r\n                    `custom implementation.`\r\n            );\r\n        }\r\n\r\n        if (!this.dateTimeFormats) {\r\n            throw Error(\r\n                `OwlDateTimePicker: No provider found for OWL_DATE_TIME_FORMATS. You must import one of the following ` +\r\n                    `modules at your application root: OwlNativeDateTimeModule, OwlMomentDateTimeModule, or provide a ` +\r\n                    `custom implementation.`\r\n            );\r\n        }\r\n\r\n        this.localeSub = this.dateTimeAdapter.localeChanges.subscribe(() => {\r\n            this.value = this.value;\r\n        });\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        if (!this.dtPicker) {\r\n            throw Error(\r\n                `OwlDateTimePicker: the picker input doesn't have any associated owl-date-time component`\r\n            );\r\n        }\r\n    }\r\n\r\n    public ngAfterContentInit(): void {\r\n        this.dtPickerSub = this.dtPicker.confirmSelectedChange.subscribe(\r\n            (selecteds: T[] | T) => {\r\n                if (Array.isArray(selecteds)) {\r\n                    this.values = selecteds;\r\n                } else {\r\n                    this.value = selecteds;\r\n                }\r\n\r\n                this.onModelChange(selecteds);\r\n                this.onModelTouched();\r\n                this.dateTimeChange.emit({\r\n                    source: this,\r\n                    value: selecteds,\r\n                    input: this.elmRef.nativeElement\r\n                });\r\n                this.dateTimeInput.emit({\r\n                    source: this,\r\n                    value: selecteds,\r\n                    input: this.elmRef.nativeElement\r\n                });\r\n            }\r\n        );\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        this.dtPickerSub.unsubscribe();\r\n        this.localeSub.unsubscribe();\r\n        this.valueChange.complete();\r\n        this.disabledChange.complete();\r\n    }\r\n\r\n    public writeValue(value: any): void {\r\n        if (this.isInSingleMode) {\r\n            this.value = value;\r\n        } else {\r\n            this.values = value;\r\n        }\r\n    }\r\n\r\n    public registerOnChange(fn: any): void {\r\n        this.onModelChange = fn;\r\n    }\r\n\r\n    public registerOnTouched(fn: any): void {\r\n        this.onModelTouched = fn;\r\n    }\r\n\r\n    public setDisabledState(isDisabled: boolean): void {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    public validate(c: AbstractControl): { [key: string]: any } {\r\n        return this.validator ? this.validator(c) : null;\r\n    }\r\n\r\n    public registerOnValidatorChange(fn: () => void): void {\r\n        this.validatorOnChange = fn;\r\n    }\r\n\r\n    /**\r\n     * Open the picker when user hold alt + DOWN_ARROW\r\n     * */\r\n    public handleKeydownOnHost( event: KeyboardEvent ): void {\r\n        if (event.altKey && event.keyCode === DOWN_ARROW) {\r\n            this.dtPicker.open();\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    public handleBlurOnHost( event: Event ): void {\r\n        this.onModelTouched();\r\n    }\r\n\r\n    public handleInputOnHost( event: any ): void {\r\n        let value = event.target.value;\r\n        if (this._selectMode === 'single') {\r\n            this.changeInputInSingleMode(value);\r\n        } else if (this._selectMode === 'range') {\r\n            this.changeInputInRangeMode(value);\r\n        } else {\r\n            this.changeInputInRangeFromToMode(value);\r\n        }\r\n    }\r\n\r\n    public handleChangeOnHost( event: any ): void {\r\n\r\n        let v;\r\n        if (this.isInSingleMode) {\r\n            v = this.value;\r\n        } else if (this.isInRangeMode) {\r\n            v = this.values;\r\n        }\r\n\r\n        this.dateTimeChange.emit({\r\n            source: this,\r\n            value: v,\r\n            input: this.elmRef.nativeElement\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Set the native input property 'value'\r\n     */\r\n    public formatNativeInputValue(): void {\r\n        if (this.isInSingleMode) {\r\n            this.renderer.setProperty(\r\n                this.elmRef.nativeElement,\r\n                'value',\r\n                this._value\r\n                    ? this.dateTimeAdapter.format(\r\n                          this._value,\r\n                          this.dtPicker.formatString\r\n                      )\r\n                    : ''\r\n            );\r\n        } else if (this.isInRangeMode) {\r\n            if (this._values && this.values.length > 0) {\r\n                const from = this._values[0];\r\n                const to = this._values[1];\r\n\r\n                const fromFormatted = from\r\n                    ? this.dateTimeAdapter.format(\r\n                          from,\r\n                          this.dtPicker.formatString\r\n                      )\r\n                    : '';\r\n                const toFormatted = to\r\n                    ? this.dateTimeAdapter.format(\r\n                          to,\r\n                          this.dtPicker.formatString\r\n                      )\r\n                    : '';\r\n\r\n                if (!fromFormatted && !toFormatted) {\r\n                    this.renderer.setProperty(\r\n                        this.elmRef.nativeElement,\r\n                        'value',\r\n                        null\r\n                    );\r\n                } else {\r\n                    if (this._selectMode === 'range') {\r\n                        this.renderer.setProperty(\r\n                            this.elmRef.nativeElement,\r\n                            'value',\r\n                            fromFormatted +\r\n                                ' ' +\r\n                                this.rangeSeparator +\r\n                                ' ' +\r\n                                toFormatted\r\n                        );\r\n                    } else if (this._selectMode === 'rangeFrom') {\r\n                        this.renderer.setProperty(\r\n                            this.elmRef.nativeElement,\r\n                            'value',\r\n                            fromFormatted\r\n                        );\r\n                    } else if (this._selectMode === 'rangeTo') {\r\n                        this.renderer.setProperty(\r\n                            this.elmRef.nativeElement,\r\n                            'value',\r\n                            toFormatted\r\n                        );\r\n                    }\r\n                }\r\n            } else {\r\n                this.renderer.setProperty(\r\n                    this.elmRef.nativeElement,\r\n                    'value',\r\n                    ''\r\n                );\r\n            }\r\n        }\r\n\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * Register the relationship between this input and its picker component\r\n     */\r\n    private registerDateTimePicker(picker: OwlDateTimeComponent<T>) {\r\n        if (picker) {\r\n            this.dtPicker = picker;\r\n            this.dtPicker.registerInput(this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Convert a given obj to a valid date object\r\n     */\r\n    private getValidDate(obj: any): T | null {\r\n        return this.dateTimeAdapter.isDateInstance(obj) &&\r\n            this.dateTimeAdapter.isValid(obj)\r\n            ? obj\r\n            : null;\r\n    }\r\n\r\n    /**\r\n     * Convert a time string to a date-time string\r\n     * When pickerType is 'timer', the value in the picker's input is a time string.\r\n     * The dateTimeAdapter parse fn could not parse a time string to a Date Object.\r\n     * Therefore we need this fn to convert a time string to a date-time string.\r\n     */\r\n    private convertTimeStringToDateTimeString(\r\n        timeString: string,\r\n        dateTime: T\r\n    ): string | null {\r\n        if (timeString) {\r\n            const v = dateTime || this.dateTimeAdapter.now();\r\n            const dateString = this.dateTimeAdapter.format(\r\n                v,\r\n                this.dateTimeFormats.datePickerInput\r\n            );\r\n            return dateString + ' ' + timeString;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handle input change in single mode\r\n     */\r\n    private changeInputInSingleMode(inputValue: string): void {\r\n        let value = inputValue;\r\n        if (this.dtPicker.pickerType === 'timer') {\r\n            value = this.convertTimeStringToDateTimeString(value, this.value);\r\n        }\r\n\r\n        let result = this.dateTimeAdapter.parse(\r\n            value,\r\n            this.dateTimeFormats.parseInput\r\n        );\r\n        this.lastValueValid = !result || this.dateTimeAdapter.isValid(result);\r\n        result = this.getValidDate(result);\r\n\r\n        // if the newValue is the same as the oldValue, we intend to not fire the valueChange event\r\n        // result equals to null means there is input event, but the input value is invalid\r\n        if (!this.isSameValue(result, this._value) || result === null) {\r\n            this._value = result;\r\n            this.valueChange.emit(result);\r\n            this.onModelChange(result);\r\n            this.dateTimeInput.emit({\r\n                source: this,\r\n                value: result,\r\n                input: this.elmRef.nativeElement\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handle input change in rangeFrom or rangeTo mode\r\n     */\r\n    private changeInputInRangeFromToMode(inputValue: string): void {\r\n        let originalValue =\r\n            this._selectMode === 'rangeFrom'\r\n                ? this._values[0]\r\n                : this._values[1];\r\n\r\n        if (this.dtPicker.pickerType === 'timer') {\r\n            inputValue = this.convertTimeStringToDateTimeString(\r\n                inputValue,\r\n                originalValue\r\n            );\r\n        }\r\n\r\n        let result = this.dateTimeAdapter.parse(\r\n            inputValue,\r\n            this.dateTimeFormats.parseInput\r\n        );\r\n        this.lastValueValid = !result || this.dateTimeAdapter.isValid(result);\r\n        result = this.getValidDate(result);\r\n\r\n        // if the newValue is the same as the oldValue, we intend to not fire the valueChange event\r\n        if (\r\n            (this._selectMode === 'rangeFrom' &&\r\n                this.isSameValue(result, this._values[0]) &&\r\n                result) ||\r\n            (this._selectMode === 'rangeTo' &&\r\n                this.isSameValue(result, this._values[1]) &&\r\n                result)\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        this._values =\r\n            this._selectMode === 'rangeFrom'\r\n                ? [result, this._values[1]]\r\n                : [this._values[0], result];\r\n        this.valueChange.emit(this._values);\r\n        this.onModelChange(this._values);\r\n        this.dateTimeInput.emit({\r\n            source: this,\r\n            value: this._values,\r\n            input: this.elmRef.nativeElement\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Handle input change in range mode\r\n     */\r\n    private changeInputInRangeMode(inputValue: string): void {\r\n        const selecteds = inputValue.split(this.rangeSeparator);\r\n        let fromString = selecteds[0];\r\n        let toString = selecteds[1];\r\n\r\n        if (this.dtPicker.pickerType === 'timer') {\r\n            fromString = this.convertTimeStringToDateTimeString(\r\n                fromString,\r\n                this.values[0]\r\n            );\r\n            toString = this.convertTimeStringToDateTimeString(\r\n                toString,\r\n                this.values[1]\r\n            );\r\n        }\r\n\r\n        let from = this.dateTimeAdapter.parse(\r\n            fromString,\r\n            this.dateTimeFormats.parseInput\r\n        );\r\n        let to = this.dateTimeAdapter.parse(\r\n            toString,\r\n            this.dateTimeFormats.parseInput\r\n        );\r\n        this.lastValueValid =\r\n            (!from || this.dateTimeAdapter.isValid(from)) &&\r\n            (!to || this.dateTimeAdapter.isValid(to));\r\n        from = this.getValidDate(from);\r\n        to = this.getValidDate(to);\r\n\r\n        // if the newValue is the same as the oldValue, we intend to not fire the valueChange event\r\n        if (\r\n            !this.isSameValue(from, this._values[0]) ||\r\n            !this.isSameValue(to, this._values[1]) ||\r\n            (from === null && to === null)\r\n        ) {\r\n            this._values = [from, to];\r\n            this.valueChange.emit(this._values);\r\n            this.onModelChange(this._values);\r\n            this.dateTimeInput.emit({\r\n                source: this,\r\n                value: this._values,\r\n                input: this.elmRef.nativeElement\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check if the two value is the same\r\n     */\r\n    private isSameValue(first: T | null, second: T | null): boolean {\r\n        if (first && second) {\r\n            return this.dateTimeAdapter.compare(first, second) === 0;\r\n        }\r\n\r\n        return first == second;\r\n    }\r\n}\r\n","/**\r\n * calendar-body.component\r\n */\r\n\r\nimport {\r\n    ChangeDetectionStrategy,\r\n    Component,\r\n    ElementRef,\r\n    EventEmitter,\r\n    Input,\r\n    NgZone,\r\n    OnInit,\r\n    Output\r\n} from '@angular/core';\r\nimport { SelectMode } from './date-time.class';\r\nimport { take } from 'rxjs/operators';\r\n\r\nexport class CalendarCell {\r\n    constructor(\r\n        public value: number,\r\n        public displayValue: string,\r\n        public ariaLabel: string,\r\n        public enabled: boolean,\r\n        public out: boolean = false,\r\n        public cellClass: string = ''\r\n    ) {}\r\n}\r\n\r\n@Component({\r\n    selector: '[owl-date-time-calendar-body]',\r\n    exportAs: 'owlDateTimeCalendarBody',\r\n    templateUrl: './calendar-body.component.html',\r\n    styleUrls: ['./calendar-body.component.scss'],\r\n    host:{\r\n        '[class.owl-dt-calendar-body]': 'owlDTCalendarBodyClass'\r\n    },\r\n    preserveWhitespaces: false,\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class OwlCalendarBodyComponent implements OnInit {\r\n    /**\r\n     * The cell number of the active cell in the table.\r\n     */\r\n    @Input()\r\n    activeCell = 0;\r\n\r\n    /**\r\n     * The cells to display in the table.\r\n     * */\r\n    @Input()\r\n    rows: CalendarCell[][];\r\n\r\n    /**\r\n     * The number of columns in the table.\r\n     * */\r\n    @Input()\r\n    numCols = 7;\r\n\r\n    /**\r\n     * The ratio (width / height) to use for the cells in the table.\r\n     */\r\n    @Input()\r\n    cellRatio = 1;\r\n\r\n    /**\r\n     * The value in the table that corresponds to today.\r\n     * */\r\n    @Input()\r\n    todayValue: number;\r\n\r\n    /**\r\n     * The value in the table that is currently selected.\r\n     * */\r\n    @Input()\r\n    selectedValues: number[];\r\n\r\n    /**\r\n     * Current picker select mode\r\n     */\r\n    @Input()\r\n    selectMode: SelectMode;\r\n\r\n    /**\r\n     * Emit when a calendar cell is selected\r\n     * */\r\n    @Output()\r\n    public readonly select = new EventEmitter<CalendarCell>();\r\n\r\n    get owlDTCalendarBodyClass(): boolean {\r\n        return true;\r\n    }\r\n\r\n    get isInSingleMode(): boolean {\r\n        return this.selectMode === 'single';\r\n    }\r\n\r\n    get isInRangeMode(): boolean {\r\n        return (\r\n            this.selectMode === 'range' ||\r\n            this.selectMode === 'rangeFrom' ||\r\n            this.selectMode === 'rangeTo'\r\n        );\r\n    }\r\n\r\n    constructor(private elmRef: ElementRef, private ngZone: NgZone) {}\r\n\r\n    public ngOnInit() {}\r\n\r\n    public selectCell(cell: CalendarCell): void {\r\n        this.select.emit(cell);\r\n    }\r\n\r\n    public isActiveCell(rowIndex: number, colIndex: number): boolean {\r\n        const cellNumber = rowIndex * this.numCols + colIndex;\r\n        return cellNumber === this.activeCell;\r\n    }\r\n\r\n    /**\r\n     * Check if the cell is selected\r\n     */\r\n    public isSelected(value: number): boolean {\r\n        if (!this.selectedValues || this.selectedValues.length === 0) {\r\n            return false;\r\n        }\r\n\r\n        if (this.isInSingleMode) {\r\n            return value === this.selectedValues[0];\r\n        }\r\n\r\n        if (this.isInRangeMode) {\r\n            const fromValue = this.selectedValues[0];\r\n            const toValue = this.selectedValues[1];\r\n\r\n            return value === fromValue || value === toValue;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check if the cell in the range\r\n     * */\r\n    public isInRange(value: number): boolean {\r\n        if (this.isInRangeMode) {\r\n            const fromValue = this.selectedValues[0];\r\n            const toValue = this.selectedValues[1];\r\n\r\n            if (fromValue !== null && toValue !== null) {\r\n                return value >= fromValue && value <= toValue;\r\n            } else {\r\n                return value === fromValue || value === toValue;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check if the cell is the range from\r\n     * */\r\n    public isRangeFrom(value: number): boolean {\r\n        if (this.isInRangeMode) {\r\n            const fromValue = this.selectedValues[0];\r\n            return fromValue !== null && value === fromValue;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check if the cell is the range to\r\n     * */\r\n    public isRangeTo(value: number): boolean {\r\n        if (this.isInRangeMode) {\r\n            const toValue = this.selectedValues[1];\r\n            return toValue !== null && value === toValue;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Focus to a active cell\r\n     * */\r\n    public focusActiveCell(): void {\r\n        this.ngZone.runOutsideAngular(() => {\r\n            this.ngZone.onStable\r\n                .asObservable()\r\n                .pipe(take(1))\r\n                .subscribe(() => {\r\n                    this.elmRef.nativeElement\r\n                        .querySelector('.owl-dt-calendar-cell-active')\r\n                        .focus();\r\n                });\r\n        });\r\n    }\r\n}\r\n","/**\r\n * calendar-month-view.component\r\n */\r\n\r\nimport {\r\n    AfterContentInit,\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    EventEmitter,\r\n    Inject,\r\n    Input,\r\n    OnDestroy,\r\n    OnInit,\r\n    Optional,\r\n    Output,\r\n    ViewChild\r\n} from '@angular/core';\r\nimport {\r\n    CalendarCell,\r\n    OwlCalendarBodyComponent\r\n} from './calendar-body.component';\r\nimport { DateTimeAdapter } from './adapter/date-time-adapter.class';\r\nimport {\r\n    OWL_DATE_TIME_FORMATS,\r\n    OwlDateTimeFormats\r\n} from './adapter/date-time-format.class';\r\nimport { Subscription } from 'rxjs';\r\nimport { SelectMode } from './date-time.class';\r\nimport {\r\n    DOWN_ARROW,\r\n    END,\r\n    ENTER,\r\n    HOME,\r\n    LEFT_ARROW,\r\n    PAGE_DOWN,\r\n    PAGE_UP,\r\n    RIGHT_ARROW,\r\n    UP_ARROW\r\n} from '@angular/cdk/keycodes';\r\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\r\n\r\nconst DAYS_PER_WEEK = 7;\r\nconst WEEKS_PER_VIEW = 6;\r\n\r\n@Component({\r\n    selector: 'owl-date-time-month-view',\r\n    exportAs: 'owlYearView',\r\n    templateUrl: './calendar-month-view.component.html',\r\n    styleUrls: ['./calendar-month-view.component.scss'],\r\n    host: {\r\n        '[class.owl-dt-calendar-view]': 'owlDTCalendarView'\r\n    },\r\n    preserveWhitespaces: false,\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class OwlMonthViewComponent<T>\r\n    implements OnInit, AfterContentInit, OnDestroy {\r\n    /**\r\n     * Whether to hide dates in other months at the start or end of the current month.\r\n     * */\r\n    @Input()\r\n    hideOtherMonths: boolean = false;\r\n\r\n    /**\r\n     * Define the first day of a week\r\n     * Sunday: 0 ~ Saturday: 6\r\n     * */\r\n    private _firstDayOfWeek: number = 0;\r\n    @Input()\r\n    get firstDayOfWeek(): number {\r\n        return this._firstDayOfWeek;\r\n    }\r\n\r\n    set firstDayOfWeek(val: number) {\r\n        val = coerceNumberProperty(val);\r\n        if (val >= 0 && val <= 6 && val !== this._firstDayOfWeek) {\r\n            this._firstDayOfWeek = val;\r\n\r\n            if (this.initiated) {\r\n                this.generateWeekDays();\r\n                this.generateCalendar();\r\n                this.cdRef.markForCheck();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * The select mode of the picker;\r\n     * */\r\n    private _selectMode: SelectMode = 'single';\r\n    @Input()\r\n    get selectMode(): SelectMode {\r\n        return this._selectMode;\r\n    }\r\n\r\n    set selectMode(val: SelectMode) {\r\n        this._selectMode = val;\r\n        if (this.initiated) {\r\n            this.generateCalendar();\r\n            this.cdRef.markForCheck();\r\n        }\r\n    }\r\n\r\n    /** The currently selected date. */\r\n    private _selected: T | null;\r\n    @Input()\r\n    get selected(): T | null {\r\n        return this._selected;\r\n    }\r\n\r\n    set selected(value: T | null) {\r\n        const oldSelected = this._selected;\r\n        value = this.dateTimeAdapter.deserialize(value);\r\n        this._selected = this.getValidDate(value);\r\n\r\n        if (!this.dateTimeAdapter.isSameDay(oldSelected, this._selected)) {\r\n            this.setSelectedDates();\r\n        }\r\n    }\r\n\r\n    private _selecteds: T[] = [];\r\n    @Input()\r\n    get selecteds(): T[] {\r\n        return this._selecteds;\r\n    }\r\n\r\n    set selecteds(values: T[]) {\r\n        this._selecteds = values.map(v => {\r\n            v = this.dateTimeAdapter.deserialize(v);\r\n            return this.getValidDate(v);\r\n        });\r\n        this.setSelectedDates();\r\n    }\r\n\r\n    private _pickerMoment: T;\r\n    @Input()\r\n    get pickerMoment() {\r\n        return this._pickerMoment;\r\n    }\r\n\r\n    set pickerMoment(value: T) {\r\n        const oldMoment = this._pickerMoment;\r\n        value = this.dateTimeAdapter.deserialize(value);\r\n        this._pickerMoment =\r\n            this.getValidDate(value) || this.dateTimeAdapter.now();\r\n\r\n        this.firstDateOfMonth = this.dateTimeAdapter.createDate(\r\n            this.dateTimeAdapter.getYear(this._pickerMoment),\r\n            this.dateTimeAdapter.getMonth(this._pickerMoment),\r\n            1\r\n        );\r\n\r\n        if (\r\n            !this.isSameMonth(oldMoment, this._pickerMoment) &&\r\n            this.initiated\r\n        ) {\r\n            this.generateCalendar();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * A function used to filter which dates are selectable\r\n     * */\r\n    private _dateFilter: (date: T) => boolean;\r\n    @Input()\r\n    get dateFilter() {\r\n        return this._dateFilter;\r\n    }\r\n\r\n    set dateFilter(filter: (date: T) => boolean) {\r\n        this._dateFilter = filter;\r\n        if (this.initiated) {\r\n            this.generateCalendar();\r\n            this.cdRef.markForCheck();\r\n        }\r\n    }\r\n\r\n    /** The minimum selectable date. */\r\n    private _minDate: T | null;\r\n    @Input()\r\n    get minDate(): T | null {\r\n        return this._minDate;\r\n    }\r\n\r\n    set minDate(value: T | null) {\r\n        value = this.dateTimeAdapter.deserialize(value);\r\n        this._minDate = this.getValidDate(value);\r\n        if (this.initiated) {\r\n            this.generateCalendar();\r\n            this.cdRef.markForCheck();\r\n        }\r\n    }\r\n\r\n    /** The maximum selectable date. */\r\n    private _maxDate: T | null;\r\n    @Input()\r\n    get maxDate(): T | null {\r\n        return this._maxDate;\r\n    }\r\n\r\n    set maxDate(value: T | null) {\r\n        value = this.dateTimeAdapter.deserialize(value);\r\n        this._maxDate = this.getValidDate(value);\r\n\r\n        if (this.initiated) {\r\n            this.generateCalendar();\r\n            this.cdRef.markForCheck();\r\n        }\r\n    }\r\n\r\n    private _weekdays: Array<{ long: string; short: string; narrow: string }>;\r\n    get weekdays() {\r\n        return this._weekdays;\r\n    }\r\n\r\n    private _days: CalendarCell[][];\r\n    get days() {\r\n        return this._days;\r\n    }\r\n\r\n    get activeCell(): number {\r\n        if (this.pickerMoment) {\r\n            return (\r\n                this.dateTimeAdapter.getDate(this.pickerMoment) +\r\n                this.firstRowOffset -\r\n                1\r\n            );\r\n        }\r\n    }\r\n\r\n    get isInSingleMode(): boolean {\r\n        return this.selectMode === 'single';\r\n    }\r\n\r\n    get isInRangeMode(): boolean {\r\n        return (\r\n            this.selectMode === 'range' ||\r\n            this.selectMode === 'rangeFrom' ||\r\n            this.selectMode === 'rangeTo'\r\n        );\r\n    }\r\n\r\n    private firstDateOfMonth: T;\r\n\r\n    private localeSub: Subscription = Subscription.EMPTY;\r\n\r\n    private initiated = false;\r\n\r\n    private dateNames: string[];\r\n\r\n    /**\r\n     * The date of the month that today falls on.\r\n     * */\r\n    public todayDate: number | null;\r\n\r\n    /**\r\n     * An array to hold all selectedDates' value\r\n     * the value is the day number in current month\r\n     * */\r\n    public selectedDates: number[] = [];\r\n\r\n    // the index of cell that contains the first date of the month\r\n    public firstRowOffset: number;\r\n\r\n    /**\r\n     * Callback to invoke when a new date is selected\r\n     * */\r\n    @Output()\r\n    readonly selectedChange = new EventEmitter<T | null>();\r\n\r\n    /**\r\n     * Callback to invoke when any date is selected.\r\n     * */\r\n    @Output()\r\n    readonly userSelection = new EventEmitter<void>();\r\n\r\n    /** Emits when any date is activated. */\r\n    @Output()\r\n    readonly pickerMomentChange: EventEmitter<T> = new EventEmitter<T>();\r\n\r\n    /** The body of calendar table */\r\n    @ViewChild(OwlCalendarBodyComponent, { static: true })\r\n    calendarBodyElm: OwlCalendarBodyComponent;\r\n\r\n    get owlDTCalendarView(): boolean {\r\n        return true;\r\n    }\r\n\r\n    constructor(\r\n        private cdRef: ChangeDetectorRef,\r\n        @Optional() private dateTimeAdapter: DateTimeAdapter<T>,\r\n        @Optional()\r\n        @Inject(OWL_DATE_TIME_FORMATS)\r\n        private dateTimeFormats: OwlDateTimeFormats\r\n    ) {}\r\n\r\n    public ngOnInit() {\r\n        this.generateWeekDays();\r\n\r\n        this.localeSub = this.dateTimeAdapter.localeChanges.subscribe(() => {\r\n            this.generateWeekDays();\r\n            this.generateCalendar();\r\n            this.cdRef.markForCheck();\r\n        });\r\n    }\r\n\r\n    public ngAfterContentInit(): void {\r\n        this.generateCalendar();\r\n        this.initiated = true;\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        this.localeSub.unsubscribe();\r\n    }\r\n\r\n    /**\r\n     * Handle a calendarCell selected\r\n     */\r\n    public selectCalendarCell(cell: CalendarCell): void {\r\n        // Cases in which the date would not be selected\r\n        // 1, the calendar cell is NOT enabled (is NOT valid)\r\n        // 2, the selected date is NOT in current picker's month and the hideOtherMonths is enabled\r\n        if (!cell.enabled || (this.hideOtherMonths && cell.out)) {\r\n            return;\r\n        }\r\n\r\n        this.selectDate(cell.value);\r\n    }\r\n\r\n    /**\r\n     * Handle a new date selected\r\n     */\r\n    private selectDate(date: number): void {\r\n        const daysDiff = date - 1;\r\n        const selected = this.dateTimeAdapter.addCalendarDays(\r\n            this.firstDateOfMonth,\r\n            daysDiff\r\n        );\r\n\r\n        this.selectedChange.emit(selected);\r\n        this.userSelection.emit();\r\n    }\r\n\r\n    /**\r\n     * Handle keydown event on calendar body\r\n     */\r\n    public handleCalendarKeydown(event: KeyboardEvent): void {\r\n        let moment;\r\n        switch (event.keyCode) {\r\n            // minus 1 day\r\n            case LEFT_ARROW:\r\n                moment = this.dateTimeAdapter.addCalendarDays(\r\n                    this.pickerMoment,\r\n                    -1\r\n                );\r\n                this.pickerMomentChange.emit(moment);\r\n                break;\r\n\r\n            // add 1 day\r\n            case RIGHT_ARROW:\r\n                moment = this.dateTimeAdapter.addCalendarDays(\r\n                    this.pickerMoment,\r\n                    1\r\n                );\r\n                this.pickerMomentChange.emit(moment);\r\n                break;\r\n\r\n            // minus 1 week\r\n            case UP_ARROW:\r\n                moment = this.dateTimeAdapter.addCalendarDays(\r\n                    this.pickerMoment,\r\n                    -7\r\n                );\r\n                this.pickerMomentChange.emit(moment);\r\n                break;\r\n\r\n            // add 1 week\r\n            case DOWN_ARROW:\r\n                moment = this.dateTimeAdapter.addCalendarDays(\r\n                    this.pickerMoment,\r\n                    7\r\n                );\r\n                this.pickerMomentChange.emit(moment);\r\n                break;\r\n\r\n            // move to first day of current month\r\n            case HOME:\r\n                moment = this.dateTimeAdapter.addCalendarDays(\r\n                    this.pickerMoment,\r\n                    1 - this.dateTimeAdapter.getDate(this.pickerMoment)\r\n                );\r\n                this.pickerMomentChange.emit(moment);\r\n                break;\r\n\r\n            // move to last day of current month\r\n            case END:\r\n                moment = this.dateTimeAdapter.addCalendarDays(\r\n                    this.pickerMoment,\r\n                    this.dateTimeAdapter.getNumDaysInMonth(this.pickerMoment) -\r\n                        this.dateTimeAdapter.getDate(this.pickerMoment)\r\n                );\r\n                this.pickerMomentChange.emit(moment);\r\n                break;\r\n\r\n            // minus 1 month (or 1 year)\r\n            case PAGE_UP:\r\n                moment = event.altKey\r\n                    ? this.dateTimeAdapter.addCalendarYears(\r\n                          this.pickerMoment,\r\n                          -1\r\n                      )\r\n                    : this.dateTimeAdapter.addCalendarMonths(\r\n                          this.pickerMoment,\r\n                          -1\r\n                      );\r\n                this.pickerMomentChange.emit(moment);\r\n                break;\r\n\r\n            // add 1 month (or 1 year)\r\n            case PAGE_DOWN:\r\n                moment = event.altKey\r\n                    ? this.dateTimeAdapter.addCalendarYears(\r\n                          this.pickerMoment,\r\n                          1\r\n                      )\r\n                    : this.dateTimeAdapter.addCalendarMonths(\r\n                          this.pickerMoment,\r\n                          1\r\n                      );\r\n                this.pickerMomentChange.emit(moment);\r\n                break;\r\n\r\n            // select the pickerMoment\r\n            case ENTER:\r\n                if (!this.dateFilter || this.dateFilter(this.pickerMoment)) {\r\n                    this.selectDate(\r\n                        this.dateTimeAdapter.getDate(this.pickerMoment)\r\n                    );\r\n                }\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n\r\n        this.focusActiveCell();\r\n        event.preventDefault();\r\n    }\r\n\r\n    /**\r\n     * Generate the calendar weekdays array\r\n     * */\r\n    private generateWeekDays(): void {\r\n        const longWeekdays = this.dateTimeAdapter.getDayOfWeekNames('long');\r\n        const shortWeekdays = this.dateTimeAdapter.getDayOfWeekNames('short');\r\n        const narrowWeekdays = this.dateTimeAdapter.getDayOfWeekNames('narrow');\r\n        const firstDayOfWeek = this.firstDayOfWeek;\r\n\r\n        const weekdays = longWeekdays.map((long, i) => {\r\n            return { long, short: shortWeekdays[i], narrow: narrowWeekdays[i] };\r\n        });\r\n\r\n        this._weekdays = weekdays\r\n            .slice(firstDayOfWeek)\r\n            .concat(weekdays.slice(0, firstDayOfWeek));\r\n\r\n        this.dateNames = this.dateTimeAdapter.getDateNames();\r\n\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * Generate the calendar days array\r\n     * */\r\n    private generateCalendar(): void {\r\n        if (!this.pickerMoment) {\r\n            return;\r\n        }\r\n\r\n        this.todayDate = null;\r\n\r\n        // the first weekday of the month\r\n        const startWeekdayOfMonth = this.dateTimeAdapter.getDay(\r\n            this.firstDateOfMonth\r\n        );\r\n        const firstDayOfWeek = this.firstDayOfWeek;\r\n\r\n        // the amount of days from the first date of the month\r\n        // if it is < 0, it means the date is in previous month\r\n        let daysDiff =\r\n            0 -\r\n            ((startWeekdayOfMonth + (DAYS_PER_WEEK - firstDayOfWeek)) %\r\n                DAYS_PER_WEEK);\r\n\r\n        // the index of cell that contains the first date of the month\r\n        this.firstRowOffset = Math.abs(daysDiff);\r\n\r\n        this._days = [];\r\n        for (let i = 0; i < WEEKS_PER_VIEW; i++) {\r\n            const week = [];\r\n            for (let j = 0; j < DAYS_PER_WEEK; j++) {\r\n                const date = this.dateTimeAdapter.addCalendarDays(\r\n                    this.firstDateOfMonth,\r\n                    daysDiff\r\n                );\r\n                const dateCell = this.createDateCell(date, daysDiff);\r\n\r\n                // check if the date is today\r\n                if (\r\n                    this.dateTimeAdapter.isSameDay(\r\n                        this.dateTimeAdapter.now(),\r\n                        date\r\n                    )\r\n                ) {\r\n                    this.todayDate = daysDiff + 1;\r\n                }\r\n\r\n                week.push(dateCell);\r\n                daysDiff += 1;\r\n            }\r\n            this._days.push(week);\r\n        }\r\n\r\n        this.setSelectedDates();\r\n    }\r\n\r\n    /**\r\n     * Creates CalendarCell for days.\r\n     */\r\n    private createDateCell(date: T, daysDiff: number): CalendarCell {\r\n        // total days of the month\r\n        const daysInMonth = this.dateTimeAdapter.getNumDaysInMonth(\r\n            this.pickerMoment\r\n        );\r\n        const dateNum = this.dateTimeAdapter.getDate(date);\r\n        // const dateName = this.dateNames[dateNum - 1];\r\n        const dateName = dateNum.toString();\r\n        const ariaLabel = this.dateTimeAdapter.format(\r\n            date,\r\n            this.dateTimeFormats.dateA11yLabel\r\n        );\r\n\r\n        // check if the date if selectable\r\n        const enabled = this.isDateEnabled(date);\r\n\r\n        // check if date is not in current month\r\n        const dayValue = daysDiff + 1;\r\n        const out = dayValue < 1 || dayValue > daysInMonth;\r\n        const cellClass = 'owl-dt-day-' + this.dateTimeAdapter.getDay(date);\r\n\r\n        return new CalendarCell(\r\n            dayValue,\r\n            dateName,\r\n            ariaLabel,\r\n            enabled,\r\n            out,\r\n            cellClass\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Check if the date is valid\r\n     */\r\n    private isDateEnabled(date: T): boolean {\r\n        return (\r\n            !!date &&\r\n            (!this.dateFilter || this.dateFilter(date)) &&\r\n            (!this.minDate ||\r\n                this.dateTimeAdapter.compare(date, this.minDate) >= 0) &&\r\n            (!this.maxDate ||\r\n                this.dateTimeAdapter.compare(date, this.maxDate) <= 0)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Get a valid date object\r\n     */\r\n    private getValidDate(obj: any): T | null {\r\n        return this.dateTimeAdapter.isDateInstance(obj) &&\r\n            this.dateTimeAdapter.isValid(obj)\r\n            ? obj\r\n            : null;\r\n    }\r\n\r\n    /**\r\n     * Check if the give dates are none-null and in the same month\r\n     */\r\n    public isSameMonth(dateLeft: T, dateRight: T): boolean {\r\n        return !!(\r\n            dateLeft &&\r\n            dateRight &&\r\n            this.dateTimeAdapter.isValid(dateLeft) &&\r\n            this.dateTimeAdapter.isValid(dateRight) &&\r\n            this.dateTimeAdapter.getYear(dateLeft) ===\r\n                this.dateTimeAdapter.getYear(dateRight) &&\r\n            this.dateTimeAdapter.getMonth(dateLeft) ===\r\n                this.dateTimeAdapter.getMonth(dateRight)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Set the selectedDates value.\r\n     * In single mode, it has only one value which represent the selected date\r\n     * In range mode, it would has two values, one for the fromValue and the other for the toValue\r\n     * */\r\n    private setSelectedDates(): void {\r\n        this.selectedDates = [];\r\n\r\n        if (!this.firstDateOfMonth) {\r\n            return;\r\n        }\r\n\r\n        if (this.isInSingleMode && this.selected) {\r\n            const dayDiff = this.dateTimeAdapter.differenceInCalendarDays(\r\n                this.selected,\r\n                this.firstDateOfMonth\r\n            );\r\n            this.selectedDates[0] = dayDiff + 1;\r\n            return;\r\n        }\r\n\r\n        if (this.isInRangeMode && this.selecteds) {\r\n            this.selectedDates = this.selecteds.map(selected => {\r\n                if (this.dateTimeAdapter.isValid(selected)) {\r\n                    const dayDiff = this.dateTimeAdapter.differenceInCalendarDays(\r\n                        selected,\r\n                        this.firstDateOfMonth\r\n                    );\r\n                    return dayDiff + 1;\r\n                } else {\r\n                    return null;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private focusActiveCell() {\r\n        this.calendarBodyElm.focusActiveCell();\r\n    }\r\n}\r\n","/**\r\n * calendar-year-view.component\r\n */\r\n\r\nimport {\r\n    AfterContentInit,\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    EventEmitter,\r\n    Inject,\r\n    Input,\r\n    OnDestroy,\r\n    OnInit,\r\n    Optional,\r\n    Output,\r\n    ViewChild\r\n} from '@angular/core';\r\nimport {\r\n    CalendarCell,\r\n    OwlCalendarBodyComponent\r\n} from './calendar-body.component';\r\nimport { DateTimeAdapter } from './adapter/date-time-adapter.class';\r\nimport {\r\n    OWL_DATE_TIME_FORMATS,\r\n    OwlDateTimeFormats\r\n} from './adapter/date-time-format.class';\r\nimport { Subscription } from 'rxjs';\r\nimport { SelectMode } from './date-time.class';\r\nimport {\r\n    DOWN_ARROW,\r\n    END,\r\n    ENTER,\r\n    HOME,\r\n    LEFT_ARROW,\r\n    PAGE_DOWN,\r\n    PAGE_UP,\r\n    RIGHT_ARROW,\r\n    UP_ARROW\r\n} from '@angular/cdk/keycodes';\r\n\r\nconst MONTHS_PER_YEAR = 12;\r\nconst MONTHS_PER_ROW = 3;\r\n\r\n@Component({\r\n    selector: 'owl-date-time-year-view',\r\n    exportAs: 'owlMonthView',\r\n    templateUrl: './calendar-year-view.component.html',\r\n    styleUrls: ['./calendar-year-view.component.scss'],\r\n    host: {\r\n        '[class.owl-dt-calendar-view]': 'owlDTCalendarView'\r\n    },\r\n    preserveWhitespaces: false,\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class OwlYearViewComponent<T>\r\n    implements OnInit, AfterContentInit, OnDestroy {\r\n    /**\r\n     * The select mode of the picker;\r\n     * */\r\n    private _selectMode: SelectMode = 'single';\r\n    @Input()\r\n    get selectMode(): SelectMode {\r\n        return this._selectMode;\r\n    }\r\n\r\n    set selectMode(val: SelectMode) {\r\n        this._selectMode = val;\r\n        if (this.initiated) {\r\n            this.generateMonthList();\r\n            this.cdRef.markForCheck();\r\n        }\r\n    }\r\n\r\n    /** The currently selected date. */\r\n    private _selected: T | null;\r\n    @Input()\r\n    get selected(): T | null {\r\n        return this._selected;\r\n    }\r\n\r\n    set selected(value: T | null) {\r\n        value = this.dateTimeAdapter.deserialize(value);\r\n        this._selected = this.getValidDate(value);\r\n        this.setSelectedMonths();\r\n    }\r\n\r\n    private _selecteds: T[] = [];\r\n    @Input()\r\n    get selecteds(): T[] {\r\n        return this._selecteds;\r\n    }\r\n\r\n    set selecteds(values: T[]) {\r\n        this._selecteds = [];\r\n        for (let i = 0; i < values.length; i++) {\r\n            const value = this.dateTimeAdapter.deserialize(values[i]);\r\n            this._selecteds.push(this.getValidDate(value));\r\n        }\r\n\r\n        this.setSelectedMonths();\r\n    }\r\n\r\n    private _pickerMoment: T | null;\r\n    @Input()\r\n    get pickerMoment() {\r\n        return this._pickerMoment;\r\n    }\r\n\r\n    set pickerMoment(value: T) {\r\n        const oldMoment = this._pickerMoment;\r\n        value = this.dateTimeAdapter.deserialize(value);\r\n        this._pickerMoment =\r\n            this.getValidDate(value) || this.dateTimeAdapter.now();\r\n\r\n        if (\r\n            !this.hasSameYear(oldMoment, this._pickerMoment) &&\r\n            this.initiated\r\n        ) {\r\n            this.generateMonthList();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * A function used to filter which dates are selectable\r\n     * */\r\n    private _dateFilter: (date: T) => boolean;\r\n    @Input()\r\n    get dateFilter() {\r\n        return this._dateFilter;\r\n    }\r\n\r\n    set dateFilter(filter: (date: T) => boolean) {\r\n        this._dateFilter = filter;\r\n        if (this.initiated) {\r\n            this.generateMonthList();\r\n        }\r\n    }\r\n\r\n    /** The minimum selectable date. */\r\n    private _minDate: T | null;\r\n    @Input()\r\n    get minDate(): T | null {\r\n        return this._minDate;\r\n    }\r\n\r\n    set minDate(value: T | null) {\r\n        value = this.dateTimeAdapter.deserialize(value);\r\n        this._minDate = this.getValidDate(value);\r\n        if (this.initiated) {\r\n            this.generateMonthList();\r\n        }\r\n    }\r\n\r\n    /** The maximum selectable date. */\r\n    private _maxDate: T | null;\r\n    @Input()\r\n    get maxDate(): T | null {\r\n        return this._maxDate;\r\n    }\r\n\r\n    set maxDate(value: T | null) {\r\n        value = this.dateTimeAdapter.deserialize(value);\r\n        this._maxDate = this.getValidDate(value);\r\n        if (this.initiated) {\r\n            this.generateMonthList();\r\n        }\r\n    }\r\n\r\n    private readonly monthNames: string[];\r\n\r\n    private _months: CalendarCell[][];\r\n    get months() {\r\n        return this._months;\r\n    }\r\n\r\n    get activeCell(): number {\r\n        if (this._pickerMoment) {\r\n            return this.dateTimeAdapter.getMonth(this._pickerMoment);\r\n        }\r\n    }\r\n\r\n    get isInSingleMode(): boolean {\r\n        return this.selectMode === 'single';\r\n    }\r\n\r\n    get isInRangeMode(): boolean {\r\n        return (\r\n            this.selectMode === 'range' ||\r\n            this.selectMode === 'rangeFrom' ||\r\n            this.selectMode === 'rangeTo'\r\n        );\r\n    }\r\n\r\n    private localeSub: Subscription = Subscription.EMPTY;\r\n\r\n    private initiated = false;\r\n\r\n    public todayMonth: number | null;\r\n\r\n    /**\r\n     * An array to hold all selectedDates' month value\r\n     * the value is the month number in current year\r\n     * */\r\n    public selectedMonths: number[] = [];\r\n\r\n    /**\r\n     * Callback to invoke when a new month is selected\r\n     * */\r\n    @Output()\r\n    readonly change = new EventEmitter<T>();\r\n\r\n    /**\r\n     * Emits the selected year. This doesn't imply a change on the selected date\r\n     * */\r\n    @Output()\r\n    readonly monthSelected = new EventEmitter<T>();\r\n\r\n    /** Emits when any date is activated. */\r\n    @Output()\r\n    readonly pickerMomentChange: EventEmitter<T> = new EventEmitter<T>();\r\n\r\n    /** Emits when use keyboard enter to select a calendar cell */\r\n    @Output()\r\n    readonly keyboardEnter: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    /** The body of calendar table */\r\n    @ViewChild(OwlCalendarBodyComponent, { static: true })\r\n    calendarBodyElm: OwlCalendarBodyComponent;\r\n\r\n    get owlDTCalendarView(): boolean {\r\n        return true;\r\n    }\r\n\r\n    constructor(\r\n        private cdRef: ChangeDetectorRef,\r\n        @Optional() private dateTimeAdapter: DateTimeAdapter<T>,\r\n        @Optional()\r\n        @Inject(OWL_DATE_TIME_FORMATS)\r\n        private dateTimeFormats: OwlDateTimeFormats\r\n    ) {\r\n        this.monthNames = this.dateTimeAdapter.getMonthNames('short');\r\n    }\r\n\r\n    public ngOnInit() {\r\n        this.localeSub = this.dateTimeAdapter.localeChanges.subscribe(() => {\r\n            this.generateMonthList();\r\n            this.cdRef.markForCheck();\r\n        });\r\n    }\r\n\r\n    public ngAfterContentInit(): void {\r\n        this.generateMonthList();\r\n        this.initiated = true;\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        this.localeSub.unsubscribe();\r\n    }\r\n\r\n    /**\r\n     * Handle a calendarCell selected\r\n     */\r\n    public selectCalendarCell(cell: CalendarCell): void {\r\n        this.selectMonth(cell.value);\r\n    }\r\n\r\n    /**\r\n     * Handle a new month selected\r\n     */\r\n    private selectMonth(month: number): void {\r\n        const firstDateOfMonth = this.dateTimeAdapter.createDate(\r\n            this.dateTimeAdapter.getYear(this.pickerMoment),\r\n            month,\r\n            1\r\n        );\r\n\r\n        this.monthSelected.emit(firstDateOfMonth);\r\n\r\n        const daysInMonth = this.dateTimeAdapter.getNumDaysInMonth(\r\n            firstDateOfMonth\r\n        );\r\n        const result = this.dateTimeAdapter.createDate(\r\n            this.dateTimeAdapter.getYear(this.pickerMoment),\r\n            month,\r\n            Math.min(\r\n                daysInMonth,\r\n                this.dateTimeAdapter.getDate(this.pickerMoment)\r\n            ),\r\n            this.dateTimeAdapter.getHours(this.pickerMoment),\r\n            this.dateTimeAdapter.getMinutes(this.pickerMoment),\r\n            this.dateTimeAdapter.getSeconds(this.pickerMoment)\r\n        );\r\n\r\n        this.change.emit(result);\r\n    }\r\n\r\n    /**\r\n     * Handle keydown event on calendar body\r\n     */\r\n    public handleCalendarKeydown(event: KeyboardEvent): void {\r\n        let moment;\r\n        switch (event.keyCode) {\r\n            // minus 1 month\r\n            case LEFT_ARROW:\r\n                moment = this.dateTimeAdapter.addCalendarMonths(\r\n                    this.pickerMoment,\r\n                    -1\r\n                );\r\n                this.pickerMomentChange.emit(moment);\r\n                break;\r\n\r\n            // add 1 month\r\n            case RIGHT_ARROW:\r\n                moment = this.dateTimeAdapter.addCalendarMonths(\r\n                    this.pickerMoment,\r\n                    1\r\n                );\r\n                this.pickerMomentChange.emit(moment);\r\n                break;\r\n\r\n            // minus 3 months\r\n            case UP_ARROW:\r\n                moment = this.dateTimeAdapter.addCalendarMonths(\r\n                    this.pickerMoment,\r\n                    -3\r\n                );\r\n                this.pickerMomentChange.emit(moment);\r\n                break;\r\n\r\n            // add 3 months\r\n            case DOWN_ARROW:\r\n                moment = this.dateTimeAdapter.addCalendarMonths(\r\n                    this.pickerMoment,\r\n                    3\r\n                );\r\n                this.pickerMomentChange.emit(moment);\r\n                break;\r\n\r\n            // move to first month of current year\r\n            case HOME:\r\n                moment = this.dateTimeAdapter.addCalendarMonths(\r\n                    this.pickerMoment,\r\n                    -this.dateTimeAdapter.getMonth(this.pickerMoment)\r\n                );\r\n                this.pickerMomentChange.emit(moment);\r\n                break;\r\n\r\n            // move to last month of current year\r\n            case END:\r\n                moment = this.dateTimeAdapter.addCalendarMonths(\r\n                    this.pickerMoment,\r\n                    11 - this.dateTimeAdapter.getMonth(this.pickerMoment)\r\n                );\r\n                this.pickerMomentChange.emit(moment);\r\n                break;\r\n\r\n            // minus 1 year (or 10 year)\r\n            case PAGE_UP:\r\n                moment = this.dateTimeAdapter.addCalendarYears(\r\n                    this.pickerMoment,\r\n                    event.altKey ? -10 : -1\r\n                );\r\n                this.pickerMomentChange.emit(moment);\r\n                break;\r\n\r\n            // add 1 year (or 10 year)\r\n            case PAGE_DOWN:\r\n                moment = this.dateTimeAdapter.addCalendarYears(\r\n                    this.pickerMoment,\r\n                    event.altKey ? 10 : 1\r\n                );\r\n                this.pickerMomentChange.emit(moment);\r\n                break;\r\n\r\n            // Select current month\r\n            case ENTER:\r\n                this.selectMonth(\r\n                    this.dateTimeAdapter.getMonth(this.pickerMoment)\r\n                );\r\n                this.keyboardEnter.emit();\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n\r\n        this.focusActiveCell();\r\n        event.preventDefault();\r\n    }\r\n\r\n    /**\r\n     * Generate the calendar month list\r\n     * */\r\n    private generateMonthList(): void {\r\n        if (!this.pickerMoment) {\r\n            return;\r\n        }\r\n\r\n        this.setSelectedMonths();\r\n        this.todayMonth = this.getMonthInCurrentYear(\r\n            this.dateTimeAdapter.now()\r\n        );\r\n\r\n        this._months = [];\r\n        for (let i = 0; i < MONTHS_PER_YEAR / MONTHS_PER_ROW; i++) {\r\n            const row = [];\r\n\r\n            for (let j = 0; j < MONTHS_PER_ROW; j++) {\r\n                const month = j + i * MONTHS_PER_ROW;\r\n                const monthCell = this.createMonthCell(month);\r\n                row.push(monthCell);\r\n            }\r\n\r\n            this._months.push(row);\r\n        }\r\n\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * Creates an CalendarCell for the given month.\r\n     */\r\n    private createMonthCell(month: number): CalendarCell {\r\n        const startDateOfMonth = this.dateTimeAdapter.createDate(\r\n            this.dateTimeAdapter.getYear(this.pickerMoment),\r\n            month,\r\n            1\r\n        );\r\n        const ariaLabel = this.dateTimeAdapter.format(\r\n            startDateOfMonth,\r\n            this.dateTimeFormats.monthYearA11yLabel\r\n        );\r\n        const cellClass = 'owl-dt-month-' + month;\r\n        return new CalendarCell(\r\n            month,\r\n            this.monthNames[month],\r\n            ariaLabel,\r\n            this.isMonthEnabled(month),\r\n            false,\r\n            cellClass\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Check if the given month is enable\r\n     */\r\n    private isMonthEnabled(month: number): boolean {\r\n        const firstDateOfMonth = this.dateTimeAdapter.createDate(\r\n            this.dateTimeAdapter.getYear(this.pickerMoment),\r\n            month,\r\n            1\r\n        );\r\n\r\n        // If any date in the month is selectable,\r\n        // we count the month as enable\r\n        for (\r\n            let date = firstDateOfMonth;\r\n            this.dateTimeAdapter.getMonth(date) === month;\r\n            date = this.dateTimeAdapter.addCalendarDays(date, 1)\r\n        ) {\r\n            if (\r\n                !!date &&\r\n                (!this.dateFilter || this.dateFilter(date)) &&\r\n                (!this.minDate ||\r\n                    this.dateTimeAdapter.compare(date, this.minDate) >= 0) &&\r\n                (!this.maxDate ||\r\n                    this.dateTimeAdapter.compare(date, this.maxDate) <= 0)\r\n            ) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Gets the month in this year that the given Date falls on.\r\n     * Returns null if the given Date is in another year.\r\n     */\r\n    private getMonthInCurrentYear(date: T | null): number {\r\n        if (this.getValidDate(date) && this.getValidDate(this._pickerMoment)) {\r\n            const result = this.dateTimeAdapter.compareYear(\r\n                date,\r\n                this._pickerMoment\r\n            );\r\n\r\n            // < 0 : the given date's year is before pickerMoment's year, we return -1 as selected month value.\r\n            // > 0 : the given date's year is after pickerMoment's year, we return 12 as selected month value.\r\n            // 0 : the give date's year is same as the pickerMoment's year, we return the actual month value.\r\n            if (result < 0) {\r\n                return -1;\r\n            } else if (result > 0) {\r\n                return 12;\r\n            } else {\r\n                return this.dateTimeAdapter.getMonth(date);\r\n            }\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set the selectedMonths value\r\n     * In single mode, it has only one value which represent the month the selected date in\r\n     * In range mode, it would has two values, one for the month the fromValue in and the other for the month the toValue in\r\n     * */\r\n    private setSelectedMonths(): void {\r\n        this.selectedMonths = [];\r\n        if (this.isInSingleMode && this.selected) {\r\n            this.selectedMonths[0] = this.getMonthInCurrentYear(this.selected);\r\n        }\r\n\r\n        if (this.isInRangeMode && this.selecteds) {\r\n            this.selectedMonths[0] = this.getMonthInCurrentYear(\r\n                this.selecteds[0]\r\n            );\r\n            this.selectedMonths[1] = this.getMonthInCurrentYear(\r\n                this.selecteds[1]\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check the given dates are in the same year\r\n     */\r\n    private hasSameYear(dateLeft: T, dateRight: T) {\r\n        return !!(\r\n            dateLeft &&\r\n            dateRight &&\r\n            this.dateTimeAdapter.getYear(dateLeft) ===\r\n                this.dateTimeAdapter.getYear(dateRight)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Get a valid date object\r\n     */\r\n    private getValidDate(obj: any): T | null {\r\n        return this.dateTimeAdapter.isDateInstance(obj) &&\r\n            this.dateTimeAdapter.isValid(obj)\r\n            ? obj\r\n            : null;\r\n    }\r\n\r\n    private focusActiveCell() {\r\n        this.calendarBodyElm.focusActiveCell();\r\n    }\r\n}\r\n","/**\r\n * calendar-multi-year-view.component\r\n */\r\n\r\nimport {\r\n    AfterContentInit,\r\n    ChangeDetectionStrategy, ChangeDetectorRef,\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    OnInit,\r\n    Optional,\r\n    Output,\r\n    ViewChild\r\n} from '@angular/core';\r\nimport { DateTimeAdapter } from './adapter/date-time-adapter.class';\r\nimport { CalendarCell, OwlCalendarBodyComponent } from './calendar-body.component';\r\nimport { SelectMode } from './date-time.class';\r\nimport {\r\n    DOWN_ARROW,\r\n    END,\r\n    ENTER,\r\n    HOME,\r\n    LEFT_ARROW,\r\n    PAGE_DOWN,\r\n    PAGE_UP,\r\n    RIGHT_ARROW,\r\n    UP_ARROW\r\n} from '@angular/cdk/keycodes';\r\nimport { OwlDateTimeIntl } from './date-time-picker-intl.service';\r\n\r\nexport const YEARS_PER_ROW = 3;\r\nexport const YEAR_ROWS = 7;\r\n\r\n@Component({\r\n    selector: 'owl-date-time-multi-year-view',\r\n    templateUrl: './calendar-multi-year-view.component.html',\r\n    styleUrls: ['./calendar-multi-year-view.component.scss'],\r\n    host:{\r\n        '[class.owl-dt-calendar-view]': 'owlDTCalendarView',\r\n        '[class.owl-dt-calendar-multi-year-view]': 'owlDTCalendarMultiYearView'\r\n    },\r\n    preserveWhitespaces: false,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\n\r\nexport class OwlMultiYearViewComponent<T> implements OnInit, AfterContentInit {\r\n\r\n    /**\r\n     * The select mode of the picker;\r\n     * */\r\n    private _selectMode: SelectMode = 'single';\r\n    @Input()\r\n    get selectMode(): SelectMode {\r\n        return this._selectMode;\r\n    }\r\n\r\n    set selectMode( val: SelectMode ) {\r\n        this._selectMode = val;\r\n        if (this.initiated) {\r\n            this.setSelectedYears();\r\n            this.cdRef.markForCheck();\r\n        }\r\n    }\r\n\r\n    /** The currently selected date. */\r\n    private _selected: T | null;\r\n    @Input()\r\n    get selected(): T | null {\r\n        return this._selected;\r\n    }\r\n\r\n    set selected( value: T | null ) {\r\n        const oldSelected = this._selected;\r\n        value = this.dateTimeAdapter.deserialize(value);\r\n        this._selected = this.getValidDate(value);\r\n\r\n        if (!this.dateTimeAdapter.isSameDay(oldSelected, this._selected)) {\r\n            this.setSelectedYears();\r\n        }\r\n    }\r\n\r\n    private _selecteds: T[] = [];\r\n    @Input()\r\n    get selecteds(): T[] {\r\n        return this._selecteds;\r\n    }\r\n\r\n    set selecteds( values: T[] ) {\r\n        this._selecteds = values.map(( v ) => {\r\n            v = this.dateTimeAdapter.deserialize(v);\r\n            return this.getValidDate(v);\r\n        });\r\n        this.setSelectedYears();\r\n    }\r\n\r\n    private _pickerMoment: T | null;\r\n    @Input()\r\n    get pickerMoment() {\r\n        return this._pickerMoment;\r\n    }\r\n\r\n    set pickerMoment( value: T ) {\r\n        const oldMoment = this._pickerMoment;\r\n        value = this.dateTimeAdapter.deserialize(value);\r\n        this._pickerMoment = this.getValidDate(value) || this.dateTimeAdapter.now();\r\n\r\n        if (oldMoment && this._pickerMoment &&\r\n            !this.isSameYearList(oldMoment, this._pickerMoment)) {\r\n            this.generateYearList();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * A function used to filter which dates are selectable\r\n     * */\r\n    private _dateFilter: ( date: T ) => boolean;\r\n    @Input()\r\n    get dateFilter() {\r\n        return this._dateFilter;\r\n    }\r\n\r\n    set dateFilter( filter: ( date: T ) => boolean ) {\r\n        this._dateFilter = filter;\r\n        if (this.initiated) {\r\n            this.generateYearList();\r\n        }\r\n    }\r\n\r\n    /** The minimum selectable date. */\r\n    private _minDate: T | null;\r\n    @Input()\r\n    get minDate(): T | null {\r\n        return this._minDate;\r\n    }\r\n\r\n    set minDate( value: T | null ) {\r\n        value = this.dateTimeAdapter.deserialize(value);\r\n        this._minDate = this.getValidDate(value);\r\n        if (this.initiated) {\r\n            this.generateYearList();\r\n        }\r\n    }\r\n\r\n    /** The maximum selectable date. */\r\n    private _maxDate: T | null;\r\n    @Input()\r\n    get maxDate(): T | null {\r\n        return this._maxDate;\r\n    }\r\n\r\n    set maxDate( value: T | null ) {\r\n        value = this.dateTimeAdapter.deserialize(value);\r\n        this._maxDate = this.getValidDate(value);\r\n        if (this.initiated) {\r\n            this.generateYearList();\r\n        }\r\n    }\r\n\r\n    private _todayYear: number;\r\n    get todayYear(): number {\r\n        return this._todayYear;\r\n    }\r\n\r\n    private _years: CalendarCell[][];\r\n    get years() {\r\n        return this._years;\r\n    }\r\n\r\n    private _selectedYears: number[];\r\n    get selectedYears(): number[] {\r\n        return this._selectedYears;\r\n    }\r\n\r\n    private initiated = false;\r\n\r\n    get isInSingleMode(): boolean {\r\n        return this.selectMode === 'single';\r\n    }\r\n\r\n    get isInRangeMode(): boolean {\r\n        return this.selectMode === 'range' || this.selectMode === 'rangeFrom'\r\n            || this.selectMode === 'rangeTo';\r\n    }\r\n\r\n    get activeCell(): number {\r\n        if (this._pickerMoment) {\r\n            return this.dateTimeAdapter.getYear(this._pickerMoment) % (YEARS_PER_ROW * YEAR_ROWS);\r\n        }\r\n    }\r\n\r\n    get tableHeader(): string {\r\n        if (this._years && this._years.length > 0) {\r\n            return `${this._years[0][0].displayValue} ~ ${this._years[YEAR_ROWS - 1][YEARS_PER_ROW - 1].displayValue}`\r\n        }\r\n    }\r\n\r\n    get prevButtonLabel(): string {\r\n        return this.pickerIntl.prevMultiYearLabel;\r\n    }\r\n\r\n    get nextButtonLabel(): string {\r\n        return this.pickerIntl.nextMultiYearLabel;\r\n    }\r\n\r\n    /**\r\n     * Callback to invoke when a new month is selected\r\n     * */\r\n    @Output() readonly change = new EventEmitter<T>();\r\n\r\n    /**\r\n     * Emits the selected year. This doesn't imply a change on the selected date\r\n     * */\r\n    @Output() readonly yearSelected = new EventEmitter<T>();\r\n\r\n    /** Emits when any date is activated. */\r\n    @Output() readonly pickerMomentChange: EventEmitter<T> = new EventEmitter<T>();\r\n\r\n    /** Emits when use keyboard enter to select a calendar cell */\r\n    @Output() readonly keyboardEnter: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    /** The body of calendar table */\r\n    @ViewChild(OwlCalendarBodyComponent, { static: true }) calendarBodyElm: OwlCalendarBodyComponent;\r\n\r\n    get owlDTCalendarView(): boolean {\r\n        return true;\r\n    }\r\n\r\n    get owlDTCalendarMultiYearView(): boolean {\r\n        return true;\r\n    }\r\n\r\n    constructor( private cdRef: ChangeDetectorRef,\r\n                 private pickerIntl: OwlDateTimeIntl,\r\n                 @Optional() private dateTimeAdapter: DateTimeAdapter<T> ) {\r\n    }\r\n\r\n    public ngOnInit() {\r\n    }\r\n\r\n    public ngAfterContentInit(): void {\r\n        this._todayYear = this.dateTimeAdapter.getYear(this.dateTimeAdapter.now());\r\n        this.generateYearList();\r\n        this.initiated = true;\r\n    }\r\n\r\n    /**\r\n     * Handle a calendarCell selected\r\n     */\r\n    public selectCalendarCell( cell: CalendarCell ): void {\r\n        this.selectYear(cell.value);\r\n    }\r\n\r\n    private selectYear( year: number ): void {\r\n        this.yearSelected.emit(this.dateTimeAdapter.createDate(year, 0, 1));\r\n        const firstDateOfMonth = this.dateTimeAdapter.createDate(\r\n            year,\r\n            this.dateTimeAdapter.getMonth(this.pickerMoment),\r\n            1\r\n        );\r\n        const daysInMonth = this.dateTimeAdapter.getNumDaysInMonth(firstDateOfMonth);\r\n        const selected = this.dateTimeAdapter.createDate(\r\n            year,\r\n            this.dateTimeAdapter.getMonth(this.pickerMoment),\r\n            Math.min(daysInMonth, this.dateTimeAdapter.getDate(this.pickerMoment)),\r\n            this.dateTimeAdapter.getHours(this.pickerMoment),\r\n            this.dateTimeAdapter.getMinutes(this.pickerMoment),\r\n            this.dateTimeAdapter.getSeconds(this.pickerMoment),\r\n        );\r\n\r\n        this.change.emit(selected);\r\n    }\r\n\r\n    /**\r\n     * Generate the previous year list\r\n     * */\r\n    public prevYearList( event: any ): void {\r\n        this._pickerMoment = this.dateTimeAdapter.addCalendarYears(this.pickerMoment, -1 * YEAR_ROWS * YEARS_PER_ROW);\r\n        this.generateYearList();\r\n        event.preventDefault();\r\n    }\r\n\r\n    /**\r\n     * Generate the next year list\r\n     * */\r\n    public nextYearList( event: any ): void {\r\n        this._pickerMoment = this.dateTimeAdapter.addCalendarYears(this.pickerMoment, YEAR_ROWS * YEARS_PER_ROW);\r\n        this.generateYearList();\r\n        event.preventDefault();\r\n    }\r\n\r\n    public generateYearList(): void {\r\n        this._years = [];\r\n\r\n        const pickerMomentYear = this.dateTimeAdapter.getYear(this._pickerMoment);\r\n        const offset = pickerMomentYear % (YEARS_PER_ROW * YEAR_ROWS);\r\n\r\n        for (let i = 0; i < YEAR_ROWS; i++) {\r\n            const row = [];\r\n\r\n            for (let j = 0; j < YEARS_PER_ROW; j++) {\r\n                const year = pickerMomentYear - offset + (j + i * YEARS_PER_ROW);\r\n                const yearCell = this.createYearCell(year);\r\n                row.push(yearCell);\r\n            }\r\n\r\n            this._years.push(row);\r\n        }\r\n\r\n        return;\r\n\r\n    }\r\n\r\n    /** Whether the previous period button is enabled. */\r\n    public previousEnabled(): boolean {\r\n        if (!this.minDate) {\r\n            return true;\r\n        }\r\n        return !this.minDate || !this.isSameYearList(this._pickerMoment, this.minDate);\r\n    }\r\n\r\n    /** Whether the next period button is enabled. */\r\n    public nextEnabled(): boolean {\r\n        return !this.maxDate || !this.isSameYearList(this._pickerMoment, this.maxDate);\r\n    }\r\n\r\n    public handleCalendarKeydown( event: KeyboardEvent ): void {\r\n        let moment;\r\n        switch (event.keyCode) {\r\n            // minus 1 year\r\n            case LEFT_ARROW:\r\n                moment = this.dateTimeAdapter.addCalendarYears(this._pickerMoment, -1);\r\n                this.pickerMomentChange.emit(moment);\r\n                break;\r\n\r\n            // add 1 year\r\n            case RIGHT_ARROW:\r\n                moment = this.dateTimeAdapter.addCalendarYears(this._pickerMoment, 1);\r\n                this.pickerMomentChange.emit(moment);\r\n                break;\r\n\r\n            // minus 3 years\r\n            case UP_ARROW:\r\n                moment = this.dateTimeAdapter.addCalendarYears(this._pickerMoment, -1 * YEARS_PER_ROW);\r\n                this.pickerMomentChange.emit(moment);\r\n                break;\r\n\r\n            // add 3 years\r\n            case DOWN_ARROW:\r\n                moment = this.dateTimeAdapter.addCalendarYears(this._pickerMoment, YEARS_PER_ROW);\r\n                this.pickerMomentChange.emit(moment);\r\n                break;\r\n\r\n            // go to the first year of the year page\r\n            case HOME:\r\n                moment = this.dateTimeAdapter.addCalendarYears(this._pickerMoment,\r\n                    -this.dateTimeAdapter.getYear(this._pickerMoment) % (YEARS_PER_ROW * YEAR_ROWS));\r\n                this.pickerMomentChange.emit(moment);\r\n                break;\r\n\r\n            // go to the last year of the year page\r\n            case END:\r\n                moment = this.dateTimeAdapter.addCalendarYears(this._pickerMoment,\r\n                    (YEARS_PER_ROW * YEAR_ROWS) - this.dateTimeAdapter.getYear(this._pickerMoment) % (YEARS_PER_ROW * YEAR_ROWS) - 1);\r\n                this.pickerMomentChange.emit(moment);\r\n                break;\r\n\r\n            // minus 1 year page (or 10 year pages)\r\n            case PAGE_UP:\r\n                moment = this.dateTimeAdapter.addCalendarYears(this.pickerMoment, event.altKey ? -10 * (YEARS_PER_ROW * YEAR_ROWS) : -1 * (YEARS_PER_ROW * YEAR_ROWS));\r\n                this.pickerMomentChange.emit(moment);\r\n                break;\r\n\r\n            // add 1 year page (or 10 year pages)\r\n            case PAGE_DOWN:\r\n                moment = this.dateTimeAdapter.addCalendarYears(this.pickerMoment, event.altKey ? 10 * (YEARS_PER_ROW * YEAR_ROWS) : (YEARS_PER_ROW * YEAR_ROWS));\r\n                this.pickerMomentChange.emit(moment);\r\n                break;\r\n\r\n            case ENTER:\r\n                this.selectYear(this.dateTimeAdapter.getYear(this._pickerMoment));\r\n                this.keyboardEnter.emit();\r\n                break;\r\n\r\n            default:\r\n                return;\r\n        }\r\n\r\n        this.focusActiveCell();\r\n        event.preventDefault();\r\n    }\r\n\r\n    /**\r\n     * Creates an CalendarCell for the given year.\r\n     */\r\n    private createYearCell( year: number ): CalendarCell {\r\n        const startDateOfYear = this.dateTimeAdapter.createDate(year, 0, 1);\r\n        const ariaLabel = this.dateTimeAdapter.getYearName(startDateOfYear);\r\n        const cellClass = 'owl-dt-year-' + year;\r\n        return new CalendarCell(year, year.toString(), ariaLabel, this.isYearEnabled(year), false, cellClass);\r\n    }\r\n\r\n    private setSelectedYears(): void {\r\n\r\n        this._selectedYears = [];\r\n\r\n        if (this.isInSingleMode && this.selected) {\r\n            this._selectedYears[0] = this.dateTimeAdapter.getYear(this.selected);\r\n        }\r\n\r\n        if (this.isInRangeMode && this.selecteds) {\r\n            this._selectedYears = this.selecteds.map(( selected ) => {\r\n                if (this.dateTimeAdapter.isValid(selected)) {\r\n                    return this.dateTimeAdapter.getYear(selected);\r\n                } else {\r\n                    return null;\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    /** Whether the given year is enabled. */\r\n    private isYearEnabled( year: number ) {\r\n        // disable if the year is greater than maxDate lower than minDate\r\n        if (year === undefined || year === null ||\r\n            (this.maxDate && year > this.dateTimeAdapter.getYear(this.maxDate)) ||\r\n            (this.minDate && year < this.dateTimeAdapter.getYear(this.minDate))) {\r\n            return false;\r\n        }\r\n\r\n        // enable if it reaches here and there's no filter defined\r\n        if (!this.dateFilter) {\r\n            return true;\r\n        }\r\n\r\n        const firstOfYear = this.dateTimeAdapter.createDate(year, 0, 1);\r\n\r\n        // If any date in the year is enabled count the year as enabled.\r\n        for (let date = firstOfYear; this.dateTimeAdapter.getYear(date) == year;\r\n             date = this.dateTimeAdapter.addCalendarDays(date, 1)) {\r\n            if (this.dateFilter(date)) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    private isSameYearList( date1: T, date2: T ): boolean {\r\n        return Math.floor(this.dateTimeAdapter.getYear(date1) / (YEARS_PER_ROW * YEAR_ROWS)) ===\r\n            Math.floor(this.dateTimeAdapter.getYear(date2) / (YEARS_PER_ROW * YEAR_ROWS));\r\n    }\r\n\r\n    /**\r\n     * Get a valid date object\r\n     */\r\n    private getValidDate( obj: any ): T | null {\r\n        return (this.dateTimeAdapter.isDateInstance(obj) && this.dateTimeAdapter.isValid(obj)) ? obj : null;\r\n    }\r\n\r\n    private focusActiveCell() {\r\n        this.calendarBodyElm.focusActiveCell();\r\n    }\r\n}\r\n","/**\r\n * timer-box.component\r\n */\r\n\r\nimport {\r\n    ChangeDetectionStrategy,\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    OnDestroy,\r\n    OnInit,\r\n    Output\r\n} from '@angular/core';\r\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\r\n\r\n@Component({\r\n    exportAs: 'owlDateTimeTimerBox',\r\n    selector: 'owl-date-time-timer-box',\r\n    templateUrl: './timer-box.component.html',\r\n    styleUrls: ['./timer-box.component.scss'],\r\n    preserveWhitespaces: false,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    host: {\r\n        '[class.owl-dt-timer-box]': 'owlDTTimerBoxClass'\r\n    }\r\n})\r\n\r\nexport class OwlTimerBoxComponent implements OnInit, OnDestroy {\r\n\r\n    @Input() showDivider = false;\r\n\r\n    @Input() upBtnAriaLabel: string;\r\n\r\n    @Input() upBtnDisabled: boolean;\r\n\r\n    @Input() downBtnAriaLabel: string;\r\n\r\n    @Input() downBtnDisabled: boolean;\r\n\r\n    /**\r\n     * Value would be displayed in the box\r\n     * If it is null, the box would display [value]\r\n     * */\r\n    @Input() boxValue: number;\r\n\r\n    @Input() value: number;\r\n\r\n    @Input() min: number;\r\n\r\n    @Input() max: number;\r\n\r\n    @Input() step = 1;\r\n\r\n    @Input() inputLabel: string;\r\n\r\n    @Input() debounceTime: number = 500;\r\n\r\n    @Output() valueChange = new EventEmitter<number>();\r\n\r\n    @Output() inputChange = new EventEmitter<number>();\r\n\r\n    private inputStream = new Subject<string>();\r\n\r\n    private inputStreamSub = Subscription.EMPTY;\r\n\r\n    get displayValue(): number {\r\n        return this.boxValue || this.value;\r\n    }\r\n\r\n    get owlDTTimerBoxClass(): boolean {\r\n        return true;\r\n    }\r\n\r\n    constructor() {\r\n    }\r\n\r\n    public ngOnInit() {\r\n        this.inputStreamSub = this.inputStream.pipe(\r\n            debounceTime(this.debounceTime),\r\n            distinctUntilChanged()\r\n        ).subscribe(( val: string ) => {\r\n            if (val) {\r\n                const inputValue = coerceNumberProperty(val, 0);\r\n                this.updateValueViaInput(inputValue);\r\n            }\r\n        })\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        this.inputStreamSub.unsubscribe();\r\n    }\r\n\r\n    public upBtnClicked(): void {\r\n        this.updateValue(this.value + this.step);\r\n    }\r\n\r\n    public downBtnClicked(): void {\r\n        this.updateValue(this.value - this.step);\r\n    }\r\n\r\n    public handleInputChange( val: string ): void {\r\n        this.inputStream.next(val);\r\n    }\r\n\r\n    private updateValue( value: number ): void {\r\n        this.valueChange.emit(value);\r\n    }\r\n\r\n    private updateValueViaInput( value: number ): void {\r\n        if (value > this.max || value < this.min) {\r\n            return;\r\n        }\r\n        this.inputChange.emit(value);\r\n    }\r\n}\r\n","/**\r\n * numberFixedLen.pipe\r\n */\r\n\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'numberFixedLen'\r\n})\r\nexport class NumberFixedLenPipe implements PipeTransform {\r\n    transform( num: number, len: number ): any {\r\n        const number = Math.floor(num);\r\n        const length = Math.floor(len);\r\n\r\n        if (num === null || isNaN(number) || isNaN(length)) {\r\n            return num;\r\n        }\r\n\r\n        let numString = number.toString();\r\n\r\n        while (numString.length < length) {\r\n            numString = '0' + numString;\r\n        }\r\n\r\n        return numString;\r\n    }\r\n}\r\n","/**\r\n * date-time-inline.component\r\n */\r\n\r\nimport {\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    Component, EventEmitter,\r\n    forwardRef,\r\n    Inject,\r\n    Input,\r\n    OnInit,\r\n    Optional,\r\n    Output,\r\n    ViewChild\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\r\nimport {\r\n    OwlDateTime,\r\n    PickerMode,\r\n    PickerType,\r\n    SelectMode\r\n} from './date-time.class';\r\nimport { DateTimeAdapter } from './adapter/date-time-adapter.class';\r\nimport {\r\n    OWL_DATE_TIME_FORMATS,\r\n    OwlDateTimeFormats\r\n} from './adapter/date-time-format.class';\r\nimport { OwlDateTimeContainerComponent } from './date-time-picker-container.component';\r\n\r\nexport const OWL_DATETIME_VALUE_ACCESSOR: any = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => OwlDateTimeInlineComponent),\r\n    multi: true\r\n};\r\n\r\n@Component({\r\n    selector: 'owl-date-time-inline',\r\n    templateUrl: './date-time-inline.component.html',\r\n    styleUrls: ['./date-time-inline.component.scss'],\r\n    host: {\r\n        '[class.owl-dt-inline]': 'owlDTInlineClass'\r\n    },\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    preserveWhitespaces: false,\r\n    providers: [OWL_DATETIME_VALUE_ACCESSOR]\r\n})\r\nexport class OwlDateTimeInlineComponent<T> extends OwlDateTime<T>\r\n    implements OnInit, ControlValueAccessor {\r\n    @ViewChild(OwlDateTimeContainerComponent, { static: true })\r\n    container: OwlDateTimeContainerComponent<T>;\r\n\r\n    /**\r\n     * Set the type of the dateTime picker\r\n     *      'both' -- show both calendar and timer\r\n     *      'calendar' -- show only calendar\r\n     *      'timer' -- show only timer\r\n     */\r\n    private _pickerType: PickerType = 'both';\r\n    @Input()\r\n    get pickerType(): PickerType {\r\n        return this._pickerType;\r\n    }\r\n\r\n    set pickerType(val: PickerType) {\r\n        if (val !== this._pickerType) {\r\n            this._pickerType = val;\r\n        }\r\n    }\r\n\r\n    private _disabled = false;\r\n    @Input()\r\n    get disabled(): boolean {\r\n        return !!this._disabled;\r\n    }\r\n\r\n    set disabled(value: boolean) {\r\n        this._disabled = coerceBooleanProperty(value);\r\n    }\r\n\r\n    private _selectMode: SelectMode = 'single';\r\n    @Input()\r\n    get selectMode() {\r\n        return this._selectMode;\r\n    }\r\n\r\n    set selectMode(mode: SelectMode) {\r\n        if (\r\n            mode !== 'single' &&\r\n            mode !== 'range' &&\r\n            mode !== 'rangeFrom' &&\r\n            mode !== 'rangeTo'\r\n        ) {\r\n            throw Error('OwlDateTime Error: invalid selectMode value!');\r\n        }\r\n\r\n        this._selectMode = mode;\r\n    }\r\n\r\n    /** The date to open the calendar to initially. */\r\n    private _startAt: T | null;\r\n    @Input()\r\n    get startAt(): T | null {\r\n        if (this._startAt) {\r\n            return this._startAt;\r\n        }\r\n\r\n        if (this.selectMode === 'single') {\r\n            return this.value || null;\r\n        } else if (\r\n            this.selectMode === 'range' ||\r\n            this.selectMode === 'rangeFrom'\r\n        ) {\r\n            return this.values[0] || null;\r\n        } else if (this.selectMode === 'rangeTo') {\r\n            return this.values[1] || null;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    set startAt(date: T | null) {\r\n        this._startAt = this.getValidDate(\r\n            this.dateTimeAdapter.deserialize(date)\r\n        );\r\n    }\r\n\r\n    private _dateTimeFilter: (date: T | null) => boolean;\r\n    @Input('owlDateTimeFilter')\r\n    get dateTimeFilter() {\r\n        return this._dateTimeFilter;\r\n    }\r\n\r\n    set dateTimeFilter(filter: (date: T | null) => boolean) {\r\n        this._dateTimeFilter = filter;\r\n    }\r\n\r\n    /** The minimum valid date. */\r\n    private _min: T | null;\r\n\r\n    get minDateTime(): T | null {\r\n        return this._min || null;\r\n    }\r\n\r\n    @Input('min')\r\n    set minDateTime(value: T | null) {\r\n        this._min = this.getValidDate(this.dateTimeAdapter.deserialize(value));\r\n        this.changeDetector.markForCheck();\r\n    }\r\n\r\n    /** The maximum valid date. */\r\n    private _max: T | null;\r\n\r\n    get maxDateTime(): T | null {\r\n        return this._max || null;\r\n    }\r\n\r\n    @Input('max')\r\n    set maxDateTime(value: T | null) {\r\n        this._max = this.getValidDate(this.dateTimeAdapter.deserialize(value));\r\n        this.changeDetector.markForCheck();\r\n    }\r\n\r\n    private _value: T | null;\r\n    @Input()\r\n    get value() {\r\n        return this._value;\r\n    }\r\n\r\n    set value(value: T | null) {\r\n        value = this.dateTimeAdapter.deserialize(value);\r\n        value = this.getValidDate(value);\r\n        this._value = value;\r\n        this.selected = value;\r\n    }\r\n\r\n    private _values: T[] = [];\r\n    @Input()\r\n    get values() {\r\n        return this._values;\r\n    }\r\n\r\n    set values(values: T[]) {\r\n        if (values && values.length > 0) {\r\n            values = values.map(v => {\r\n                v = this.dateTimeAdapter.deserialize(v);\r\n                v = this.getValidDate(v);\r\n                return v ? this.dateTimeAdapter.clone(v) : null;\r\n            });\r\n            this._values = [...values];\r\n            this.selecteds = [...values];\r\n        } else {\r\n            this._values = [];\r\n            this.selecteds = [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Emits selected year in multi-year view\r\n     * This doesn't imply a change on the selected date.\r\n     * */\r\n    @Output()\r\n    yearSelected = new EventEmitter<T>();\r\n\r\n    /**\r\n     * Emits selected month in year view\r\n     * This doesn't imply a change on the selected date.\r\n     * */\r\n    @Output()\r\n    monthSelected = new EventEmitter<T>();\r\n\r\n    private _selected: T | null;\r\n    get selected() {\r\n        return this._selected;\r\n    }\r\n\r\n    set selected(value: T | null) {\r\n        this._selected = value;\r\n        this.changeDetector.markForCheck();\r\n    }\r\n\r\n    private _selecteds: T[] = [];\r\n    get selecteds() {\r\n        return this._selecteds;\r\n    }\r\n\r\n    set selecteds(values: T[]) {\r\n        this._selecteds = values;\r\n        this.changeDetector.markForCheck();\r\n    }\r\n\r\n    get opened(): boolean {\r\n        return true;\r\n    }\r\n\r\n    get pickerMode(): PickerMode {\r\n        return 'inline';\r\n    }\r\n\r\n    get isInSingleMode(): boolean {\r\n        return this._selectMode === 'single';\r\n    }\r\n\r\n    get isInRangeMode(): boolean {\r\n        return (\r\n            this._selectMode === 'range' ||\r\n            this._selectMode === 'rangeFrom' ||\r\n            this._selectMode === 'rangeTo'\r\n        );\r\n    }\r\n\r\n    get owlDTInlineClass(): boolean {\r\n        return true;\r\n    }\r\n\r\n    private onModelChange: Function = () => {};\r\n    private onModelTouched: Function = () => {};\r\n\r\n    constructor(\r\n        protected changeDetector: ChangeDetectorRef,\r\n        @Optional() protected dateTimeAdapter: DateTimeAdapter<T>,\r\n        @Optional()\r\n        @Inject(OWL_DATE_TIME_FORMATS)\r\n        protected dateTimeFormats: OwlDateTimeFormats\r\n    ) {\r\n        super(dateTimeAdapter, dateTimeFormats);\r\n    }\r\n\r\n    public ngOnInit() {\r\n        this.container.picker = this;\r\n    }\r\n\r\n    public writeValue(value: any): void {\r\n        if (this.isInSingleMode) {\r\n            this.value = value;\r\n            this.container.pickerMoment = value;\r\n        } else {\r\n            this.values = value;\r\n            this.container.pickerMoment = this._values[\r\n                this.container.activeSelectedIndex\r\n            ];\r\n        }\r\n    }\r\n\r\n    public registerOnChange(fn: any): void {\r\n        this.onModelChange = fn;\r\n    }\r\n\r\n    public registerOnTouched(fn: any): void {\r\n        this.onModelTouched = fn;\r\n    }\r\n\r\n    public setDisabledState(isDisabled: boolean): void {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    public select(date: T[] | T): void {\r\n        if (this.disabled) {\r\n            return;\r\n        }\r\n\r\n        if (Array.isArray(date)) {\r\n            this.values = [...date];\r\n        } else {\r\n            this.value = date;\r\n        }\r\n        this.onModelChange(date);\r\n        this.onModelTouched();\r\n    }\r\n\r\n    /**\r\n     * Emits the selected year in multi-year view\r\n     * */\r\n    public selectYear(normalizedYear: T): void {\r\n        this.yearSelected.emit(normalizedYear);\r\n    }\r\n\r\n    /**\r\n     * Emits selected month in year view\r\n     * */\r\n    public selectMonth(normalizedMonth: T): void {\r\n        this.monthSelected.emit(normalizedMonth);\r\n    }\r\n}\r\n","/**\r\n * dialog.module\r\n */\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { A11yModule } from '@angular/cdk/a11y';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\nimport { OWL_DIALOG_SCROLL_STRATEGY_PROVIDER, OwlDialogService } from './dialog.service';\r\nimport { OwlDialogContainerComponent } from './dialog-container.component';\r\n\r\n@NgModule({\r\n    imports: [CommonModule, A11yModule, OverlayModule, PortalModule],\r\n    exports: [],\r\n    declarations: [\r\n        OwlDialogContainerComponent,\r\n    ],\r\n    providers: [\r\n        OWL_DIALOG_SCROLL_STRATEGY_PROVIDER,\r\n        OwlDialogService,\r\n    ],\r\n    entryComponents: [\r\n        OwlDialogContainerComponent,\r\n    ]\r\n})\r\nexport class OwlDialogModule {\r\n}\r\n","/**\r\n * date-time.module\r\n */\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { A11yModule } from '@angular/cdk/a11y';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { OwlDateTimeTriggerDirective } from './date-time-picker-trigger.directive';\r\nimport { OWL_DTPICKER_SCROLL_STRATEGY_PROVIDER, OwlDateTimeComponent } from './date-time-picker.component';\r\nimport { OwlDateTimeContainerComponent } from './date-time-picker-container.component';\r\nimport { OwlDateTimeInputDirective } from './date-time-picker-input.directive';\r\nimport { OwlDateTimeIntl } from './date-time-picker-intl.service';\r\nimport { OwlMonthViewComponent } from './calendar-month-view.component';\r\nimport { OwlCalendarBodyComponent } from './calendar-body.component';\r\nimport { OwlYearViewComponent } from './calendar-year-view.component';\r\nimport { OwlMultiYearViewComponent } from './calendar-multi-year-view.component';\r\nimport { OwlTimerBoxComponent } from './timer-box.component';\r\nimport { OwlTimerComponent } from './timer.component';\r\nimport { NumberFixedLenPipe } from './numberedFixLen.pipe';\r\nimport { OwlCalendarComponent } from './calendar.component';\r\nimport { OwlDateTimeInlineComponent } from './date-time-inline.component';\r\nimport { OwlDialogModule } from '../dialog/dialog.module';\r\n\r\n@NgModule({\r\n    imports: [CommonModule, OverlayModule, OwlDialogModule, A11yModule],\r\n    exports: [\r\n        OwlCalendarComponent,\r\n        OwlTimerComponent,\r\n        OwlDateTimeTriggerDirective,\r\n        OwlDateTimeInputDirective,\r\n        OwlDateTimeComponent,\r\n        OwlDateTimeInlineComponent,\r\n        OwlMultiYearViewComponent,\r\n        OwlYearViewComponent,\r\n        OwlMonthViewComponent,\r\n    ],\r\n    declarations: [\r\n        OwlDateTimeTriggerDirective,\r\n        OwlDateTimeInputDirective,\r\n        OwlDateTimeComponent,\r\n        OwlDateTimeContainerComponent,\r\n        OwlMultiYearViewComponent,\r\n        OwlYearViewComponent,\r\n        OwlMonthViewComponent,\r\n        OwlTimerComponent,\r\n        OwlTimerBoxComponent,\r\n        OwlCalendarComponent,\r\n        OwlCalendarBodyComponent,\r\n        NumberFixedLenPipe,\r\n        OwlDateTimeInlineComponent,\r\n    ],\r\n    providers: [\r\n        OwlDateTimeIntl,\r\n        OWL_DTPICKER_SCROLL_STRATEGY_PROVIDER,\r\n    ],\r\n    entryComponents: [\r\n        OwlDateTimeContainerComponent,\r\n    ]\r\n})\r\nexport class OwlDateTimeModule {\r\n}\r\n","/**\r\n * native-date-time-adapter.class\r\n */\r\n\r\nimport { Inject, Injectable, Optional } from '@angular/core';\r\nimport { Platform } from '@angular/cdk/platform';\r\nimport {\r\n    DateTimeAdapter,\r\n    OWL_DATE_TIME_LOCALE\r\n} from './date-time-adapter.class';\r\n\r\n/** The default month names to use if Intl API is not available. */\r\nconst DEFAULT_MONTH_NAMES = {\r\n    long: [\r\n        'January',\r\n        'February',\r\n        'March',\r\n        'April',\r\n        'May',\r\n        'June',\r\n        'July',\r\n        'August',\r\n        'September',\r\n        'October',\r\n        'November',\r\n        'December'\r\n    ],\r\n    short: [\r\n        'Jan',\r\n        'Feb',\r\n        'Mar',\r\n        'Apr',\r\n        'May',\r\n        'Jun',\r\n        'Jul',\r\n        'Aug',\r\n        'Sep',\r\n        'Oct',\r\n        'Nov',\r\n        'Dec'\r\n    ],\r\n    narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\r\n};\r\n\r\n/** The default day of the week names to use if Intl API is not available. */\r\nconst DEFAULT_DAY_OF_WEEK_NAMES = {\r\n    long: [\r\n        'Sunday',\r\n        'Monday',\r\n        'Tuesday',\r\n        'Wednesday',\r\n        'Thursday',\r\n        'Friday',\r\n        'Saturday'\r\n    ],\r\n    short: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\r\n    narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S']\r\n};\r\n\r\n/** The default date names to use if Intl API is not available. */\r\nconst DEFAULT_DATE_NAMES = range(31, i => String(i + 1));\r\n\r\n/** Whether the browser supports the Intl API. */\r\nconst SUPPORTS_INTL_API = typeof Intl !== 'undefined';\r\n\r\n/**\r\n * Matches strings that have the form of a valid RFC 3339 string\r\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\r\n * because the regex will match strings an with out of bounds month, date, etc.\r\n */\r\nconst ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\r\n\r\n/** Creates an array and fills it with values. */\r\nfunction range<T>(length: number, valueFunction: (index: number) => T): T[] {\r\n    const valuesArray = Array(length);\r\n    for (let i = 0; i < length; i++) {\r\n        valuesArray[i] = valueFunction(i);\r\n    }\r\n    return valuesArray;\r\n}\r\n\r\n@Injectable()\r\nexport class NativeDateTimeAdapter extends DateTimeAdapter<Date> {\r\n    /** Whether to clamp the date between 1 and 9999 to avoid IE and Edge errors. */\r\n    private readonly _clampDate: boolean;\r\n\r\n    /**\r\n     * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\r\n     * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\r\n     * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\r\n     * will produce `'8/13/1800'`.\r\n     */\r\n    useUtcForDisplay: boolean;\r\n\r\n    constructor(\r\n        @Optional()\r\n        @Inject(OWL_DATE_TIME_LOCALE)\r\n        private owlDateTimeLocale: string,\r\n        platform: Platform\r\n    ) {\r\n        super();\r\n        super.setLocale(owlDateTimeLocale);\r\n\r\n        // IE does its own time zone correction, so we disable this on IE.\r\n        this.useUtcForDisplay = !platform.TRIDENT;\r\n        this._clampDate = platform.TRIDENT || platform.EDGE;\r\n    }\r\n\r\n    public getYear(date: Date): number {\r\n        return date.getFullYear();\r\n    }\r\n\r\n    public getMonth(date: Date): number {\r\n        return date.getMonth();\r\n    }\r\n\r\n    public getDay(date: Date): number {\r\n        return date.getDay();\r\n    }\r\n\r\n    public getDate(date: Date): number {\r\n        return date.getDate();\r\n    }\r\n\r\n    public getHours(date: Date): number {\r\n        return date.getHours();\r\n    }\r\n\r\n    public getMinutes(date: Date): number {\r\n        return date.getMinutes();\r\n    }\r\n\r\n    public getSeconds(date: Date): number {\r\n        return date.getSeconds();\r\n    }\r\n\r\n    public getTime(date: Date): number {\r\n        return date.getTime();\r\n    }\r\n\r\n    public getNumDaysInMonth(date: Date): number {\r\n        const lastDateOfMonth = this.createDateWithOverflow(\r\n            this.getYear(date),\r\n            this.getMonth(date) + 1,\r\n            0\r\n        );\r\n\r\n        return this.getDate(lastDateOfMonth);\r\n    }\r\n\r\n    public differenceInCalendarDays(dateLeft: Date, dateRight: Date): number {\r\n        if (this.isValid(dateLeft) && this.isValid(dateRight)) {\r\n            const dateLeftStartOfDay = this.createDate(\r\n                this.getYear(dateLeft),\r\n                this.getMonth(dateLeft),\r\n                this.getDate(dateLeft)\r\n            );\r\n            const dateRightStartOfDay = this.createDate(\r\n                this.getYear(dateRight),\r\n                this.getMonth(dateRight),\r\n                this.getDate(dateRight)\r\n            );\r\n\r\n            const timeStampLeft =\r\n                this.getTime(dateLeftStartOfDay) -\r\n                dateLeftStartOfDay.getTimezoneOffset() *\r\n                    this.milliseondsInMinute;\r\n            const timeStampRight =\r\n                this.getTime(dateRightStartOfDay) -\r\n                dateRightStartOfDay.getTimezoneOffset() *\r\n                    this.milliseondsInMinute;\r\n            return Math.round(\r\n                (timeStampLeft - timeStampRight) / this.millisecondsInDay\r\n            );\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    public getYearName(date: Date): string {\r\n        if (SUPPORTS_INTL_API) {\r\n            const dtf = new Intl.DateTimeFormat(this.locale, {\r\n                year: 'numeric',\r\n                timeZone: 'utc'\r\n            });\r\n            return this.stripDirectionalityCharacters(this._format(dtf, date));\r\n        }\r\n        return String(this.getYear(date));\r\n    }\r\n\r\n    public getMonthNames(style: 'long' | 'short' | 'narrow'): string[] {\r\n        if (SUPPORTS_INTL_API) {\r\n            const dtf = new Intl.DateTimeFormat(this.locale, {\r\n                month: style,\r\n                timeZone: 'utc'\r\n            });\r\n            return range(12, i =>\r\n                this.stripDirectionalityCharacters(\r\n                    this._format(dtf, new Date(2017, i, 1))\r\n                )\r\n            );\r\n        }\r\n        return DEFAULT_MONTH_NAMES[style];\r\n    }\r\n\r\n    public getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[] {\r\n        if (SUPPORTS_INTL_API) {\r\n            const dtf = new Intl.DateTimeFormat(this.locale, {\r\n                weekday: style,\r\n                timeZone: 'utc'\r\n            });\r\n            return range(7, i =>\r\n                this.stripDirectionalityCharacters(\r\n                    this._format(dtf, new Date(2017, 0, i + 1))\r\n                )\r\n            );\r\n        }\r\n\r\n        return DEFAULT_DAY_OF_WEEK_NAMES[style];\r\n    }\r\n\r\n    public getDateNames(): string[] {\r\n        if (SUPPORTS_INTL_API) {\r\n            const dtf = new Intl.DateTimeFormat(this.locale, {\r\n                day: 'numeric',\r\n                timeZone: 'utc'\r\n            });\r\n            return range(31, i =>\r\n                this.stripDirectionalityCharacters(\r\n                    this._format(dtf, new Date(2017, 0, i + 1))\r\n                )\r\n            );\r\n        }\r\n        return DEFAULT_DATE_NAMES;\r\n    }\r\n\r\n    public toIso8601(date: Date): string {\r\n        return date.toISOString();\r\n    }\r\n\r\n    public isEqual(dateLeft: Date, dateRight: Date): boolean {\r\n        if (this.isValid(dateLeft) && this.isValid(dateRight)) {\r\n            return dateLeft.getTime() === dateRight.getTime();\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public isSameDay(dateLeft: Date, dateRight: Date): boolean {\r\n        if (this.isValid(dateLeft) && this.isValid(dateRight)) {\r\n            const dateLeftStartOfDay = this.clone(dateLeft);\r\n            const dateRightStartOfDay = this.clone(dateRight);\r\n            dateLeftStartOfDay.setHours(0, 0, 0, 0);\r\n            dateRightStartOfDay.setHours(0, 0, 0, 0);\r\n            return (\r\n                dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime()\r\n            );\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public isValid(date: Date): boolean {\r\n        return date && !isNaN(date.getTime());\r\n    }\r\n\r\n    public invalid(): Date {\r\n        return new Date(NaN);\r\n    }\r\n\r\n    public isDateInstance(obj: any): boolean {\r\n        return obj instanceof Date;\r\n    }\r\n\r\n    public addCalendarYears(date: Date, amount: number): Date {\r\n        return this.addCalendarMonths(date, amount * 12);\r\n    }\r\n\r\n    public addCalendarMonths(date: Date, amount: number): Date {\r\n        const result = this.clone(date);\r\n        amount = Number(amount);\r\n\r\n        const desiredMonth = result.getMonth() + amount;\r\n        const dateWithDesiredMonth = new Date(0);\r\n        dateWithDesiredMonth.setFullYear(result.getFullYear(), desiredMonth, 1);\r\n        dateWithDesiredMonth.setHours(0, 0, 0, 0);\r\n\r\n        const daysInMonth = this.getNumDaysInMonth(dateWithDesiredMonth);\r\n        // Set the last day of the new month\r\n        // if the original date was the last day of the longer month\r\n        result.setMonth(desiredMonth, Math.min(daysInMonth, result.getDate()));\r\n        return result;\r\n    }\r\n\r\n    public addCalendarDays(date: Date, amount: number): Date {\r\n        const result = this.clone(date);\r\n        amount = Number(amount);\r\n        result.setDate(result.getDate() + amount);\r\n        return result;\r\n    }\r\n\r\n    public setHours(date: Date, amount: number): Date {\r\n        const result = this.clone(date);\r\n        result.setHours(amount);\r\n        return result;\r\n    }\r\n\r\n    public setMinutes(date: Date, amount: number): Date {\r\n        const result = this.clone(date);\r\n        result.setMinutes(amount);\r\n        return result;\r\n    }\r\n\r\n    public setSeconds(date: Date, amount: number): Date {\r\n        const result = this.clone(date);\r\n        result.setSeconds(amount);\r\n        return result;\r\n    }\r\n\r\n    public createDate(\r\n        year: number,\r\n        month: number,\r\n        date: number,\r\n        hours: number = 0,\r\n        minutes: number = 0,\r\n        seconds: number = 0\r\n    ): Date {\r\n        if (month < 0 || month > 11) {\r\n            throw Error(\r\n                `Invalid month index \"${month}\". Month index has to be between 0 and 11.`\r\n            );\r\n        }\r\n\r\n        if (date < 1) {\r\n            throw Error(\r\n                `Invalid date \"${date}\". Date has to be greater than 0.`\r\n            );\r\n        }\r\n\r\n        if (hours < 0 || hours > 23) {\r\n            throw Error(\r\n                `Invalid hours \"${hours}\". Hours has to be between 0 and 23.`\r\n            );\r\n        }\r\n\r\n        if (minutes < 0 || minutes > 59) {\r\n            throw Error(\r\n                `Invalid minutes \"${minutes}\". Minutes has to between 0 and 59.`\r\n            );\r\n        }\r\n\r\n        if (seconds < 0 || seconds > 59) {\r\n            throw Error(\r\n                `Invalid seconds \"${seconds}\". Seconds has to be between 0 and 59.`\r\n            );\r\n        }\r\n\r\n        const result = this.createDateWithOverflow(\r\n            year,\r\n            month,\r\n            date,\r\n            hours,\r\n            minutes,\r\n            seconds\r\n        );\r\n\r\n        // Check that the date wasn't above the upper bound for the month, causing the month to overflow\r\n        // For example, createDate(2017, 1, 31) would try to create a date 2017/02/31 which is invalid\r\n        if (result.getMonth() !== month) {\r\n            throw Error(\r\n                `Invalid date \"${date}\" for month with index \"${month}\".`\r\n            );\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public clone(date: Date): Date {\r\n        return this.createDate(\r\n            this.getYear(date),\r\n            this.getMonth(date),\r\n            this.getDate(date),\r\n            this.getHours(date),\r\n            this.getMinutes(date),\r\n            this.getSeconds(date)\r\n        );\r\n    }\r\n\r\n    public now(): Date {\r\n        return new Date();\r\n    }\r\n\r\n    public format(date: Date, displayFormat: any): string {\r\n        if (!this.isValid(date)) {\r\n            throw Error('JSNativeDate: Cannot format invalid date.');\r\n        }\r\n\r\n        if (SUPPORTS_INTL_API) {\r\n            if (\r\n                this._clampDate &&\r\n                (date.getFullYear() < 1 || date.getFullYear() > 9999)\r\n            ) {\r\n                date = this.clone(date);\r\n                date.setFullYear(\r\n                    Math.max(1, Math.min(9999, date.getFullYear()))\r\n                );\r\n            }\r\n\r\n            displayFormat = { ...displayFormat, timeZone: 'utc' };\r\n            const dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\r\n            return this.stripDirectionalityCharacters(this._format(dtf, date));\r\n        }\r\n\r\n        return this.stripDirectionalityCharacters(date.toDateString());\r\n    }\r\n\r\n    public parse(value: any, parseFormat: any): Date | null {\r\n        // There is no way using the native JS Date to set the parse format or locale\r\n        if (typeof value === 'number') {\r\n            return new Date(value);\r\n        }\r\n        return value ? new Date(Date.parse(value)) : null;\r\n    }\r\n\r\n    /**\r\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\r\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\r\n     * invalid date for all other values.\r\n     */\r\n    public deserialize(value: any): Date | null {\r\n        if (typeof value === 'string') {\r\n            if (!value) {\r\n                return null;\r\n            }\r\n            // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\r\n            // string is the right format first.\r\n            if (ISO_8601_REGEX.test(value)) {\r\n                const date = new Date(value);\r\n                if (this.isValid(date)) {\r\n                    return date;\r\n                }\r\n            }\r\n        }\r\n        return super.deserialize(value);\r\n    }\r\n\r\n    /**\r\n     * Creates a date but allows the month and date to overflow.\r\n     */\r\n    private createDateWithOverflow(\r\n        year: number,\r\n        month: number,\r\n        date: number,\r\n        hours: number = 0,\r\n        minutes: number = 0,\r\n        seconds: number = 0\r\n    ): Date {\r\n        const result = new Date(year, month, date, hours, minutes, seconds);\r\n\r\n        if (year >= 0 && year < 100) {\r\n            result.setFullYear(this.getYear(result) - 1900);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\r\n     * other browsers do not. We remove them to make output consistent and because they interfere with\r\n     * date parsing.\r\n     */\r\n    private stripDirectionalityCharacters(str: string) {\r\n        return str.replace(/[\\u200e\\u200f]/g, '');\r\n    }\r\n\r\n    /**\r\n     * When converting Date object to string, javascript built-in functions may return wrong\r\n     * results because it applies its internal DST rules. The DST rules around the world change\r\n     * very frequently, and the current valid rule is not always valid in previous years though.\r\n     * We work around this problem building a new Date object which has its internal UTC\r\n     * representation with the local date and time.\r\n     */\r\n    private _format(dtf: Intl.DateTimeFormat, date: Date) {\r\n        const d = new Date(\r\n            Date.UTC(\r\n                date.getFullYear(),\r\n                date.getMonth(),\r\n                date.getDate(),\r\n                date.getHours(),\r\n                date.getMinutes(),\r\n                date.getSeconds(),\r\n                date.getMilliseconds()\r\n            )\r\n        );\r\n        return dtf.format(d);\r\n    }\r\n}\r\n","/**\r\n * native-date-time-format.class\r\n */\r\nimport { OwlDateTimeFormats } from './date-time-format.class';\r\n\r\nexport const OWL_NATIVE_DATE_TIME_FORMATS: OwlDateTimeFormats = {\r\n    parseInput: null,\r\n    fullPickerInput: {year: 'numeric', month: 'numeric', day: 'numeric', hour: 'numeric', minute: 'numeric'},\r\n    datePickerInput: {year: 'numeric', month: 'numeric', day: 'numeric'},\r\n    timePickerInput: {hour: 'numeric', minute: 'numeric'},\r\n    monthYearLabel: {year: 'numeric', month: 'short'},\r\n    dateA11yLabel: {year: 'numeric', month: 'long', day: 'numeric'},\r\n    monthYearA11yLabel: {year: 'numeric', month: 'long'},\r\n};\r\n","/**\r\n * native-date-time.module\r\n */\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { PlatformModule } from '@angular/cdk/platform';\r\nimport { DateTimeAdapter } from './date-time-adapter.class';\r\nimport { NativeDateTimeAdapter } from './native-date-time-adapter.class';\r\nimport { OWL_DATE_TIME_FORMATS } from './date-time-format.class';\r\nimport { OWL_NATIVE_DATE_TIME_FORMATS } from './native-date-time-format.class';\r\n\r\n@NgModule({\r\n    imports: [PlatformModule],\r\n    providers: [\r\n        {provide: DateTimeAdapter, useClass: NativeDateTimeAdapter},\r\n    ],\r\n})\r\nexport class NativeDateTimeModule {\r\n}\r\n\r\n@NgModule({\r\n    imports: [NativeDateTimeModule],\r\n    providers: [{provide: OWL_DATE_TIME_FORMATS, useValue: OWL_NATIVE_DATE_TIME_FORMATS}],\r\n})\r\nexport class OwlNativeDateTimeModule {\r\n}\r\n"],"names":["tslib_1.__extends","tslib_1.__values","observableOf","OWL_DATETIME_VALUE_ACCESSOR"],"mappings":"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"}